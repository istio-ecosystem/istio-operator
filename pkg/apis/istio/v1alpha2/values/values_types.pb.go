// Code generated by protoc-gen-go. DO NOT EDIT.
// source: values_types.proto

package values

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	v1 "k8s.io/api/core/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoadSheddingConfigMode int32

const (
	LoadSheddingConfig_DISABLED LoadSheddingConfigMode = 0
	LoadSheddingConfig_LOG_ONLY LoadSheddingConfigMode = 1
	LoadSheddingConfig_ENFORCE  LoadSheddingConfigMode = 2
)

var LoadSheddingConfigMode_name = map[int32]string{
	0: "DISABLED",
	1: "LOG_ONLY",
	2: "ENFORCE",
}

var LoadSheddingConfigMode_value = map[string]int32{
	"DISABLED": 0,
	"LOG_ONLY": 1,
	"ENFORCE":  2,
}

func (x LoadSheddingConfigMode) String() string {
	return proto.EnumName(LoadSheddingConfigMode_name, int32(x))
}

func (LoadSheddingConfigMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{21, 0}
}

// Specifies the sidecar's default behavior when handling outbound traffic from the application.
type OutboundTrafficPolicyConfigMode int32

const (
	//outbound traffic to unknown destinations will be allowed, in case there are no services or ServiceEntries for the destination port
	OutboundTrafficPolicyConfig_ALLOW_ANY OutboundTrafficPolicyConfigMode = 0
	//restrict outbound traffic to services defined in the service registry as well as those defined through ServiceEntries
	OutboundTrafficPolicyConfig_REGISTRY_ONLY OutboundTrafficPolicyConfigMode = 1
)

var OutboundTrafficPolicyConfigMode_name = map[int32]string{
	0: "ALLOW_ANY",
	1: "REGISTRY_ONLY",
}

var OutboundTrafficPolicyConfigMode_value = map[string]int32{
	"ALLOW_ANY":     0,
	"REGISTRY_ONLY": 1,
}

func (x OutboundTrafficPolicyConfigMode) String() string {
	return proto.EnumName(OutboundTrafficPolicyConfigMode_name, int32(x))
}

func (OutboundTrafficPolicyConfigMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{30, 0}
}

type PilotIngressConfigIngressControllerMode int32

const (
	//all Ingress resources without annotation or with istio annotation.
	PilotIngressConfig_DEFAULT PilotIngressConfigIngressControllerMode = 0
	//only with istio annotation.
	PilotIngressConfig_STRICT PilotIngressConfigIngressControllerMode = 1
	//no ingress or sync.
	PilotIngressConfig_OFF PilotIngressConfigIngressControllerMode = 2
)

var PilotIngressConfigIngressControllerMode_name = map[int32]string{
	0: "DEFAULT",
	1: "STRICT",
	2: "OFF",
}

var PilotIngressConfigIngressControllerMode_value = map[string]int32{
	"DEFAULT": 0,
	"STRICT":  1,
	"OFF":     2,
}

func (x PilotIngressConfigIngressControllerMode) String() string {
	return proto.EnumName(PilotIngressConfigIngressControllerMode_name, int32(x))
}

func (PilotIngressConfigIngressControllerMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{32, 0}
}

// Configure the access log for sidecar to JSON or TEXT
type ProxyConfigAccessLogEncoding int32

const (
	ProxyConfig_JSON ProxyConfigAccessLogEncoding = 0
	ProxyConfig_TEXT ProxyConfigAccessLogEncoding = 1
)

var ProxyConfigAccessLogEncoding_name = map[int32]string{
	0: "JSON",
	1: "TEXT",
}

var ProxyConfigAccessLogEncoding_value = map[string]int32{
	"JSON": 0,
	"TEXT": 1,
}

func (x ProxyConfigAccessLogEncoding) String() string {
	return proto.EnumName(ProxyConfigAccessLogEncoding_name, int32(x))
}

func (ProxyConfigAccessLogEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{41, 0}
}

type ProxyConfigAutoInject int32

const (
	ProxyConfig_ENABLED  ProxyConfigAutoInject = 0
	ProxyConfig_DISABLED ProxyConfigAutoInject = 1
)

var ProxyConfigAutoInject_name = map[int32]string{
	0: "ENABLED",
	1: "DISABLED",
}

var ProxyConfigAutoInject_value = map[string]int32{
	"ENABLED":  0,
	"DISABLED": 1,
}

func (x ProxyConfigAutoInject) String() string {
	return proto.EnumName(ProxyConfigAutoInject_name, int32(x))
}

func (ProxyConfigAutoInject) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{41, 1}
}

// Specifies which tracer to use.
type ProxyConfigTracer int32

const (
	ProxyConfig_ZIPKIN    ProxyConfigTracer = 0
	ProxyConfig_LIGHTSTEP ProxyConfigTracer = 1
	ProxyConfig_DATADOG   ProxyConfigTracer = 2
)

var ProxyConfigTracer_name = map[int32]string{
	0: "ZIPKIN",
	1: "LIGHTSTEP",
	2: "DATADOG",
}

var ProxyConfigTracer_value = map[string]int32{
	"ZIPKIN":    0,
	"LIGHTSTEP": 1,
	"DATADOG":   2,
}

func (x ProxyConfigTracer) String() string {
	return proto.EnumName(ProxyConfigTracer_name, int32(x))
}

func (ProxyConfigTracer) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{41, 2}
}

// AddonIngressConfig is described in istio.io documentation.
type AddonIngressConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Hosts                []string `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddonIngressConfig) Reset()         { *m = AddonIngressConfig{} }
func (m *AddonIngressConfig) String() string { return proto.CompactTextString(m) }
func (*AddonIngressConfig) ProtoMessage()    {}
func (*AddonIngressConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{0}
}

func (m *AddonIngressConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddonIngressConfig.Unmarshal(m, b)
}
func (m *AddonIngressConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddonIngressConfig.Marshal(b, m, deterministic)
}
func (m *AddonIngressConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddonIngressConfig.Merge(m, src)
}
func (m *AddonIngressConfig) XXX_Size() int {
	return xxx_messageInfo_AddonIngressConfig.Size(m)
}
func (m *AddonIngressConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AddonIngressConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AddonIngressConfig proto.InternalMessageInfo

func (m *AddonIngressConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *AddonIngressConfig) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

// ArchConfig is described in istio.io documentation.
type ArchConfig struct {
	// Sets pod scheduling weight for amd64 arch
	Amd64 uint32 `protobuf:"varint,1,opt,name=amd64,proto3" json:"amd64,omitempty"`
	// Sets pod scheduling weight for ppc64le arch.
	Ppc64Le uint32 `protobuf:"varint,2,opt,name=ppc64le,proto3" json:"ppc64le,omitempty"`
	// Sets pod scheduling weight for s390x arch.
	S390X                uint32   `protobuf:"varint,3,opt,name=s390x,proto3" json:"s390x,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchConfig) Reset()         { *m = ArchConfig{} }
func (m *ArchConfig) String() string { return proto.CompactTextString(m) }
func (*ArchConfig) ProtoMessage()    {}
func (*ArchConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{1}
}

func (m *ArchConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchConfig.Unmarshal(m, b)
}
func (m *ArchConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchConfig.Marshal(b, m, deterministic)
}
func (m *ArchConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchConfig.Merge(m, src)
}
func (m *ArchConfig) XXX_Size() int {
	return xxx_messageInfo_ArchConfig.Size(m)
}
func (m *ArchConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ArchConfig proto.InternalMessageInfo

func (m *ArchConfig) GetAmd64() uint32 {
	if m != nil {
		return m.Amd64
	}
	return 0
}

func (m *ArchConfig) GetPpc64Le() uint32 {
	if m != nil {
		return m.Ppc64Le
	}
	return 0
}

func (m *ArchConfig) GetS390X() uint32 {
	if m != nil {
		return m.S390X
	}
	return 0
}

// CNIConfig is described in istio.io documentation.
type CNIConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNIConfig) Reset()         { *m = CNIConfig{} }
func (m *CNIConfig) String() string { return proto.CompactTextString(m) }
func (*CNIConfig) ProtoMessage()    {}
func (*CNIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{2}
}

func (m *CNIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNIConfig.Unmarshal(m, b)
}
func (m *CNIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNIConfig.Marshal(b, m, deterministic)
}
func (m *CNIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNIConfig.Merge(m, src)
}
func (m *CNIConfig) XXX_Size() int {
	return xxx_messageInfo_CNIConfig.Size(m)
}
func (m *CNIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CNIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CNIConfig proto.InternalMessageInfo

func (m *CNIConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// CPUTargetUtilizationConfig is described in istio.io documentation.
type CPUTargetUtilizationConfig struct {
	TargetAverageUtilization int32    `protobuf:"varint,1,opt,name=targetAverageUtilization,proto3" json:"targetAverageUtilization,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CPUTargetUtilizationConfig) Reset()         { *m = CPUTargetUtilizationConfig{} }
func (m *CPUTargetUtilizationConfig) String() string { return proto.CompactTextString(m) }
func (*CPUTargetUtilizationConfig) ProtoMessage()    {}
func (*CPUTargetUtilizationConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{3}
}

func (m *CPUTargetUtilizationConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPUTargetUtilizationConfig.Unmarshal(m, b)
}
func (m *CPUTargetUtilizationConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPUTargetUtilizationConfig.Marshal(b, m, deterministic)
}
func (m *CPUTargetUtilizationConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPUTargetUtilizationConfig.Merge(m, src)
}
func (m *CPUTargetUtilizationConfig) XXX_Size() int {
	return xxx_messageInfo_CPUTargetUtilizationConfig.Size(m)
}
func (m *CPUTargetUtilizationConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CPUTargetUtilizationConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CPUTargetUtilizationConfig proto.InternalMessageInfo

func (m *CPUTargetUtilizationConfig) GetTargetAverageUtilization() int32 {
	if m != nil {
		return m.TargetAverageUtilization
	}
	return 0
}

// CertManagerConfig is described in istio.io documentation.
type CertManagerConfig struct {
	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Hub     string `protobuf:"bytes,2,opt,name=hub,proto3" json:"hub,omitempty"`
	NodeSelector map[string]interface{} `json:"nodeSelector"`
	Resources            *v1.ResourceRequirements `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	Tag                  string                   `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CertManagerConfig) Reset()         { *m = CertManagerConfig{} }
func (m *CertManagerConfig) String() string { return proto.CompactTextString(m) }
func (*CertManagerConfig) ProtoMessage()    {}
func (*CertManagerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{4}
}

func (m *CertManagerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertManagerConfig.Unmarshal(m, b)
}
func (m *CertManagerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertManagerConfig.Marshal(b, m, deterministic)
}
func (m *CertManagerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertManagerConfig.Merge(m, src)
}
func (m *CertManagerConfig) XXX_Size() int {
	return xxx_messageInfo_CertManagerConfig.Size(m)
}
func (m *CertManagerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CertManagerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CertManagerConfig proto.InternalMessageInfo

func (m *CertManagerConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *CertManagerConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *CertManagerConfig) GetResources() *v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *CertManagerConfig) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

// CoreDNSConfig is described in istio.io documentation.
type CoreDNSConfig struct {
	CoreDNSImage       string `protobuf:"bytes,1,opt,name=coreDNSImage,proto3" json:"coreDNSImage,omitempty"`
	CoreDNSPluginImage string `protobuf:"bytes,2,opt,name=coreDNSPluginImage,proto3" json:"coreDNSPluginImage,omitempty"`
	Enabled            bool   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	NodeSelector       map[string]interface{} `json:"nodeSelector,omitempty"`
	ReplicaCount         uint32   `protobuf:"varint,4,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreDNSConfig) Reset()         { *m = CoreDNSConfig{} }
func (m *CoreDNSConfig) String() string { return proto.CompactTextString(m) }
func (*CoreDNSConfig) ProtoMessage()    {}
func (*CoreDNSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{5}
}

func (m *CoreDNSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreDNSConfig.Unmarshal(m, b)
}
func (m *CoreDNSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreDNSConfig.Marshal(b, m, deterministic)
}
func (m *CoreDNSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreDNSConfig.Merge(m, src)
}
func (m *CoreDNSConfig) XXX_Size() int {
	return xxx_messageInfo_CoreDNSConfig.Size(m)
}
func (m *CoreDNSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreDNSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CoreDNSConfig proto.InternalMessageInfo

func (m *CoreDNSConfig) GetCoreDNSImage() string {
	if m != nil {
		return m.CoreDNSImage
	}
	return ""
}

func (m *CoreDNSConfig) GetCoreDNSPluginImage() string {
	if m != nil {
		return m.CoreDNSPluginImage
	}
	return ""
}

func (m *CoreDNSConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *CoreDNSConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

// DefaultPodDisruptionBudgetConfig is described in istio.io documentation.
type DefaultPodDisruptionBudgetConfig struct {
	// k8s PodDisruptionBudget settings.
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultPodDisruptionBudgetConfig) Reset()         { *m = DefaultPodDisruptionBudgetConfig{} }
func (m *DefaultPodDisruptionBudgetConfig) String() string { return proto.CompactTextString(m) }
func (*DefaultPodDisruptionBudgetConfig) ProtoMessage()    {}
func (*DefaultPodDisruptionBudgetConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{6}
}

func (m *DefaultPodDisruptionBudgetConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Unmarshal(m, b)
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Marshal(b, m, deterministic)
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Merge(m, src)
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_Size() int {
	return xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Size(m)
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultPodDisruptionBudgetConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultPodDisruptionBudgetConfig proto.InternalMessageInfo

func (m *DefaultPodDisruptionBudgetConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// DefaultResourcesConfig is described in istio.io documentation.
type DefaultResourcesConfig struct {
	// k8s resources settings.
	Requests             *ResourcesRequestsConfig `protobuf:"bytes,1,opt,name=requests,proto3" json:"requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DefaultResourcesConfig) Reset()         { *m = DefaultResourcesConfig{} }
func (m *DefaultResourcesConfig) String() string { return proto.CompactTextString(m) }
func (*DefaultResourcesConfig) ProtoMessage()    {}
func (*DefaultResourcesConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{7}
}

func (m *DefaultResourcesConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultResourcesConfig.Unmarshal(m, b)
}
func (m *DefaultResourcesConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultResourcesConfig.Marshal(b, m, deterministic)
}
func (m *DefaultResourcesConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultResourcesConfig.Merge(m, src)
}
func (m *DefaultResourcesConfig) XXX_Size() int {
	return xxx_messageInfo_DefaultResourcesConfig.Size(m)
}
func (m *DefaultResourcesConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultResourcesConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultResourcesConfig proto.InternalMessageInfo

func (m *DefaultResourcesConfig) GetRequests() *ResourcesRequestsConfig {
	if m != nil {
		return m.Requests
	}
	return nil
}

// EgressGatewayConfig is described in istio.io documentation.
type EgressGatewayConfig struct {
	AutoscaleEnabled bool                        `protobuf:"varint,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	AutoscaleMax     uint32                      `protobuf:"varint,2,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	AutoscaleMin     uint32                      `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	ConnectTimeout   string                      `protobuf:"bytes,4,opt,name=connectTimeout,proto3" json:"connectTimeout,omitempty"`
	Cpu              *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
	DrainDuration    *duration.Duration          `protobuf:"bytes,6,opt,name=drainDuration,proto3" json:"drainDuration,omitempty"`
	Enabled          bool                        `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Env              map[string]string           `protobuf:"bytes,8,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels           *GatewayLabelsConfig        `protobuf:"bytes,9,opt,name=labels,proto3" json:"labels,omitempty"`
	NodeSelector     map[string]string           `protobuf:"bytes,10,rep,name=nodeSelector,proto3" json:"nodeSelector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PodAnnotations                   map[string]interface{}      `json:"podAnnotations,omitempty"`
	PodAntiAffinityLabelSelector     []map[string]interface{}    `json:"podAntiAffinityLabelSelector"`
	PodAntiAffinityTermLabelSelector []map[string]interface{}    `json:"podAntiAffinityTermLabelSelector"`
	Ports         []*PortsConfig           `protobuf:"bytes,11,rep,name=ports,proto3" json:"ports,omitempty"`
	Resources     *v1.ResourceRequirements `protobuf:"bytes,12,opt,name=resources,proto3" json:"resources,omitempty"`
	SecretVolumes []*SecretVolume          `protobuf:"bytes,13,rep,name=secretVolumes,proto3" json:"secretVolumes,omitempty"`
	ServiceAnnotations               map[string]interface{}      `json:"serviceAnnotations,omitempty"`
	Type                             v1.ServiceType          `json:"type,omitempty"`
	Zvpn                 *ZeroVPNConfig `protobuf:"bytes,14,opt,name=zvpn,proto3" json:"zvpn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EgressGatewayConfig) Reset()         { *m = EgressGatewayConfig{} }
func (m *EgressGatewayConfig) String() string { return proto.CompactTextString(m) }
func (*EgressGatewayConfig) ProtoMessage()    {}
func (*EgressGatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{8}
}

func (m *EgressGatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EgressGatewayConfig.Unmarshal(m, b)
}
func (m *EgressGatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EgressGatewayConfig.Marshal(b, m, deterministic)
}
func (m *EgressGatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EgressGatewayConfig.Merge(m, src)
}
func (m *EgressGatewayConfig) XXX_Size() int {
	return xxx_messageInfo_EgressGatewayConfig.Size(m)
}
func (m *EgressGatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EgressGatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EgressGatewayConfig proto.InternalMessageInfo

func (m *EgressGatewayConfig) GetAutoscaleEnabled() bool {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return false
}

func (m *EgressGatewayConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *EgressGatewayConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

func (m *EgressGatewayConfig) GetConnectTimeout() string {
	if m != nil {
		return m.ConnectTimeout
	}
	return ""
}

func (m *EgressGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *EgressGatewayConfig) GetDrainDuration() *duration.Duration {
	if m != nil {
		return m.DrainDuration
	}
	return nil
}

func (m *EgressGatewayConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *EgressGatewayConfig) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *EgressGatewayConfig) GetLabels() *GatewayLabelsConfig {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *EgressGatewayConfig) GetNodeSelector() map[string]string {
	if m != nil {
		return m.NodeSelector
	}
	return nil
}

func (m *EgressGatewayConfig) GetPorts() []*PortsConfig {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *EgressGatewayConfig) GetResources() *v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *EgressGatewayConfig) GetSecretVolumes() []*SecretVolume {
	if m != nil {
		return m.SecretVolumes
	}
	return nil
}

func (m *EgressGatewayConfig) GetZvpn() *ZeroVPNConfig {
	if m != nil {
		return m.Zvpn
	}
	return nil
}

// EnvoyMetricsConfig is described in istio.io documentation.
type EnvoyMetricsConfig struct {
	// Enables the Envoy Metrics Service.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Sets the destination Envoy Metrics Service address in Envoy.
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// Sets the destination Envoy Metrics Service port in Envoy.
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvoyMetricsConfig) Reset()         { *m = EnvoyMetricsConfig{} }
func (m *EnvoyMetricsConfig) String() string { return proto.CompactTextString(m) }
func (*EnvoyMetricsConfig) ProtoMessage()    {}
func (*EnvoyMetricsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{9}
}

func (m *EnvoyMetricsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvoyMetricsConfig.Unmarshal(m, b)
}
func (m *EnvoyMetricsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvoyMetricsConfig.Marshal(b, m, deterministic)
}
func (m *EnvoyMetricsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvoyMetricsConfig.Merge(m, src)
}
func (m *EnvoyMetricsConfig) XXX_Size() int {
	return xxx_messageInfo_EnvoyMetricsConfig.Size(m)
}
func (m *EnvoyMetricsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvoyMetricsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EnvoyMetricsConfig proto.InternalMessageInfo

func (m *EnvoyMetricsConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *EnvoyMetricsConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *EnvoyMetricsConfig) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// GalleyConfig is described in istio.io documentation.
type GalleyConfig struct {
	Enabled bool              `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Image   string            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Mesh    map[string]string `protobuf:"bytes,3,rep,name=mesh,proto3" json:"mesh,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PodAntiAffinityLabelSelector     []map[string]interface{} `json:"podAntiAffinityLabelSelector"`
	PodAntiAffinityTermLabelSelector []map[string]interface{} `json:"podAntiAffinityTermLabelSelector"`
	ReplicaCount         uint32                   `protobuf:"varint,4,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	Resources            *v1.ResourceRequirements `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GalleyConfig) Reset()         { *m = GalleyConfig{} }
func (m *GalleyConfig) String() string { return proto.CompactTextString(m) }
func (*GalleyConfig) ProtoMessage()    {}
func (*GalleyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{10}
}

func (m *GalleyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GalleyConfig.Unmarshal(m, b)
}
func (m *GalleyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GalleyConfig.Marshal(b, m, deterministic)
}
func (m *GalleyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GalleyConfig.Merge(m, src)
}
func (m *GalleyConfig) XXX_Size() int {
	return xxx_messageInfo_GalleyConfig.Size(m)
}
func (m *GalleyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GalleyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GalleyConfig proto.InternalMessageInfo

func (m *GalleyConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *GalleyConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *GalleyConfig) GetMesh() map[string]string {
	if m != nil {
		return m.Mesh
	}
	return nil
}

func (m *GalleyConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

func (m *GalleyConfig) GetResources() *v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

// GatewayLabelsConfig is described in istio.io documentation.
type GatewayLabelsConfig struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Istio                string   `protobuf:"bytes,2,opt,name=istio,proto3" json:"istio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayLabelsConfig) Reset()         { *m = GatewayLabelsConfig{} }
func (m *GatewayLabelsConfig) String() string { return proto.CompactTextString(m) }
func (*GatewayLabelsConfig) ProtoMessage()    {}
func (*GatewayLabelsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{11}
}

func (m *GatewayLabelsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayLabelsConfig.Unmarshal(m, b)
}
func (m *GatewayLabelsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayLabelsConfig.Marshal(b, m, deterministic)
}
func (m *GatewayLabelsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayLabelsConfig.Merge(m, src)
}
func (m *GatewayLabelsConfig) XXX_Size() int {
	return xxx_messageInfo_GatewayLabelsConfig.Size(m)
}
func (m *GatewayLabelsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayLabelsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayLabelsConfig proto.InternalMessageInfo

func (m *GatewayLabelsConfig) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *GatewayLabelsConfig) GetIstio() string {
	if m != nil {
		return m.Istio
	}
	return ""
}

// GatewaysConfig is described in istio.io documentation.
type GatewaysConfig struct {
	IstioEgressgateway   *EgressGatewayConfig  `protobuf:"bytes,1,opt,name=istio_egressgateway,json=istioEgressgateway,proto3" json:"istio_egressgateway,omitempty"`
	Enabled              bool                  `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IstioIlbgateway      *ILBGatewayConfig     `protobuf:"bytes,3,opt,name=istio_ilbgateway,json=istioIlbgateway,proto3" json:"istio_ilbgateway,omitempty"`
	IstioIngressgateway  *IngressGatewayConfig `protobuf:"bytes,4,opt,name=istio_ingressgateway,json=istioIngressgateway,proto3" json:"istio_ingressgateway,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GatewaysConfig) Reset()         { *m = GatewaysConfig{} }
func (m *GatewaysConfig) String() string { return proto.CompactTextString(m) }
func (*GatewaysConfig) ProtoMessage()    {}
func (*GatewaysConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{12}
}

func (m *GatewaysConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewaysConfig.Unmarshal(m, b)
}
func (m *GatewaysConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewaysConfig.Marshal(b, m, deterministic)
}
func (m *GatewaysConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewaysConfig.Merge(m, src)
}
func (m *GatewaysConfig) XXX_Size() int {
	return xxx_messageInfo_GatewaysConfig.Size(m)
}
func (m *GatewaysConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewaysConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewaysConfig proto.InternalMessageInfo

func (m *GatewaysConfig) GetIstioEgressgateway() *EgressGatewayConfig {
	if m != nil {
		return m.IstioEgressgateway
	}
	return nil
}

func (m *GatewaysConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *GatewaysConfig) GetIstioIlbgateway() *ILBGatewayConfig {
	if m != nil {
		return m.IstioIlbgateway
	}
	return nil
}

func (m *GatewaysConfig) GetIstioIngressgateway() *IngressGatewayConfig {
	if m != nil {
		return m.IstioIngressgateway
	}
	return nil
}

type GlobalConfig struct {
	Arch *ArchConfig `protobuf:"bytes,30,opt,name=arch,proto3" json:"arch,omitempty"`
	// Configuration validation component namespace
	ConfigNamespace string `protobuf:"bytes,1,opt,name=configNamespace,proto3" json:"configNamespace,omitempty"`
	// Enables server-side validation of configuration.
	ConfigValidation bool `protobuf:"varint,2,opt,name=configValidation,proto3" json:"configValidation,omitempty"`
	// Enables MTLS for control plane.
	ControlPlaneSecurityEnabled bool `protobuf:"varint,3,opt,name=controlPlaneSecurityEnabled,proto3" json:"controlPlaneSecurityEnabled,omitempty"`
	// K8s NodeSelector
	DefaultNodeSelector map[string]string `protobuf:"bytes,31,rep,name=defaultNodeSelector,proto3" json:"defaultNodeSelector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// k8s PodDisruptionBudget settings.
	DefaultPodDisruptionBudget *DefaultPodDisruptionBudgetConfig `protobuf:"bytes,4,opt,name=defaultPodDisruptionBudget,proto3" json:"defaultPodDisruptionBudget,omitempty"`
	// Selects whether policy enforcement is installed.
	DisablePolicyChecks bool                    `protobuf:"varint,5,opt,name=disablePolicyChecks,proto3" json:"disablePolicyChecks,omitempty"`
	DefaultResources    *DefaultResourcesConfig `protobuf:"bytes,6,opt,name=defaultResources,proto3" json:"defaultResources,omitempty"`
	// Enable helm test
	EnableHelmTest bool `protobuf:"varint,7,opt,name=enableHelmTest,proto3" json:"enableHelmTest,omitempty"`
	// Enables tracing.
	EnableTracing bool `protobuf:"varint,8,opt,name=enableTracing,proto3" json:"enableTracing,omitempty"`
	// Root for docker image paths.
	Hub string `protobuf:"bytes,9,opt,name=hub,proto3" json:"hub,omitempty"`
	ImagePullPolicy             v1.PullPolicy                 `json:"imagePullPolicy,omitempty"`
	// Default namespace.
	IstioNamespace    string                   `protobuf:"bytes,10,opt,name=istioNamespace,proto3" json:"istioNamespace,omitempty"`
	LocalityLbSetting map[string]string        `protobuf:"bytes,32,rep,name=localityLbSetting,proto3" json:"localityLbSetting,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	K8SIngress        *KubernetesIngressConfig `protobuf:"bytes,11,opt,name=k8sIngress,proto3" json:"k8sIngress,omitempty"`
	Logging           *GlobalLoggingConfig     `protobuf:"bytes,12,opt,name=logging,proto3" json:"logging,omitempty"`
	MeshExpansion     *MeshExpansionConfig     `protobuf:"bytes,13,opt,name=meshExpansion,proto3" json:"meshExpansion,omitempty"`
	MeshNetworks      map[string]string        `protobuf:"bytes,33,rep,name=meshNetworks,proto3" json:"meshNetworks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Monitor port number for all control plane components.
	MonitoringPort uint32              `protobuf:"varint,14,opt,name=monitoringPort,proto3" json:"monitoringPort,omitempty"`
	Mtls           *MTLSConfig         `protobuf:"bytes,15,opt,name=mtls,proto3" json:"mtls,omitempty"`
	MultiCluster   *MultiClusterConfig `protobuf:"bytes,16,opt,name=multiCluster,proto3" json:"multiCluster,omitempty"`
	// Restricts the applications namespace that the controller manages.
	OneNamespace          bool                         `protobuf:"varint,17,opt,name=oneNamespace,proto3" json:"oneNamespace,omitempty"`
	OutboundTrafficPolicy *OutboundTrafficPolicyConfig `protobuf:"bytes,18,opt,name=outboundTrafficPolicy,proto3" json:"outboundTrafficPolicy,omitempty"`
	// If set, allows traffic in cases when the mixer policy service cannot be reached.
	PolicyCheckFailOpen bool `protobuf:"varint,19,opt,name=policyCheckFailOpen,proto3" json:"policyCheckFailOpen,omitempty"`
	// Namespace of policy components
	PolicyNamespace string `protobuf:"bytes,20,opt,name=policyNamespace,proto3" json:"policyNamespace,omitempty"`
	// k8s priorityClassName.
	PriorityClassName string           `protobuf:"bytes,21,opt,name=priorityClassName,proto3" json:"priorityClassName,omitempty"`
	Proxy             *ProxyConfig     `protobuf:"bytes,22,opt,name=proxy,proto3" json:"proxy,omitempty"`
	ProxyInit         *ProxyInitConfig `protobuf:"bytes,23,opt,name=proxy_init,json=proxyInit,proto3" json:"proxy_init,omitempty"`
	Sds               *SDSConfig       `protobuf:"bytes,24,opt,name=sds,proto3" json:"sds,omitempty"`
	// Version tag for docker images.
	Tag string `protobuf:"bytes,25,opt,name=tag,proto3" json:"tag,omitempty"`
	// Namespace of telemetry components
	TelemetryNamespace string `protobuf:"bytes,26,opt,name=telemetryNamespace,proto3" json:"telemetryNamespace,omitempty"`
	// test
	Tracer *TracerConfig `protobuf:"bytes,27,opt,name=tracer,proto3" json:"tracer,omitempty"`
	// Specifies the trust domain that corresponds to the root cert of CA.
	TrustDomain string `protobuf:"bytes,28,opt,name=trustDomain,proto3" json:"trustDomain,omitempty"`
	// Selects use of Mesh Configuration Protocol to configure Pilot.
	UseMCP               bool     `protobuf:"varint,29,opt,name=useMCP,proto3" json:"useMCP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalConfig) Reset()         { *m = GlobalConfig{} }
func (m *GlobalConfig) String() string { return proto.CompactTextString(m) }
func (*GlobalConfig) ProtoMessage()    {}
func (*GlobalConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{13}
}

func (m *GlobalConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalConfig.Unmarshal(m, b)
}
func (m *GlobalConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalConfig.Marshal(b, m, deterministic)
}
func (m *GlobalConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalConfig.Merge(m, src)
}
func (m *GlobalConfig) XXX_Size() int {
	return xxx_messageInfo_GlobalConfig.Size(m)
}
func (m *GlobalConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalConfig proto.InternalMessageInfo

func (m *GlobalConfig) GetArch() *ArchConfig {
	if m != nil {
		return m.Arch
	}
	return nil
}

func (m *GlobalConfig) GetConfigNamespace() string {
	if m != nil {
		return m.ConfigNamespace
	}
	return ""
}

func (m *GlobalConfig) GetConfigValidation() bool {
	if m != nil {
		return m.ConfigValidation
	}
	return false
}

func (m *GlobalConfig) GetControlPlaneSecurityEnabled() bool {
	if m != nil {
		return m.ControlPlaneSecurityEnabled
	}
	return false
}

func (m *GlobalConfig) GetDefaultNodeSelector() map[string]string {
	if m != nil {
		return m.DefaultNodeSelector
	}
	return nil
}

func (m *GlobalConfig) GetDefaultPodDisruptionBudget() *DefaultPodDisruptionBudgetConfig {
	if m != nil {
		return m.DefaultPodDisruptionBudget
	}
	return nil
}

func (m *GlobalConfig) GetDisablePolicyChecks() bool {
	if m != nil {
		return m.DisablePolicyChecks
	}
	return false
}

func (m *GlobalConfig) GetDefaultResources() *DefaultResourcesConfig {
	if m != nil {
		return m.DefaultResources
	}
	return nil
}

func (m *GlobalConfig) GetEnableHelmTest() bool {
	if m != nil {
		return m.EnableHelmTest
	}
	return false
}

func (m *GlobalConfig) GetEnableTracing() bool {
	if m != nil {
		return m.EnableTracing
	}
	return false
}

func (m *GlobalConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *GlobalConfig) GetIstioNamespace() string {
	if m != nil {
		return m.IstioNamespace
	}
	return ""
}

func (m *GlobalConfig) GetLocalityLbSetting() map[string]string {
	if m != nil {
		return m.LocalityLbSetting
	}
	return nil
}

func (m *GlobalConfig) GetK8SIngress() *KubernetesIngressConfig {
	if m != nil {
		return m.K8SIngress
	}
	return nil
}

func (m *GlobalConfig) GetLogging() *GlobalLoggingConfig {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *GlobalConfig) GetMeshExpansion() *MeshExpansionConfig {
	if m != nil {
		return m.MeshExpansion
	}
	return nil
}

func (m *GlobalConfig) GetMeshNetworks() map[string]string {
	if m != nil {
		return m.MeshNetworks
	}
	return nil
}

func (m *GlobalConfig) GetMonitoringPort() uint32 {
	if m != nil {
		return m.MonitoringPort
	}
	return 0
}

func (m *GlobalConfig) GetMtls() *MTLSConfig {
	if m != nil {
		return m.Mtls
	}
	return nil
}

func (m *GlobalConfig) GetMultiCluster() *MultiClusterConfig {
	if m != nil {
		return m.MultiCluster
	}
	return nil
}

func (m *GlobalConfig) GetOneNamespace() bool {
	if m != nil {
		return m.OneNamespace
	}
	return false
}

func (m *GlobalConfig) GetOutboundTrafficPolicy() *OutboundTrafficPolicyConfig {
	if m != nil {
		return m.OutboundTrafficPolicy
	}
	return nil
}

func (m *GlobalConfig) GetPolicyCheckFailOpen() bool {
	if m != nil {
		return m.PolicyCheckFailOpen
	}
	return false
}

func (m *GlobalConfig) GetPolicyNamespace() string {
	if m != nil {
		return m.PolicyNamespace
	}
	return ""
}

func (m *GlobalConfig) GetPriorityClassName() string {
	if m != nil {
		return m.PriorityClassName
	}
	return ""
}

func (m *GlobalConfig) GetProxy() *ProxyConfig {
	if m != nil {
		return m.Proxy
	}
	return nil
}

func (m *GlobalConfig) GetProxyInit() *ProxyInitConfig {
	if m != nil {
		return m.ProxyInit
	}
	return nil
}

func (m *GlobalConfig) GetSds() *SDSConfig {
	if m != nil {
		return m.Sds
	}
	return nil
}

func (m *GlobalConfig) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *GlobalConfig) GetTelemetryNamespace() string {
	if m != nil {
		return m.TelemetryNamespace
	}
	return ""
}

func (m *GlobalConfig) GetTracer() *TracerConfig {
	if m != nil {
		return m.Tracer
	}
	return nil
}

func (m *GlobalConfig) GetTrustDomain() string {
	if m != nil {
		return m.TrustDomain
	}
	return ""
}

func (m *GlobalConfig) GetUseMCP() bool {
	if m != nil {
		return m.UseMCP
	}
	return false
}

// GlobalLoggingConfig is described in istio.io documentation.
type GlobalLoggingConfig struct {
	Level                string   `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalLoggingConfig) Reset()         { *m = GlobalLoggingConfig{} }
func (m *GlobalLoggingConfig) String() string { return proto.CompactTextString(m) }
func (*GlobalLoggingConfig) ProtoMessage()    {}
func (*GlobalLoggingConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{14}
}

func (m *GlobalLoggingConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalLoggingConfig.Unmarshal(m, b)
}
func (m *GlobalLoggingConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalLoggingConfig.Marshal(b, m, deterministic)
}
func (m *GlobalLoggingConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalLoggingConfig.Merge(m, src)
}
func (m *GlobalLoggingConfig) XXX_Size() int {
	return xxx_messageInfo_GlobalLoggingConfig.Size(m)
}
func (m *GlobalLoggingConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalLoggingConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalLoggingConfig proto.InternalMessageInfo

func (m *GlobalLoggingConfig) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

// ILBGatewayConfig is described in istio.io documentation.
type ILBGatewayConfig struct {
	AutoscaleEnabled bool                        `protobuf:"varint,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	AutoscaleMax     uint32                      `protobuf:"varint,2,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	AutoscaleMin     uint32                      `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	Enabled          bool                        `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Cpu              *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Labels           *GatewayLabelsConfig        `protobuf:"bytes,6,opt,name=labels,proto3" json:"labels,omitempty"`
	LoadBalancerIP   string                      `protobuf:"bytes,7,opt,name=loadBalancerIP,proto3" json:"loadBalancerIP,omitempty"`
	NodeSelector       map[string]interface{}      `json:"nodeSelector,omitempty"`
	PodAnnotations     map[string]interface{}      `json:"podAnnotations,omitempty"`
	Ports                []*PortsConfig           `protobuf:"bytes,8,rep,name=ports,proto3" json:"ports,omitempty"`
	Resources            *v1.ResourceRequirements `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"`
	SecretVolumes        []*SecretVolume          `protobuf:"bytes,10,rep,name=secretVolumes,proto3" json:"secretVolumes,omitempty"`
	Type                 v1.ServiceType       `json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ILBGatewayConfig) Reset()         { *m = ILBGatewayConfig{} }
func (m *ILBGatewayConfig) String() string { return proto.CompactTextString(m) }
func (*ILBGatewayConfig) ProtoMessage()    {}
func (*ILBGatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{15}
}

func (m *ILBGatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ILBGatewayConfig.Unmarshal(m, b)
}
func (m *ILBGatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ILBGatewayConfig.Marshal(b, m, deterministic)
}
func (m *ILBGatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ILBGatewayConfig.Merge(m, src)
}
func (m *ILBGatewayConfig) XXX_Size() int {
	return xxx_messageInfo_ILBGatewayConfig.Size(m)
}
func (m *ILBGatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ILBGatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ILBGatewayConfig proto.InternalMessageInfo

func (m *ILBGatewayConfig) GetAutoscaleEnabled() bool {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return false
}

func (m *ILBGatewayConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *ILBGatewayConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

func (m *ILBGatewayConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *ILBGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ILBGatewayConfig) GetLabels() *GatewayLabelsConfig {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ILBGatewayConfig) GetLoadBalancerIP() string {
	if m != nil {
		return m.LoadBalancerIP
	}
	return ""
}

func (m *ILBGatewayConfig) GetPorts() []*PortsConfig {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *ILBGatewayConfig) GetResources() *v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ILBGatewayConfig) GetSecretVolumes() []*SecretVolume {
	if m != nil {
		return m.SecretVolumes
	}
	return nil
}

// IngressGatewayConfig is described in istio.io documentation.
type IngressGatewayConfig struct {
	AutoscaleEnabled         bool                        `protobuf:"varint,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	AutoscaleMax             uint32                      `protobuf:"varint,2,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	AutoscaleMin             uint32                      `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	ConnectTimeout           string                      `protobuf:"bytes,4,opt,name=connectTimeout,proto3" json:"connectTimeout,omitempty"`
	Cpu                      *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
	CustomService            bool                        `protobuf:"varint,6,opt,name=customService,proto3" json:"customService,omitempty"`
	Debug                    string                      `protobuf:"bytes,7,opt,name=debug,proto3" json:"debug,omitempty"`
	Domain                   string                      `protobuf:"bytes,8,opt,name=domain,proto3" json:"domain,omitempty"`
	DrainDuration            *duration.Duration          `protobuf:"bytes,9,opt,name=drainDuration,proto3" json:"drainDuration,omitempty"`
	Enabled                  bool                        `protobuf:"varint,10,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Env                      map[string]string           `protobuf:"bytes,11,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExternalIPs              []string                    `protobuf:"bytes,12,rep,name=externalIPs,proto3" json:"externalIPs,omitempty"`
	K8SIngress               bool                        `protobuf:"varint,13,opt,name=k8sIngress,proto3" json:"k8sIngress,omitempty"`
	K8SIngressHttps          bool                        `protobuf:"varint,14,opt,name=k8sIngressHttps,proto3" json:"k8sIngressHttps,omitempty"`
	Labels                   *GatewayLabelsConfig        `protobuf:"bytes,15,opt,name=labels,proto3" json:"labels,omitempty"`
	LoadBalancerIP           string                      `protobuf:"bytes,16,opt,name=loadBalancerIP,proto3" json:"loadBalancerIP,omitempty"`
	LoadBalancerSourceRanges []string                    `protobuf:"bytes,17,rep,name=loadBalancerSourceRanges,proto3" json:"loadBalancerSourceRanges,omitempty"`
	MeshExpansionPorts       []*PortsConfig              `protobuf:"bytes,18,rep,name=meshExpansionPorts,proto3" json:"meshExpansionPorts,omitempty"`
	NodeSelector                     map[string]interface{}      `json:"nodeSelector,omitempty"`
	PodAnnotations                   map[string]interface{}      `json:"podAnnotations,omitempty"`
	PodAntiAffinityLabelSelector     []map[string]interface{}    `json:"podAntiAffinityLabelSelector"`
	PodAntiAffinityTermLabelSelector []map[string]interface{}    `json:"podAntiAffinityTermLabelSelector"`
	Ports        []*PortsConfig `protobuf:"bytes,19,rep,name=ports,proto3" json:"ports,omitempty"`
	ReplicaCount uint32         `protobuf:"varint,20,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	Resources                        map[string]interface{}      `json:"resources,omitempty"`
	Sds           *IngressGatewaySdsConfig `protobuf:"bytes,21,opt,name=sds,proto3" json:"sds,omitempty"`
	SecretVolumes []*SecretVolume          `protobuf:"bytes,22,rep,name=secretVolumes,proto3" json:"secretVolumes,omitempty"`
	ServiceAnnotations               map[string]interface{}      `json:"serviceAnnotations,omitempty"`
	Type                             v1.ServiceType          `json:"type,omitempty"`
	Zvpn                 *IngressGatewayZvpnConfig `protobuf:"bytes,23,opt,name=zvpn,proto3" json:"zvpn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *IngressGatewayConfig) Reset()         { *m = IngressGatewayConfig{} }
func (m *IngressGatewayConfig) String() string { return proto.CompactTextString(m) }
func (*IngressGatewayConfig) ProtoMessage()    {}
func (*IngressGatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{16}
}

func (m *IngressGatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngressGatewayConfig.Unmarshal(m, b)
}
func (m *IngressGatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngressGatewayConfig.Marshal(b, m, deterministic)
}
func (m *IngressGatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngressGatewayConfig.Merge(m, src)
}
func (m *IngressGatewayConfig) XXX_Size() int {
	return xxx_messageInfo_IngressGatewayConfig.Size(m)
}
func (m *IngressGatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IngressGatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IngressGatewayConfig proto.InternalMessageInfo

func (m *IngressGatewayConfig) GetAutoscaleEnabled() bool {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return false
}

func (m *IngressGatewayConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *IngressGatewayConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

func (m *IngressGatewayConfig) GetConnectTimeout() string {
	if m != nil {
		return m.ConnectTimeout
	}
	return ""
}

func (m *IngressGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *IngressGatewayConfig) GetCustomService() bool {
	if m != nil {
		return m.CustomService
	}
	return false
}

func (m *IngressGatewayConfig) GetDebug() string {
	if m != nil {
		return m.Debug
	}
	return ""
}

func (m *IngressGatewayConfig) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *IngressGatewayConfig) GetDrainDuration() *duration.Duration {
	if m != nil {
		return m.DrainDuration
	}
	return nil
}

func (m *IngressGatewayConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *IngressGatewayConfig) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *IngressGatewayConfig) GetExternalIPs() []string {
	if m != nil {
		return m.ExternalIPs
	}
	return nil
}

func (m *IngressGatewayConfig) GetK8SIngress() bool {
	if m != nil {
		return m.K8SIngress
	}
	return false
}

func (m *IngressGatewayConfig) GetK8SIngressHttps() bool {
	if m != nil {
		return m.K8SIngressHttps
	}
	return false
}

func (m *IngressGatewayConfig) GetLabels() *GatewayLabelsConfig {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *IngressGatewayConfig) GetLoadBalancerIP() string {
	if m != nil {
		return m.LoadBalancerIP
	}
	return ""
}

func (m *IngressGatewayConfig) GetLoadBalancerSourceRanges() []string {
	if m != nil {
		return m.LoadBalancerSourceRanges
	}
	return nil
}

func (m *IngressGatewayConfig) GetMeshExpansionPorts() []*PortsConfig {
	if m != nil {
		return m.MeshExpansionPorts
	}
	return nil
}

func (m *IngressGatewayConfig) GetPorts() []*PortsConfig {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *IngressGatewayConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

func (m *IngressGatewayConfig) GetSds() *IngressGatewaySdsConfig {
	if m != nil {
		return m.Sds
	}
	return nil
}

func (m *IngressGatewayConfig) GetSecretVolumes() []*SecretVolume {
	if m != nil {
		return m.SecretVolumes
	}
	return nil
}

func (m *IngressGatewayConfig) GetZvpn() *IngressGatewayZvpnConfig {
	if m != nil {
		return m.Zvpn
	}
	return nil
}

// IngressGatewaySdsConfig is described in istio.io documentation.
type IngressGatewaySdsConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Image                string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IngressGatewaySdsConfig) Reset()         { *m = IngressGatewaySdsConfig{} }
func (m *IngressGatewaySdsConfig) String() string { return proto.CompactTextString(m) }
func (*IngressGatewaySdsConfig) ProtoMessage()    {}
func (*IngressGatewaySdsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{17}
}

func (m *IngressGatewaySdsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngressGatewaySdsConfig.Unmarshal(m, b)
}
func (m *IngressGatewaySdsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngressGatewaySdsConfig.Marshal(b, m, deterministic)
}
func (m *IngressGatewaySdsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngressGatewaySdsConfig.Merge(m, src)
}
func (m *IngressGatewaySdsConfig) XXX_Size() int {
	return xxx_messageInfo_IngressGatewaySdsConfig.Size(m)
}
func (m *IngressGatewaySdsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IngressGatewaySdsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IngressGatewaySdsConfig proto.InternalMessageInfo

func (m *IngressGatewaySdsConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *IngressGatewaySdsConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

// IngressGatewayZvpnConfig is described in istio.io documentation.
type IngressGatewayZvpnConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Suffix               string   `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IngressGatewayZvpnConfig) Reset()         { *m = IngressGatewayZvpnConfig{} }
func (m *IngressGatewayZvpnConfig) String() string { return proto.CompactTextString(m) }
func (*IngressGatewayZvpnConfig) ProtoMessage()    {}
func (*IngressGatewayZvpnConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{18}
}

func (m *IngressGatewayZvpnConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngressGatewayZvpnConfig.Unmarshal(m, b)
}
func (m *IngressGatewayZvpnConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngressGatewayZvpnConfig.Marshal(b, m, deterministic)
}
func (m *IngressGatewayZvpnConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngressGatewayZvpnConfig.Merge(m, src)
}
func (m *IngressGatewayZvpnConfig) XXX_Size() int {
	return xxx_messageInfo_IngressGatewayZvpnConfig.Size(m)
}
func (m *IngressGatewayZvpnConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IngressGatewayZvpnConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IngressGatewayZvpnConfig proto.InternalMessageInfo

func (m *IngressGatewayZvpnConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *IngressGatewayZvpnConfig) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

// KubernetesEnvMixerAdapterConfig is described in istio.io documentation.
type KubernetesEnvMixerAdapterConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesEnvMixerAdapterConfig) Reset()         { *m = KubernetesEnvMixerAdapterConfig{} }
func (m *KubernetesEnvMixerAdapterConfig) String() string { return proto.CompactTextString(m) }
func (*KubernetesEnvMixerAdapterConfig) ProtoMessage()    {}
func (*KubernetesEnvMixerAdapterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{19}
}

func (m *KubernetesEnvMixerAdapterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubernetesEnvMixerAdapterConfig.Unmarshal(m, b)
}
func (m *KubernetesEnvMixerAdapterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubernetesEnvMixerAdapterConfig.Marshal(b, m, deterministic)
}
func (m *KubernetesEnvMixerAdapterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesEnvMixerAdapterConfig.Merge(m, src)
}
func (m *KubernetesEnvMixerAdapterConfig) XXX_Size() int {
	return xxx_messageInfo_KubernetesEnvMixerAdapterConfig.Size(m)
}
func (m *KubernetesEnvMixerAdapterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesEnvMixerAdapterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesEnvMixerAdapterConfig proto.InternalMessageInfo

func (m *KubernetesEnvMixerAdapterConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// KubernetesIngressConfig represents the configuration for Kubernetes Ingress.
type KubernetesIngressConfig struct {
	// Enables gateway for legacy k8s Ingress.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Enables gateway for legacy k8s Ingress.
	EnableHttps bool `protobuf:"varint,2,opt,name=enableHttps,proto3" json:"enableHttps,omitempty"`
	// Sets the gateway name for legacy k8s Ingress.
	GatewayName          string   `protobuf:"bytes,3,opt,name=gatewayName,proto3" json:"gatewayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesIngressConfig) Reset()         { *m = KubernetesIngressConfig{} }
func (m *KubernetesIngressConfig) String() string { return proto.CompactTextString(m) }
func (*KubernetesIngressConfig) ProtoMessage()    {}
func (*KubernetesIngressConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{20}
}

func (m *KubernetesIngressConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubernetesIngressConfig.Unmarshal(m, b)
}
func (m *KubernetesIngressConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubernetesIngressConfig.Marshal(b, m, deterministic)
}
func (m *KubernetesIngressConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesIngressConfig.Merge(m, src)
}
func (m *KubernetesIngressConfig) XXX_Size() int {
	return xxx_messageInfo_KubernetesIngressConfig.Size(m)
}
func (m *KubernetesIngressConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesIngressConfig.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesIngressConfig proto.InternalMessageInfo

func (m *KubernetesIngressConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *KubernetesIngressConfig) GetEnableHttps() bool {
	if m != nil {
		return m.EnableHttps
	}
	return false
}

func (m *KubernetesIngressConfig) GetGatewayName() string {
	if m != nil {
		return m.GatewayName
	}
	return ""
}

// LoadSheddingConfig configs when mixer starts rejecting grpc requests.
type LoadSheddingConfig struct {
	LatencyThreshold     string   `protobuf:"bytes,1,opt,name=latencyThreshold,proto3" json:"latencyThreshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadSheddingConfig) Reset()         { *m = LoadSheddingConfig{} }
func (m *LoadSheddingConfig) String() string { return proto.CompactTextString(m) }
func (*LoadSheddingConfig) ProtoMessage()    {}
func (*LoadSheddingConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{21}
}

func (m *LoadSheddingConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadSheddingConfig.Unmarshal(m, b)
}
func (m *LoadSheddingConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadSheddingConfig.Marshal(b, m, deterministic)
}
func (m *LoadSheddingConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadSheddingConfig.Merge(m, src)
}
func (m *LoadSheddingConfig) XXX_Size() int {
	return xxx_messageInfo_LoadSheddingConfig.Size(m)
}
func (m *LoadSheddingConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadSheddingConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LoadSheddingConfig proto.InternalMessageInfo

func (m *LoadSheddingConfig) GetLatencyThreshold() string {
	if m != nil {
		return m.LatencyThreshold
	}
	return ""
}

// MTLSConfig is described in istio.io documentation.
type MTLSConfig struct {
	// Enables MTLS for service to service traffic.
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MTLSConfig) Reset()         { *m = MTLSConfig{} }
func (m *MTLSConfig) String() string { return proto.CompactTextString(m) }
func (*MTLSConfig) ProtoMessage()    {}
func (*MTLSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{22}
}

func (m *MTLSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MTLSConfig.Unmarshal(m, b)
}
func (m *MTLSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MTLSConfig.Marshal(b, m, deterministic)
}
func (m *MTLSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MTLSConfig.Merge(m, src)
}
func (m *MTLSConfig) XXX_Size() int {
	return xxx_messageInfo_MTLSConfig.Size(m)
}
func (m *MTLSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MTLSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MTLSConfig proto.InternalMessageInfo

func (m *MTLSConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// MeshExpansionConfig is described in istio.io documentation.
type MeshExpansionConfig struct {
	// Exposes Pilot and Citadel mTLS on the ingress gateway.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Exposes Pilot and Citadel mTLS and the plain text Pilot ports on an internal gateway.
	UseILB               bool     `protobuf:"varint,2,opt,name=useILB,proto3" json:"useILB,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeshExpansionConfig) Reset()         { *m = MeshExpansionConfig{} }
func (m *MeshExpansionConfig) String() string { return proto.CompactTextString(m) }
func (*MeshExpansionConfig) ProtoMessage()    {}
func (*MeshExpansionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{23}
}

func (m *MeshExpansionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshExpansionConfig.Unmarshal(m, b)
}
func (m *MeshExpansionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshExpansionConfig.Marshal(b, m, deterministic)
}
func (m *MeshExpansionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshExpansionConfig.Merge(m, src)
}
func (m *MeshExpansionConfig) XXX_Size() int {
	return xxx_messageInfo_MeshExpansionConfig.Size(m)
}
func (m *MeshExpansionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshExpansionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MeshExpansionConfig proto.InternalMessageInfo

func (m *MeshExpansionConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *MeshExpansionConfig) GetUseILB() bool {
	if m != nil {
		return m.UseILB
	}
	return false
}

// MixerAdaptersConfig is described in istio.io documentation.
type MixerAdaptersConfig struct {
	Kubernetesenv        *KubernetesEnvMixerAdapterConfig `protobuf:"bytes,1,opt,name=kubernetesenv,proto3" json:"kubernetesenv,omitempty"`
	Prometheus           *PrometheusMixerAdapterConfig    `protobuf:"bytes,2,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	Stdio                *StdioMixerAdapterConfig         `protobuf:"bytes,3,opt,name=stdio,proto3" json:"stdio,omitempty"`
	UseAdapterCRDs       bool                             `protobuf:"varint,4,opt,name=useAdapterCRDs,proto3" json:"useAdapterCRDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *MixerAdaptersConfig) Reset()         { *m = MixerAdaptersConfig{} }
func (m *MixerAdaptersConfig) String() string { return proto.CompactTextString(m) }
func (*MixerAdaptersConfig) ProtoMessage()    {}
func (*MixerAdaptersConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{24}
}

func (m *MixerAdaptersConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MixerAdaptersConfig.Unmarshal(m, b)
}
func (m *MixerAdaptersConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MixerAdaptersConfig.Marshal(b, m, deterministic)
}
func (m *MixerAdaptersConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MixerAdaptersConfig.Merge(m, src)
}
func (m *MixerAdaptersConfig) XXX_Size() int {
	return xxx_messageInfo_MixerAdaptersConfig.Size(m)
}
func (m *MixerAdaptersConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MixerAdaptersConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MixerAdaptersConfig proto.InternalMessageInfo

func (m *MixerAdaptersConfig) GetKubernetesenv() *KubernetesEnvMixerAdapterConfig {
	if m != nil {
		return m.Kubernetesenv
	}
	return nil
}

func (m *MixerAdaptersConfig) GetPrometheus() *PrometheusMixerAdapterConfig {
	if m != nil {
		return m.Prometheus
	}
	return nil
}

func (m *MixerAdaptersConfig) GetStdio() *StdioMixerAdapterConfig {
	if m != nil {
		return m.Stdio
	}
	return nil
}

func (m *MixerAdaptersConfig) GetUseAdapterCRDs() bool {
	if m != nil {
		return m.UseAdapterCRDs
	}
	return false
}

// MixerConfig is described in istio.io documentation.
type MixerConfig struct {
	Adapters             *MixerAdaptersConfig  `protobuf:"bytes,1,opt,name=adapters,proto3" json:"adapters,omitempty"`
	Enabled              bool                  `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Env                  map[string]string     `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Image                string                `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Policy               *MixerPolicyConfig    `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`
	Telemetry            *MixerTelemetryConfig `protobuf:"bytes,6,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MixerConfig) Reset()         { *m = MixerConfig{} }
func (m *MixerConfig) String() string { return proto.CompactTextString(m) }
func (*MixerConfig) ProtoMessage()    {}
func (*MixerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{25}
}

func (m *MixerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MixerConfig.Unmarshal(m, b)
}
func (m *MixerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MixerConfig.Marshal(b, m, deterministic)
}
func (m *MixerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MixerConfig.Merge(m, src)
}
func (m *MixerConfig) XXX_Size() int {
	return xxx_messageInfo_MixerConfig.Size(m)
}
func (m *MixerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MixerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MixerConfig proto.InternalMessageInfo

func (m *MixerConfig) GetAdapters() *MixerAdaptersConfig {
	if m != nil {
		return m.Adapters
	}
	return nil
}

func (m *MixerConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *MixerConfig) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *MixerConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *MixerConfig) GetPolicy() *MixerPolicyConfig {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *MixerConfig) GetTelemetry() *MixerTelemetryConfig {
	if m != nil {
		return m.Telemetry
	}
	return nil
}

// MixerPolicyConfig is described in istio.io documentation.
type MixerPolicyConfig struct {
	AutoscaleEnabled bool                        `protobuf:"varint,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	AutoscaleMax     uint32                      `protobuf:"varint,2,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	AutoscaleMin     uint32                      `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	Cpu              *CPUTargetUtilizationConfig `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Enabled          bool                        `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Image            string                      `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	PodAnnotations   map[string]interface{}      `json:"podAnnotations,omitempty"`
	ReplicaCount         uint32   `protobuf:"varint,7,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MixerPolicyConfig) Reset()         { *m = MixerPolicyConfig{} }
func (m *MixerPolicyConfig) String() string { return proto.CompactTextString(m) }
func (*MixerPolicyConfig) ProtoMessage()    {}
func (*MixerPolicyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{26}
}

func (m *MixerPolicyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MixerPolicyConfig.Unmarshal(m, b)
}
func (m *MixerPolicyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MixerPolicyConfig.Marshal(b, m, deterministic)
}
func (m *MixerPolicyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MixerPolicyConfig.Merge(m, src)
}
func (m *MixerPolicyConfig) XXX_Size() int {
	return xxx_messageInfo_MixerPolicyConfig.Size(m)
}
func (m *MixerPolicyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MixerPolicyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MixerPolicyConfig proto.InternalMessageInfo

func (m *MixerPolicyConfig) GetAutoscaleEnabled() bool {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return false
}

func (m *MixerPolicyConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *MixerPolicyConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

func (m *MixerPolicyConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *MixerPolicyConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *MixerPolicyConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *MixerPolicyConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

// MixerTelemetryConfig is described in istio.io documentation.
type MixerTelemetryConfig struct {
	Adapters         *MixerAdaptersConfig        `protobuf:"bytes,1,opt,name=adapters,proto3" json:"adapters,omitempty"`
	AutoscaleEnabled bool                        `protobuf:"varint,2,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	AutoscaleMax     uint32                      `protobuf:"varint,3,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	AutoscaleMin     uint32                      `protobuf:"varint,4,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	Cpu              *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Enabled          bool                        `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Env              map[string]string           `protobuf:"bytes,7,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Image            string                      `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Loadshedding     *LoadSheddingConfig         `protobuf:"bytes,9,opt,name=loadshedding,proto3" json:"loadshedding,omitempty"`
	NodeSelector           map[string]interface{}     `json:"nodeSelector,omitempty"`
	PodAnnotations         map[string]interface{}     `json:"podAnnotations,omitempty"`
	ReplicaCount           uint32                   `protobuf:"varint,10,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	Resources              *v1.ResourceRequirements `protobuf:"bytes,11,opt,name=resources,proto3" json:"resources,omitempty"`
	SessionAffinityEnabled bool                     `protobuf:"varint,12,opt,name=sessionAffinityEnabled,proto3" json:"sessionAffinityEnabled,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                 `json:"-"`
	XXX_unrecognized       []byte                   `json:"-"`
	XXX_sizecache          int32                    `json:"-"`
}

func (m *MixerTelemetryConfig) Reset()         { *m = MixerTelemetryConfig{} }
func (m *MixerTelemetryConfig) String() string { return proto.CompactTextString(m) }
func (*MixerTelemetryConfig) ProtoMessage()    {}
func (*MixerTelemetryConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{27}
}

func (m *MixerTelemetryConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MixerTelemetryConfig.Unmarshal(m, b)
}
func (m *MixerTelemetryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MixerTelemetryConfig.Marshal(b, m, deterministic)
}
func (m *MixerTelemetryConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MixerTelemetryConfig.Merge(m, src)
}
func (m *MixerTelemetryConfig) XXX_Size() int {
	return xxx_messageInfo_MixerTelemetryConfig.Size(m)
}
func (m *MixerTelemetryConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MixerTelemetryConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MixerTelemetryConfig proto.InternalMessageInfo

func (m *MixerTelemetryConfig) GetAdapters() *MixerAdaptersConfig {
	if m != nil {
		return m.Adapters
	}
	return nil
}

func (m *MixerTelemetryConfig) GetAutoscaleEnabled() bool {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return false
}

func (m *MixerTelemetryConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *MixerTelemetryConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

func (m *MixerTelemetryConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *MixerTelemetryConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *MixerTelemetryConfig) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *MixerTelemetryConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *MixerTelemetryConfig) GetLoadshedding() *LoadSheddingConfig {
	if m != nil {
		return m.Loadshedding
	}
	return nil
}

func (m *MixerTelemetryConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

func (m *MixerTelemetryConfig) GetResources() *v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *MixerTelemetryConfig) GetSessionAffinityEnabled() bool {
	if m != nil {
		return m.SessionAffinityEnabled
	}
	return false
}

// MultiClusterConfig is described in istio.io documentation.
type MultiClusterConfig struct {
	// Enables the connection between two kubernetes clusters via their respective ingressgateway services. Use if the pods in each cluster cannot directly talk to one another.
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiClusterConfig) Reset()         { *m = MultiClusterConfig{} }
func (m *MultiClusterConfig) String() string { return proto.CompactTextString(m) }
func (*MultiClusterConfig) ProtoMessage()    {}
func (*MultiClusterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{28}
}

func (m *MultiClusterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiClusterConfig.Unmarshal(m, b)
}
func (m *MultiClusterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiClusterConfig.Marshal(b, m, deterministic)
}
func (m *MultiClusterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiClusterConfig.Merge(m, src)
}
func (m *MultiClusterConfig) XXX_Size() int {
	return xxx_messageInfo_MultiClusterConfig.Size(m)
}
func (m *MultiClusterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiClusterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MultiClusterConfig proto.InternalMessageInfo

func (m *MultiClusterConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// NodeAgentConfig is described in istio.io documentation.
type NodeAgentConfig struct {
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Env          map[string]interface{} `json:"env,omitempty"`
	Image                string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeAgentConfig) Reset()         { *m = NodeAgentConfig{} }
func (m *NodeAgentConfig) String() string { return proto.CompactTextString(m) }
func (*NodeAgentConfig) ProtoMessage()    {}
func (*NodeAgentConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{29}
}

func (m *NodeAgentConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAgentConfig.Unmarshal(m, b)
}
func (m *NodeAgentConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAgentConfig.Marshal(b, m, deterministic)
}
func (m *NodeAgentConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAgentConfig.Merge(m, src)
}
func (m *NodeAgentConfig) XXX_Size() int {
	return xxx_messageInfo_NodeAgentConfig.Size(m)
}
func (m *NodeAgentConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAgentConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAgentConfig proto.InternalMessageInfo

func (m *NodeAgentConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *NodeAgentConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

// OutboundTrafficPolicyConfig is described in istio.io documentation.
type OutboundTrafficPolicyConfig struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutboundTrafficPolicyConfig) Reset()         { *m = OutboundTrafficPolicyConfig{} }
func (m *OutboundTrafficPolicyConfig) String() string { return proto.CompactTextString(m) }
func (*OutboundTrafficPolicyConfig) ProtoMessage()    {}
func (*OutboundTrafficPolicyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{30}
}

func (m *OutboundTrafficPolicyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutboundTrafficPolicyConfig.Unmarshal(m, b)
}
func (m *OutboundTrafficPolicyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutboundTrafficPolicyConfig.Marshal(b, m, deterministic)
}
func (m *OutboundTrafficPolicyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutboundTrafficPolicyConfig.Merge(m, src)
}
func (m *OutboundTrafficPolicyConfig) XXX_Size() int {
	return xxx_messageInfo_OutboundTrafficPolicyConfig.Size(m)
}
func (m *OutboundTrafficPolicyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OutboundTrafficPolicyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OutboundTrafficPolicyConfig proto.InternalMessageInfo

// PilotConfig is described in istio.io documentation.
type PilotConfig struct {
	Enabled          bool                        `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	AutoscaleEnabled bool                        `protobuf:"varint,2,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	AutoscaleMin     uint32                      `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	AutoscaleMax     uint32                      `protobuf:"varint,4,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	ReplicaCount     uint32                      `protobuf:"varint,5,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	Image            string                      `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Sidecar          bool                        `protobuf:"varint,7,opt,name=sidecar,proto3" json:"sidecar,omitempty"`
	TraceSampling    float64                     `protobuf:"fixed64,8,opt,name=traceSampling,proto3" json:"traceSampling,omitempty"`
	Resources        *v1.ResourceRequirements    `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"`
	ConfigNamespace  string                      `protobuf:"bytes,10,opt,name=configNamespace,proto3" json:"configNamespace,omitempty"`
	Cpu              *CPUTargetUtilizationConfig `protobuf:"bytes,11,opt,name=cpu,proto3" json:"cpu,omitempty"`
	NodeSelector                     map[string]interface{}      `json:"nodeSelector,omitempty"`
	KeepaliveMaxServerConnectionAge *duration.Duration `protobuf:"bytes,12,opt,name=keepaliveMaxServerConnectionAge,proto3" json:"keepaliveMaxServerConnectionAge,omitempty"`
	DeploymentLabels                map[string]string  `protobuf:"bytes,13,rep,name=deploymentLabels,proto3" json:"deploymentLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MeshNetworks                     map[string]interface{}      `json:"meshNetworks,omitempty"`
	PodAntiAffinityLabelSelector     []map[string]interface{}    `json:"podAntiAffinityLabelSelector"`
	PodAntiAffinityTermLabelSelector []map[string]interface{}    `json:"podAntiAffinityTermLabelSelector"`
	ConfigMap            bool                  `protobuf:"varint,14,opt,name=configMap,proto3" json:"configMap,omitempty"`
	Ingress              *PilotIngressConfig   `protobuf:"bytes,15,opt,name=ingress,proto3" json:"ingress,omitempty"`
	UseMCP               bool                  `protobuf:"varint,16,opt,name=useMCP,proto3" json:"useMCP,omitempty"`
	Env                  map[string]string     `protobuf:"bytes,17,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Policy               *PilotPolicyConfig    `protobuf:"bytes,18,opt,name=policy,proto3" json:"policy,omitempty"`
	Telemetry            *PilotTelemetryConfig `protobuf:"bytes,19,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PilotConfig) Reset()         { *m = PilotConfig{} }
func (m *PilotConfig) String() string { return proto.CompactTextString(m) }
func (*PilotConfig) ProtoMessage()    {}
func (*PilotConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{31}
}

func (m *PilotConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PilotConfig.Unmarshal(m, b)
}
func (m *PilotConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PilotConfig.Marshal(b, m, deterministic)
}
func (m *PilotConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PilotConfig.Merge(m, src)
}
func (m *PilotConfig) XXX_Size() int {
	return xxx_messageInfo_PilotConfig.Size(m)
}
func (m *PilotConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PilotConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PilotConfig proto.InternalMessageInfo

func (m *PilotConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PilotConfig) GetAutoscaleEnabled() bool {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return false
}

func (m *PilotConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

func (m *PilotConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *PilotConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

func (m *PilotConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *PilotConfig) GetSidecar() bool {
	if m != nil {
		return m.Sidecar
	}
	return false
}

func (m *PilotConfig) GetTraceSampling() float64 {
	if m != nil {
		return m.TraceSampling
	}
	return 0
}

func (m *PilotConfig) GetResources() *v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *PilotConfig) GetConfigNamespace() string {
	if m != nil {
		return m.ConfigNamespace
	}
	return ""
}

func (m *PilotConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *PilotConfig) GetKeepaliveMaxServerConnectionAge() *duration.Duration {
	if m != nil {
		return m.KeepaliveMaxServerConnectionAge
	}
	return nil
}

func (m *PilotConfig) GetDeploymentLabels() map[string]string {
	if m != nil {
		return m.DeploymentLabels
	}
	return nil
}

func (m *PilotConfig) GetConfigMap() bool {
	if m != nil {
		return m.ConfigMap
	}
	return false
}

func (m *PilotConfig) GetIngress() *PilotIngressConfig {
	if m != nil {
		return m.Ingress
	}
	return nil
}

func (m *PilotConfig) GetUseMCP() bool {
	if m != nil {
		return m.UseMCP
	}
	return false
}

func (m *PilotConfig) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *PilotConfig) GetPolicy() *PilotPolicyConfig {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *PilotConfig) GetTelemetry() *PilotTelemetryConfig {
	if m != nil {
		return m.Telemetry
	}
	return nil
}

// PilotIngressConfig is described in istio.io documentation.
type PilotIngressConfig struct {
	IngressService string `protobuf:"bytes,1,opt,name=ingressService,proto3" json:"ingressService,omitempty"`
	//Value to set on "kubernetes.io/ingress.class" annotations to activate, if mode is STRICT
	IngressClass         string   `protobuf:"bytes,3,opt,name=ingressClass,proto3" json:"ingressClass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PilotIngressConfig) Reset()         { *m = PilotIngressConfig{} }
func (m *PilotIngressConfig) String() string { return proto.CompactTextString(m) }
func (*PilotIngressConfig) ProtoMessage()    {}
func (*PilotIngressConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{32}
}

func (m *PilotIngressConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PilotIngressConfig.Unmarshal(m, b)
}
func (m *PilotIngressConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PilotIngressConfig.Marshal(b, m, deterministic)
}
func (m *PilotIngressConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PilotIngressConfig.Merge(m, src)
}
func (m *PilotIngressConfig) XXX_Size() int {
	return xxx_messageInfo_PilotIngressConfig.Size(m)
}
func (m *PilotIngressConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PilotIngressConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PilotIngressConfig proto.InternalMessageInfo

func (m *PilotIngressConfig) GetIngressService() string {
	if m != nil {
		return m.IngressService
	}
	return ""
}

func (m *PilotIngressConfig) GetIngressClass() string {
	if m != nil {
		return m.IngressClass
	}
	return ""
}

// PilotPolicyConfig is described in istio.io documentation.
type PilotPolicyConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PilotPolicyConfig) Reset()         { *m = PilotPolicyConfig{} }
func (m *PilotPolicyConfig) String() string { return proto.CompactTextString(m) }
func (*PilotPolicyConfig) ProtoMessage()    {}
func (*PilotPolicyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{33}
}

func (m *PilotPolicyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PilotPolicyConfig.Unmarshal(m, b)
}
func (m *PilotPolicyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PilotPolicyConfig.Marshal(b, m, deterministic)
}
func (m *PilotPolicyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PilotPolicyConfig.Merge(m, src)
}
func (m *PilotPolicyConfig) XXX_Size() int {
	return xxx_messageInfo_PilotPolicyConfig.Size(m)
}
func (m *PilotPolicyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PilotPolicyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PilotPolicyConfig proto.InternalMessageInfo

func (m *PilotPolicyConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// PilotTelemetryConfig is described in istio.io documentation.
type PilotTelemetryConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PilotTelemetryConfig) Reset()         { *m = PilotTelemetryConfig{} }
func (m *PilotTelemetryConfig) String() string { return proto.CompactTextString(m) }
func (*PilotTelemetryConfig) ProtoMessage()    {}
func (*PilotTelemetryConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{34}
}

func (m *PilotTelemetryConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PilotTelemetryConfig.Unmarshal(m, b)
}
func (m *PilotTelemetryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PilotTelemetryConfig.Marshal(b, m, deterministic)
}
func (m *PilotTelemetryConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PilotTelemetryConfig.Merge(m, src)
}
func (m *PilotTelemetryConfig) XXX_Size() int {
	return xxx_messageInfo_PilotTelemetryConfig.Size(m)
}
func (m *PilotTelemetryConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PilotTelemetryConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PilotTelemetryConfig proto.InternalMessageInfo

func (m *PilotTelemetryConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// PortsConfig is described in istio.io documentation.
type PortsConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	NodePort             int32    `protobuf:"varint,3,opt,name=nodePort,proto3" json:"nodePort,omitempty"`
	TargetPort           int32    `protobuf:"varint,4,opt,name=targetPort,proto3" json:"targetPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortsConfig) Reset()         { *m = PortsConfig{} }
func (m *PortsConfig) String() string { return proto.CompactTextString(m) }
func (*PortsConfig) ProtoMessage()    {}
func (*PortsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{35}
}

func (m *PortsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortsConfig.Unmarshal(m, b)
}
func (m *PortsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortsConfig.Marshal(b, m, deterministic)
}
func (m *PortsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortsConfig.Merge(m, src)
}
func (m *PortsConfig) XXX_Size() int {
	return xxx_messageInfo_PortsConfig.Size(m)
}
func (m *PortsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PortsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PortsConfig proto.InternalMessageInfo

func (m *PortsConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PortsConfig) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PortsConfig) GetNodePort() int32 {
	if m != nil {
		return m.NodePort
	}
	return 0
}

func (m *PortsConfig) GetTargetPort() int32 {
	if m != nil {
		return m.TargetPort
	}
	return 0
}

// PrometheusConfig is described in istio.io documentation.
type PrometheusConfig struct {
	CreatePrometheusResource bool   `protobuf:"varint,1,opt,name=createPrometheusResource,proto3" json:"createPrometheusResource,omitempty"`
	Enabled                  bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ReplicaCount             uint32 `protobuf:"varint,3,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	Hub                      string `protobuf:"bytes,4,opt,name=hub,proto3" json:"hub,omitempty"`
	Tag                      string `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Retention                string `protobuf:"bytes,6,opt,name=retention,proto3" json:"retention,omitempty"`
	NodeSelector             map[string]interface{}    `json:"nodeSelector,omitempty"`
	ScrapeInterval       *duration.Duration        `protobuf:"bytes,7,opt,name=scrapeInterval,proto3" json:"scrapeInterval,omitempty"`
	ContextPath          string                    `protobuf:"bytes,8,opt,name=contextPath,proto3" json:"contextPath,omitempty"`
	Ingress              *AddonIngressConfig       `protobuf:"bytes,9,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Service              *PrometheusServiceConfig  `protobuf:"bytes,10,opt,name=service,proto3" json:"service,omitempty"`
	Security             *PrometheusSecurityConfig `protobuf:"bytes,11,opt,name=security,proto3" json:"security,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PrometheusConfig) Reset()         { *m = PrometheusConfig{} }
func (m *PrometheusConfig) String() string { return proto.CompactTextString(m) }
func (*PrometheusConfig) ProtoMessage()    {}
func (*PrometheusConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{36}
}

func (m *PrometheusConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrometheusConfig.Unmarshal(m, b)
}
func (m *PrometheusConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrometheusConfig.Marshal(b, m, deterministic)
}
func (m *PrometheusConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrometheusConfig.Merge(m, src)
}
func (m *PrometheusConfig) XXX_Size() int {
	return xxx_messageInfo_PrometheusConfig.Size(m)
}
func (m *PrometheusConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PrometheusConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PrometheusConfig proto.InternalMessageInfo

func (m *PrometheusConfig) GetCreatePrometheusResource() bool {
	if m != nil {
		return m.CreatePrometheusResource
	}
	return false
}

func (m *PrometheusConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PrometheusConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

func (m *PrometheusConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *PrometheusConfig) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *PrometheusConfig) GetRetention() string {
	if m != nil {
		return m.Retention
	}
	return ""
}

func (m *PrometheusConfig) GetScrapeInterval() *duration.Duration {
	if m != nil {
		return m.ScrapeInterval
	}
	return nil
}

func (m *PrometheusConfig) GetContextPath() string {
	if m != nil {
		return m.ContextPath
	}
	return ""
}

func (m *PrometheusConfig) GetIngress() *AddonIngressConfig {
	if m != nil {
		return m.Ingress
	}
	return nil
}

func (m *PrometheusConfig) GetService() *PrometheusServiceConfig {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *PrometheusConfig) GetSecurity() *PrometheusSecurityConfig {
	if m != nil {
		return m.Security
	}
	return nil
}

// PrometheusMixerAdapterConfig is described in istio.io documentation.
type PrometheusMixerAdapterConfig struct {
	Enabled               bool               `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MetricsExpiryDuration *duration.Duration `protobuf:"bytes,2,opt,name=metricsExpiryDuration,proto3" json:"metricsExpiryDuration,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *PrometheusMixerAdapterConfig) Reset()         { *m = PrometheusMixerAdapterConfig{} }
func (m *PrometheusMixerAdapterConfig) String() string { return proto.CompactTextString(m) }
func (*PrometheusMixerAdapterConfig) ProtoMessage()    {}
func (*PrometheusMixerAdapterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{37}
}

func (m *PrometheusMixerAdapterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrometheusMixerAdapterConfig.Unmarshal(m, b)
}
func (m *PrometheusMixerAdapterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrometheusMixerAdapterConfig.Marshal(b, m, deterministic)
}
func (m *PrometheusMixerAdapterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrometheusMixerAdapterConfig.Merge(m, src)
}
func (m *PrometheusMixerAdapterConfig) XXX_Size() int {
	return xxx_messageInfo_PrometheusMixerAdapterConfig.Size(m)
}
func (m *PrometheusMixerAdapterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PrometheusMixerAdapterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PrometheusMixerAdapterConfig proto.InternalMessageInfo

func (m *PrometheusMixerAdapterConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PrometheusMixerAdapterConfig) GetMetricsExpiryDuration() *duration.Duration {
	if m != nil {
		return m.MetricsExpiryDuration
	}
	return nil
}

// PrometheusSecurityConfig is described in istio.io documentation.
type PrometheusSecurityConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrometheusSecurityConfig) Reset()         { *m = PrometheusSecurityConfig{} }
func (m *PrometheusSecurityConfig) String() string { return proto.CompactTextString(m) }
func (*PrometheusSecurityConfig) ProtoMessage()    {}
func (*PrometheusSecurityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{38}
}

func (m *PrometheusSecurityConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrometheusSecurityConfig.Unmarshal(m, b)
}
func (m *PrometheusSecurityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrometheusSecurityConfig.Marshal(b, m, deterministic)
}
func (m *PrometheusSecurityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrometheusSecurityConfig.Merge(m, src)
}
func (m *PrometheusSecurityConfig) XXX_Size() int {
	return xxx_messageInfo_PrometheusSecurityConfig.Size(m)
}
func (m *PrometheusSecurityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PrometheusSecurityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PrometheusSecurityConfig proto.InternalMessageInfo

func (m *PrometheusSecurityConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// PrometheusServiceConfig is described in istio.io documentation.
type PrometheusServiceConfig struct {
	Annotations map[string]interface{}           `json:"annotations,omitempty"`
	NodePort             *PrometheusServiceNodePortConfig `protobuf:"bytes,1,opt,name=nodePort,proto3" json:"nodePort,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *PrometheusServiceConfig) Reset()         { *m = PrometheusServiceConfig{} }
func (m *PrometheusServiceConfig) String() string { return proto.CompactTextString(m) }
func (*PrometheusServiceConfig) ProtoMessage()    {}
func (*PrometheusServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{39}
}

func (m *PrometheusServiceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrometheusServiceConfig.Unmarshal(m, b)
}
func (m *PrometheusServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrometheusServiceConfig.Marshal(b, m, deterministic)
}
func (m *PrometheusServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrometheusServiceConfig.Merge(m, src)
}
func (m *PrometheusServiceConfig) XXX_Size() int {
	return xxx_messageInfo_PrometheusServiceConfig.Size(m)
}
func (m *PrometheusServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PrometheusServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PrometheusServiceConfig proto.InternalMessageInfo

func (m *PrometheusServiceConfig) GetNodePort() *PrometheusServiceNodePortConfig {
	if m != nil {
		return m.NodePort
	}
	return nil
}

// PrometheusServiceNodePortConfig is described in istio.io documentation.
type PrometheusServiceNodePortConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrometheusServiceNodePortConfig) Reset()         { *m = PrometheusServiceNodePortConfig{} }
func (m *PrometheusServiceNodePortConfig) String() string { return proto.CompactTextString(m) }
func (*PrometheusServiceNodePortConfig) ProtoMessage()    {}
func (*PrometheusServiceNodePortConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{40}
}

func (m *PrometheusServiceNodePortConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrometheusServiceNodePortConfig.Unmarshal(m, b)
}
func (m *PrometheusServiceNodePortConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrometheusServiceNodePortConfig.Marshal(b, m, deterministic)
}
func (m *PrometheusServiceNodePortConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrometheusServiceNodePortConfig.Merge(m, src)
}
func (m *PrometheusServiceNodePortConfig) XXX_Size() int {
	return xxx_messageInfo_PrometheusServiceNodePortConfig.Size(m)
}
func (m *PrometheusServiceNodePortConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PrometheusServiceNodePortConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PrometheusServiceNodePortConfig proto.InternalMessageInfo

func (m *PrometheusServiceNodePortConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PrometheusServiceNodePortConfig) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// ProxyConfig specifies how proxies are configured within Istio.
type ProxyConfig struct {
	// Specifies the path to write the sidecar access log file.
	AccessLogFile string `protobuf:"bytes,1,opt,name=accessLogFile,proto3" json:"accessLogFile,omitempty"`
	// Configures how and what fields are displayed in sidecar access log.
	AccessLogFormat string `protobuf:"bytes,2,opt,name=accessLogFormat,proto3" json:"accessLogFormat,omitempty"`
	// Domain for the cluster - defaults to .cluster.local, but k8s allows this to be customized, can be prod.example.com
	ClusterDomain     string `protobuf:"bytes,5,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	ComponentLogLevel string `protobuf:"bytes,6,opt,name=componentLogLevel,proto3" json:"componentLogLevel,omitempty"`
	// Controls number of proxy worker threads.
	Concurrency uint32 `protobuf:"varint,7,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	// Configures the DNS refresh rate for Envoy cluster of type STRICT_DNS.
	DnsRefreshRate *duration.Duration `protobuf:"bytes,8,opt,name=dnsRefreshRate,proto3" json:"dnsRefreshRate,omitempty"`
	// Enables core dumps for newly injected sidecars.
	EnableCoreDump      bool                `protobuf:"varint,9,opt,name=enableCoreDump,proto3" json:"enableCoreDump,omitempty"`
	EnvoyMetricsService *EnvoyMetricsConfig `protobuf:"bytes,10,opt,name=envoyMetricsService,proto3" json:"envoyMetricsService,omitempty"`
	EnvoyStatsd         *EnvoyMetricsConfig `protobuf:"bytes,11,opt,name=envoyStatsd,proto3" json:"envoyStatsd,omitempty"`
	// Specifies the Istio ingress ports not to capture.
	ExcludeInboundPorts string `protobuf:"bytes,12,opt,name=excludeInboundPorts,proto3" json:"excludeInboundPorts,omitempty"`
	// Lists the excluded IP ranges of Istio egress traffic that the sidecar captures.
	ExcludeIPRanges string `protobuf:"bytes,13,opt,name=excludeIPRanges,proto3" json:"excludeIPRanges,omitempty"`
	// Image name or path for the proxy.
	Image string `protobuf:"bytes,14,opt,name=image,proto3" json:"image,omitempty"`
	// Specifies the Istio ingress ports to capture.
	IncludeInboundPorts string `protobuf:"bytes,15,opt,name=includeInboundPorts,proto3" json:"includeInboundPorts,omitempty"`
	// Lists the IP ranges of Istio egress traffic that the sidecar captures.
	IncludeIPRanges    string `protobuf:"bytes,16,opt,name=includeIPRanges,proto3" json:"includeIPRanges,omitempty"`
	KubevirtInterfaces string `protobuf:"bytes,17,opt,name=kubevirtInterfaces,proto3" json:"kubevirtInterfaces,omitempty"`
	LogLevel           string `protobuf:"bytes,18,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	Privileged         bool   `protobuf:"varint,19,opt,name=privileged,proto3" json:"privileged,omitempty"`
	// Sets the initial delay for readiness probes in seconds.
	ReadinessInitialDelaySeconds uint32 `protobuf:"varint,20,opt,name=readinessInitialDelaySeconds,proto3" json:"readinessInitialDelaySeconds,omitempty"`
	// Sets the interval between readiness probes in seconds.
	ReadinessPeriodSeconds uint32 `protobuf:"varint,21,opt,name=readinessPeriodSeconds,proto3" json:"readinessPeriodSeconds,omitempty"`
	// Sets the number of successive failed probes before indicating readiness failure.
	ReadinessFailureThreshold uint32 `protobuf:"varint,22,opt,name=readinessFailureThreshold,proto3" json:"readinessFailureThreshold,omitempty"`
	// Default port used for the Pilot agent's health checks.
	StatusPort           uint32                   `protobuf:"varint,23,opt,name=statusPort,proto3" json:"statusPort,omitempty"`
	Resources            *v1.ResourceRequirements `protobuf:"bytes,24,opt,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ProxyConfig) Reset()         { *m = ProxyConfig{} }
func (m *ProxyConfig) String() string { return proto.CompactTextString(m) }
func (*ProxyConfig) ProtoMessage()    {}
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{41}
}

func (m *ProxyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyConfig.Unmarshal(m, b)
}
func (m *ProxyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyConfig.Marshal(b, m, deterministic)
}
func (m *ProxyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyConfig.Merge(m, src)
}
func (m *ProxyConfig) XXX_Size() int {
	return xxx_messageInfo_ProxyConfig.Size(m)
}
func (m *ProxyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyConfig proto.InternalMessageInfo

func (m *ProxyConfig) GetAccessLogFile() string {
	if m != nil {
		return m.AccessLogFile
	}
	return ""
}

func (m *ProxyConfig) GetAccessLogFormat() string {
	if m != nil {
		return m.AccessLogFormat
	}
	return ""
}

func (m *ProxyConfig) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

func (m *ProxyConfig) GetComponentLogLevel() string {
	if m != nil {
		return m.ComponentLogLevel
	}
	return ""
}

func (m *ProxyConfig) GetConcurrency() uint32 {
	if m != nil {
		return m.Concurrency
	}
	return 0
}

func (m *ProxyConfig) GetDnsRefreshRate() *duration.Duration {
	if m != nil {
		return m.DnsRefreshRate
	}
	return nil
}

func (m *ProxyConfig) GetEnableCoreDump() bool {
	if m != nil {
		return m.EnableCoreDump
	}
	return false
}

func (m *ProxyConfig) GetEnvoyMetricsService() *EnvoyMetricsConfig {
	if m != nil {
		return m.EnvoyMetricsService
	}
	return nil
}

func (m *ProxyConfig) GetEnvoyStatsd() *EnvoyMetricsConfig {
	if m != nil {
		return m.EnvoyStatsd
	}
	return nil
}

func (m *ProxyConfig) GetExcludeInboundPorts() string {
	if m != nil {
		return m.ExcludeInboundPorts
	}
	return ""
}

func (m *ProxyConfig) GetExcludeIPRanges() string {
	if m != nil {
		return m.ExcludeIPRanges
	}
	return ""
}

func (m *ProxyConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ProxyConfig) GetIncludeInboundPorts() string {
	if m != nil {
		return m.IncludeInboundPorts
	}
	return ""
}

func (m *ProxyConfig) GetIncludeIPRanges() string {
	if m != nil {
		return m.IncludeIPRanges
	}
	return ""
}

func (m *ProxyConfig) GetKubevirtInterfaces() string {
	if m != nil {
		return m.KubevirtInterfaces
	}
	return ""
}

func (m *ProxyConfig) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

func (m *ProxyConfig) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *ProxyConfig) GetReadinessInitialDelaySeconds() uint32 {
	if m != nil {
		return m.ReadinessInitialDelaySeconds
	}
	return 0
}

func (m *ProxyConfig) GetReadinessPeriodSeconds() uint32 {
	if m != nil {
		return m.ReadinessPeriodSeconds
	}
	return 0
}

func (m *ProxyConfig) GetReadinessFailureThreshold() uint32 {
	if m != nil {
		return m.ReadinessFailureThreshold
	}
	return 0
}

func (m *ProxyConfig) GetStatusPort() uint32 {
	if m != nil {
		return m.StatusPort
	}
	return 0
}

func (m *ProxyConfig) GetResources() *v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

// ProxyInitConfig is described in istio.io documentation.
type ProxyInitConfig struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyInitConfig) Reset()         { *m = ProxyInitConfig{} }
func (m *ProxyInitConfig) String() string { return proto.CompactTextString(m) }
func (*ProxyInitConfig) ProtoMessage()    {}
func (*ProxyInitConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{42}
}

func (m *ProxyInitConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyInitConfig.Unmarshal(m, b)
}
func (m *ProxyInitConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyInitConfig.Marshal(b, m, deterministic)
}
func (m *ProxyInitConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyInitConfig.Merge(m, src)
}
func (m *ProxyInitConfig) XXX_Size() int {
	return xxx_messageInfo_ProxyInitConfig.Size(m)
}
func (m *ProxyInitConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyInitConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyInitConfig proto.InternalMessageInfo

func (m *ProxyInitConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

// ResourcesRequestsConfig is described in istio.io documentation.
type ResourcesRequestsConfig struct {
	Cpu                  string   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               string   `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourcesRequestsConfig) Reset()         { *m = ResourcesRequestsConfig{} }
func (m *ResourcesRequestsConfig) String() string { return proto.CompactTextString(m) }
func (*ResourcesRequestsConfig) ProtoMessage()    {}
func (*ResourcesRequestsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{43}
}

func (m *ResourcesRequestsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesRequestsConfig.Unmarshal(m, b)
}
func (m *ResourcesRequestsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesRequestsConfig.Marshal(b, m, deterministic)
}
func (m *ResourcesRequestsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesRequestsConfig.Merge(m, src)
}
func (m *ResourcesRequestsConfig) XXX_Size() int {
	return xxx_messageInfo_ResourcesRequestsConfig.Size(m)
}
func (m *ResourcesRequestsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesRequestsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesRequestsConfig proto.InternalMessageInfo

func (m *ResourcesRequestsConfig) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *ResourcesRequestsConfig) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

// SDSConfig is described in istio.io documentation.
type SDSConfig struct {
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Specifies the Unix Domain Socket through which Envoy communicates with NodeAgent SDS to get key/cert for mTLS.
	UdsPath string `protobuf:"bytes,2,opt,name=udsPath,proto3" json:"udsPath,omitempty"`
	// Enables SDS use of k8s sa normal JWT to request for certificates.
	UseNormalJwt bool `protobuf:"varint,3,opt,name=useNormalJwt,proto3" json:"useNormalJwt,omitempty"`
	// Enables SDS use of trustworthy JWT to request for certificates.
	UseTrustworthyJwt    bool     `protobuf:"varint,4,opt,name=useTrustworthyJwt,proto3" json:"useTrustworthyJwt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SDSConfig) Reset()         { *m = SDSConfig{} }
func (m *SDSConfig) String() string { return proto.CompactTextString(m) }
func (*SDSConfig) ProtoMessage()    {}
func (*SDSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{44}
}

func (m *SDSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SDSConfig.Unmarshal(m, b)
}
func (m *SDSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SDSConfig.Marshal(b, m, deterministic)
}
func (m *SDSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDSConfig.Merge(m, src)
}
func (m *SDSConfig) XXX_Size() int {
	return xxx_messageInfo_SDSConfig.Size(m)
}
func (m *SDSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SDSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SDSConfig proto.InternalMessageInfo

func (m *SDSConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *SDSConfig) GetUdsPath() string {
	if m != nil {
		return m.UdsPath
	}
	return ""
}

func (m *SDSConfig) GetUseNormalJwt() bool {
	if m != nil {
		return m.UseNormalJwt
	}
	return false
}

func (m *SDSConfig) GetUseTrustworthyJwt() bool {
	if m != nil {
		return m.UseTrustworthyJwt
	}
	return false
}

// SecretVolume is described in istio.io documentation.
type SecretVolume struct {
	MountPath            string   `protobuf:"bytes,1,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SecretName           string   `protobuf:"bytes,3,opt,name=secretName,proto3" json:"secretName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecretVolume) Reset()         { *m = SecretVolume{} }
func (m *SecretVolume) String() string { return proto.CompactTextString(m) }
func (*SecretVolume) ProtoMessage()    {}
func (*SecretVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{45}
}

func (m *SecretVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretVolume.Unmarshal(m, b)
}
func (m *SecretVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretVolume.Marshal(b, m, deterministic)
}
func (m *SecretVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretVolume.Merge(m, src)
}
func (m *SecretVolume) XXX_Size() int {
	return xxx_messageInfo_SecretVolume.Size(m)
}
func (m *SecretVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretVolume.DiscardUnknown(m)
}

var xxx_messageInfo_SecretVolume proto.InternalMessageInfo

func (m *SecretVolume) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *SecretVolume) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecretVolume) GetSecretName() string {
	if m != nil {
		return m.SecretName
	}
	return ""
}

// SecurityConfig is described in istio.io documentation.
type SecurityConfig struct {
	Enabled              bool              `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ReplicaCount         uint32            `protobuf:"varint,2,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	Image                string            `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	SelfSigned           bool              `protobuf:"varint,4,opt,name=selfSigned,proto3" json:"selfSigned,omitempty"`
	TrustDomain          string            `protobuf:"bytes,5,opt,name=trustDomain,proto3" json:"trustDomain,omitempty"`
	DnsCerts             map[string]string `protobuf:"bytes,6,rep,name=dnsCerts,proto3" json:"dnsCerts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateMeshPolicy     bool              `protobuf:"varint,7,opt,name=createMeshPolicy,proto3" json:"createMeshPolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SecurityConfig) Reset()         { *m = SecurityConfig{} }
func (m *SecurityConfig) String() string { return proto.CompactTextString(m) }
func (*SecurityConfig) ProtoMessage()    {}
func (*SecurityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{46}
}

func (m *SecurityConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityConfig.Unmarshal(m, b)
}
func (m *SecurityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityConfig.Marshal(b, m, deterministic)
}
func (m *SecurityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityConfig.Merge(m, src)
}
func (m *SecurityConfig) XXX_Size() int {
	return xxx_messageInfo_SecurityConfig.Size(m)
}
func (m *SecurityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityConfig proto.InternalMessageInfo

func (m *SecurityConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *SecurityConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

func (m *SecurityConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SecurityConfig) GetSelfSigned() bool {
	if m != nil {
		return m.SelfSigned
	}
	return false
}

func (m *SecurityConfig) GetTrustDomain() string {
	if m != nil {
		return m.TrustDomain
	}
	return ""
}

func (m *SecurityConfig) GetDnsCerts() map[string]string {
	if m != nil {
		return m.DnsCerts
	}
	return nil
}

func (m *SecurityConfig) GetCreateMeshPolicy() bool {
	if m != nil {
		return m.CreateMeshPolicy
	}
	return false
}

// ServiceConfig is described in istio.io documentation.
type ServiceConfig struct {
	Annotations  map[string]interface{} `json:"annotations,omitempty"`
	ExternalPort         uint32   `protobuf:"varint,1,opt,name=externalPort,proto3" json:"externalPort,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 v1.ServiceType     `json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceConfig) Reset()         { *m = ServiceConfig{} }
func (m *ServiceConfig) String() string { return proto.CompactTextString(m) }
func (*ServiceConfig) ProtoMessage()    {}
func (*ServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{47}
}

func (m *ServiceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceConfig.Unmarshal(m, b)
}
func (m *ServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceConfig.Marshal(b, m, deterministic)
}
func (m *ServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceConfig.Merge(m, src)
}
func (m *ServiceConfig) XXX_Size() int {
	return xxx_messageInfo_ServiceConfig.Size(m)
}
func (m *ServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceConfig proto.InternalMessageInfo

func (m *ServiceConfig) GetExternalPort() uint32 {
	if m != nil {
		return m.ExternalPort
	}
	return 0
}

func (m *ServiceConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// SidecarInjectorConfig is described in istio.io documentation.
type SidecarInjectorConfig struct {
	AlwaysInjectSelector             []map[string]interface{} `json:"alwaysInjectSelector,omitempty"`
	Enabled                   bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	EnableNamespacesByDefault bool   `protobuf:"varint,2,opt,name=enableNamespacesByDefault,proto3" json:"enableNamespacesByDefault,omitempty"`
	Image                     string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	NodeSelector                     map[string]interface{}   `json:"nodeSelector,omitempty"`
	NeverInjectSelector              []map[string]interface{} `json:"neverInjectSelector,omitempty"`
	PodAntiAffinityLabelSelector     []map[string]interface{} `json:"podAntiAffinityLabelSelector"`
	PodAntiAffinityTermLabelSelector []map[string]interface{} `json:"podAntiAffinityTermLabelSelector"`
	ReplicaCount         uint32   `protobuf:"varint,4,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
	RewriteAppHTTPProbe  bool     `protobuf:"varint,5,opt,name=rewriteAppHTTPProbe,proto3" json:"rewriteAppHTTPProbe,omitempty"`
	SelfSigned           bool     `protobuf:"varint,6,opt,name=selfSigned,proto3" json:"selfSigned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SidecarInjectorConfig) Reset()         { *m = SidecarInjectorConfig{} }
func (m *SidecarInjectorConfig) String() string { return proto.CompactTextString(m) }
func (*SidecarInjectorConfig) ProtoMessage()    {}
func (*SidecarInjectorConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{48}
}

func (m *SidecarInjectorConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SidecarInjectorConfig.Unmarshal(m, b)
}
func (m *SidecarInjectorConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SidecarInjectorConfig.Marshal(b, m, deterministic)
}
func (m *SidecarInjectorConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SidecarInjectorConfig.Merge(m, src)
}
func (m *SidecarInjectorConfig) XXX_Size() int {
	return xxx_messageInfo_SidecarInjectorConfig.Size(m)
}
func (m *SidecarInjectorConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SidecarInjectorConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SidecarInjectorConfig proto.InternalMessageInfo

func (m *SidecarInjectorConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *SidecarInjectorConfig) GetEnableNamespacesByDefault() bool {
	if m != nil {
		return m.EnableNamespacesByDefault
	}
	return false
}

func (m *SidecarInjectorConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SidecarInjectorConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

func (m *SidecarInjectorConfig) GetRewriteAppHTTPProbe() bool {
	if m != nil {
		return m.RewriteAppHTTPProbe
	}
	return false
}

func (m *SidecarInjectorConfig) GetSelfSigned() bool {
	if m != nil {
		return m.SelfSigned
	}
	return false
}

// StdioMixerAdapterConfig is described in istio.io documentation.
type StdioMixerAdapterConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	OutputAsJson         bool     `protobuf:"varint,2,opt,name=outputAsJson,proto3" json:"outputAsJson,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StdioMixerAdapterConfig) Reset()         { *m = StdioMixerAdapterConfig{} }
func (m *StdioMixerAdapterConfig) String() string { return proto.CompactTextString(m) }
func (*StdioMixerAdapterConfig) ProtoMessage()    {}
func (*StdioMixerAdapterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{49}
}

func (m *StdioMixerAdapterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StdioMixerAdapterConfig.Unmarshal(m, b)
}
func (m *StdioMixerAdapterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StdioMixerAdapterConfig.Marshal(b, m, deterministic)
}
func (m *StdioMixerAdapterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StdioMixerAdapterConfig.Merge(m, src)
}
func (m *StdioMixerAdapterConfig) XXX_Size() int {
	return xxx_messageInfo_StdioMixerAdapterConfig.Size(m)
}
func (m *StdioMixerAdapterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StdioMixerAdapterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StdioMixerAdapterConfig proto.InternalMessageInfo

func (m *StdioMixerAdapterConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *StdioMixerAdapterConfig) GetOutputAsJson() bool {
	if m != nil {
		return m.OutputAsJson
	}
	return false
}

// TracerConfig is described in istio.io documentation.
type TracerConfig struct {
	Datadog              *TracerDatadogConfig   `protobuf:"bytes,1,opt,name=datadog,proto3" json:"datadog,omitempty"`
	Lightstep            *TracerLightStepConfig `protobuf:"bytes,2,opt,name=lightstep,proto3" json:"lightstep,omitempty"`
	Zipkin               *TracerZipkinConfig    `protobuf:"bytes,3,opt,name=zipkin,proto3" json:"zipkin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TracerConfig) Reset()         { *m = TracerConfig{} }
func (m *TracerConfig) String() string { return proto.CompactTextString(m) }
func (*TracerConfig) ProtoMessage()    {}
func (*TracerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{50}
}

func (m *TracerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerConfig.Unmarshal(m, b)
}
func (m *TracerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerConfig.Marshal(b, m, deterministic)
}
func (m *TracerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerConfig.Merge(m, src)
}
func (m *TracerConfig) XXX_Size() int {
	return xxx_messageInfo_TracerConfig.Size(m)
}
func (m *TracerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerConfig proto.InternalMessageInfo

func (m *TracerConfig) GetDatadog() *TracerDatadogConfig {
	if m != nil {
		return m.Datadog
	}
	return nil
}

func (m *TracerConfig) GetLightstep() *TracerLightStepConfig {
	if m != nil {
		return m.Lightstep
	}
	return nil
}

func (m *TracerConfig) GetZipkin() *TracerZipkinConfig {
	if m != nil {
		return m.Zipkin
	}
	return nil
}

// TracerDatadogConfig is described in istio.io documentation.
type TracerDatadogConfig struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracerDatadogConfig) Reset()         { *m = TracerDatadogConfig{} }
func (m *TracerDatadogConfig) String() string { return proto.CompactTextString(m) }
func (*TracerDatadogConfig) ProtoMessage()    {}
func (*TracerDatadogConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{51}
}

func (m *TracerDatadogConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerDatadogConfig.Unmarshal(m, b)
}
func (m *TracerDatadogConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerDatadogConfig.Marshal(b, m, deterministic)
}
func (m *TracerDatadogConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerDatadogConfig.Merge(m, src)
}
func (m *TracerDatadogConfig) XXX_Size() int {
	return xxx_messageInfo_TracerDatadogConfig.Size(m)
}
func (m *TracerDatadogConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerDatadogConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerDatadogConfig proto.InternalMessageInfo

func (m *TracerDatadogConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// TracerLightStepConfig is described in istio.io documentation.
type TracerLightStepConfig struct {
	// Sets the lightstep satellite pool address.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Sets the lightstep access token.
	AccessToken string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	// Sets path to the file containing the cacert to use when verifying TLS.
	CacertPath string `protobuf:"bytes,3,opt,name=cacertPath,proto3" json:"cacertPath,omitempty"`
	// Enables lightstep secure connection.
	Secure               bool     `protobuf:"varint,4,opt,name=secure,proto3" json:"secure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracerLightStepConfig) Reset()         { *m = TracerLightStepConfig{} }
func (m *TracerLightStepConfig) String() string { return proto.CompactTextString(m) }
func (*TracerLightStepConfig) ProtoMessage()    {}
func (*TracerLightStepConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{52}
}

func (m *TracerLightStepConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerLightStepConfig.Unmarshal(m, b)
}
func (m *TracerLightStepConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerLightStepConfig.Marshal(b, m, deterministic)
}
func (m *TracerLightStepConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerLightStepConfig.Merge(m, src)
}
func (m *TracerLightStepConfig) XXX_Size() int {
	return xxx_messageInfo_TracerLightStepConfig.Size(m)
}
func (m *TracerLightStepConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerLightStepConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerLightStepConfig proto.InternalMessageInfo

func (m *TracerLightStepConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TracerLightStepConfig) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *TracerLightStepConfig) GetCacertPath() string {
	if m != nil {
		return m.CacertPath
	}
	return ""
}

func (m *TracerLightStepConfig) GetSecure() bool {
	if m != nil {
		return m.Secure
	}
	return false
}

// TracerZipkinConfig is described in istio.io documentation.
type TracerZipkinConfig struct {
	// Specifies address in host:port format for reporting trace data in zipkin format.
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracerZipkinConfig) Reset()         { *m = TracerZipkinConfig{} }
func (m *TracerZipkinConfig) String() string { return proto.CompactTextString(m) }
func (*TracerZipkinConfig) ProtoMessage()    {}
func (*TracerZipkinConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{53}
}

func (m *TracerZipkinConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerZipkinConfig.Unmarshal(m, b)
}
func (m *TracerZipkinConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerZipkinConfig.Marshal(b, m, deterministic)
}
func (m *TracerZipkinConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerZipkinConfig.Merge(m, src)
}
func (m *TracerZipkinConfig) XXX_Size() int {
	return xxx_messageInfo_TracerZipkinConfig.Size(m)
}
func (m *TracerZipkinConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerZipkinConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerZipkinConfig proto.InternalMessageInfo

func (m *TracerZipkinConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// TracingConfig is described in istio.io documentation.
type TracingConfig struct {
	Enabled bool                  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Ingress *TracingIngressConfig `protobuf:"bytes,2,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Jaeger  *TracingJaegerConfig  `protobuf:"bytes,3,opt,name=jaeger,proto3" json:"jaeger,omitempty"`
	NodeSelector map[string]interface{} `json:"nodeSelector,omitempty"`
	Provider             string               `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Service              *ServiceConfig       `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	Zipkin               *TracingZipkinConfig `protobuf:"bytes,6,opt,name=zipkin,proto3" json:"zipkin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TracingConfig) Reset()         { *m = TracingConfig{} }
func (m *TracingConfig) String() string { return proto.CompactTextString(m) }
func (*TracingConfig) ProtoMessage()    {}
func (*TracingConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{54}
}

func (m *TracingConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingConfig.Unmarshal(m, b)
}
func (m *TracingConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingConfig.Marshal(b, m, deterministic)
}
func (m *TracingConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingConfig.Merge(m, src)
}
func (m *TracingConfig) XXX_Size() int {
	return xxx_messageInfo_TracingConfig.Size(m)
}
func (m *TracingConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracingConfig proto.InternalMessageInfo

func (m *TracingConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *TracingConfig) GetIngress() *TracingIngressConfig {
	if m != nil {
		return m.Ingress
	}
	return nil
}

func (m *TracingConfig) GetJaeger() *TracingJaegerConfig {
	if m != nil {
		return m.Jaeger
	}
	return nil
}

func (m *TracingConfig) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *TracingConfig) GetService() *ServiceConfig {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *TracingConfig) GetZipkin() *TracingZipkinConfig {
	if m != nil {
		return m.Zipkin
	}
	return nil
}

// TracingIngressConfig is described in istio.io documentation.
type TracingIngressConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracingIngressConfig) Reset()         { *m = TracingIngressConfig{} }
func (m *TracingIngressConfig) String() string { return proto.CompactTextString(m) }
func (*TracingIngressConfig) ProtoMessage()    {}
func (*TracingIngressConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{55}
}

func (m *TracingIngressConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingIngressConfig.Unmarshal(m, b)
}
func (m *TracingIngressConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingIngressConfig.Marshal(b, m, deterministic)
}
func (m *TracingIngressConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingIngressConfig.Merge(m, src)
}
func (m *TracingIngressConfig) XXX_Size() int {
	return xxx_messageInfo_TracingIngressConfig.Size(m)
}
func (m *TracingIngressConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingIngressConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracingIngressConfig proto.InternalMessageInfo

func (m *TracingIngressConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// TracingJaegerConfig is described in istio.io documentation.
type TracingJaegerConfig struct {
	Hub                  string                     `protobuf:"bytes,1,opt,name=hub,proto3" json:"hub,omitempty"`
	Tag                  string                     `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Memory               *TracingJaegerMemoryConfig `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TracingJaegerConfig) Reset()         { *m = TracingJaegerConfig{} }
func (m *TracingJaegerConfig) String() string { return proto.CompactTextString(m) }
func (*TracingJaegerConfig) ProtoMessage()    {}
func (*TracingJaegerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{56}
}

func (m *TracingJaegerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingJaegerConfig.Unmarshal(m, b)
}
func (m *TracingJaegerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingJaegerConfig.Marshal(b, m, deterministic)
}
func (m *TracingJaegerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingJaegerConfig.Merge(m, src)
}
func (m *TracingJaegerConfig) XXX_Size() int {
	return xxx_messageInfo_TracingJaegerConfig.Size(m)
}
func (m *TracingJaegerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingJaegerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracingJaegerConfig proto.InternalMessageInfo

func (m *TracingJaegerConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *TracingJaegerConfig) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *TracingJaegerConfig) GetMemory() *TracingJaegerMemoryConfig {
	if m != nil {
		return m.Memory
	}
	return nil
}

// TracingJaegerMemoryConfig is described in istio.io documentation.
type TracingJaegerMemoryConfig struct {
	MaxTraces            uint32   `protobuf:"varint,1,opt,name=max_traces,json=maxTraces,proto3" json:"max_traces,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracingJaegerMemoryConfig) Reset()         { *m = TracingJaegerMemoryConfig{} }
func (m *TracingJaegerMemoryConfig) String() string { return proto.CompactTextString(m) }
func (*TracingJaegerMemoryConfig) ProtoMessage()    {}
func (*TracingJaegerMemoryConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{57}
}

func (m *TracingJaegerMemoryConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingJaegerMemoryConfig.Unmarshal(m, b)
}
func (m *TracingJaegerMemoryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingJaegerMemoryConfig.Marshal(b, m, deterministic)
}
func (m *TracingJaegerMemoryConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingJaegerMemoryConfig.Merge(m, src)
}
func (m *TracingJaegerMemoryConfig) XXX_Size() int {
	return xxx_messageInfo_TracingJaegerMemoryConfig.Size(m)
}
func (m *TracingJaegerMemoryConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingJaegerMemoryConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracingJaegerMemoryConfig proto.InternalMessageInfo

func (m *TracingJaegerMemoryConfig) GetMaxTraces() uint32 {
	if m != nil {
		return m.MaxTraces
	}
	return 0
}

// TracingZipkinConfig is described in istio.io documentation.
type TracingZipkinConfig struct {
	Hub                  string                   `protobuf:"bytes,1,opt,name=hub,proto3" json:"hub,omitempty"`
	Tag                  string                   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	ProbeStartupDelay    uint32                   `protobuf:"varint,3,opt,name=probeStartupDelay,proto3" json:"probeStartupDelay,omitempty"`
	QueryPort            uint32                   `protobuf:"varint,4,opt,name=queryPort,proto3" json:"queryPort,omitempty"`
	Resources            *v1.ResourceRequirements `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	JavaOptsHeap         string                   `protobuf:"bytes,6,opt,name=javaOptsHeap,proto3" json:"javaOptsHeap,omitempty"`
	MaxSpans             uint32                   `protobuf:"varint,7,opt,name=maxSpans,proto3" json:"maxSpans,omitempty"`
	Node                 *TracingZipkinNodeConfig `protobuf:"bytes,8,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TracingZipkinConfig) Reset()         { *m = TracingZipkinConfig{} }
func (m *TracingZipkinConfig) String() string { return proto.CompactTextString(m) }
func (*TracingZipkinConfig) ProtoMessage()    {}
func (*TracingZipkinConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{58}
}

func (m *TracingZipkinConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingZipkinConfig.Unmarshal(m, b)
}
func (m *TracingZipkinConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingZipkinConfig.Marshal(b, m, deterministic)
}
func (m *TracingZipkinConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingZipkinConfig.Merge(m, src)
}
func (m *TracingZipkinConfig) XXX_Size() int {
	return xxx_messageInfo_TracingZipkinConfig.Size(m)
}
func (m *TracingZipkinConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingZipkinConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracingZipkinConfig proto.InternalMessageInfo

func (m *TracingZipkinConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *TracingZipkinConfig) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *TracingZipkinConfig) GetProbeStartupDelay() uint32 {
	if m != nil {
		return m.ProbeStartupDelay
	}
	return 0
}

func (m *TracingZipkinConfig) GetQueryPort() uint32 {
	if m != nil {
		return m.QueryPort
	}
	return 0
}

func (m *TracingZipkinConfig) GetResources() *v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *TracingZipkinConfig) GetJavaOptsHeap() string {
	if m != nil {
		return m.JavaOptsHeap
	}
	return ""
}

func (m *TracingZipkinConfig) GetMaxSpans() uint32 {
	if m != nil {
		return m.MaxSpans
	}
	return 0
}

func (m *TracingZipkinConfig) GetNode() *TracingZipkinNodeConfig {
	if m != nil {
		return m.Node
	}
	return nil
}

// TracingZipkinNodeConfig is described in istio.io documentation.
type TracingZipkinNodeConfig struct {
	Cpus                 uint32   `protobuf:"varint,1,opt,name=cpus,proto3" json:"cpus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracingZipkinNodeConfig) Reset()         { *m = TracingZipkinNodeConfig{} }
func (m *TracingZipkinNodeConfig) String() string { return proto.CompactTextString(m) }
func (*TracingZipkinNodeConfig) ProtoMessage()    {}
func (*TracingZipkinNodeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{59}
}

func (m *TracingZipkinNodeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingZipkinNodeConfig.Unmarshal(m, b)
}
func (m *TracingZipkinNodeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingZipkinNodeConfig.Marshal(b, m, deterministic)
}
func (m *TracingZipkinNodeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingZipkinNodeConfig.Merge(m, src)
}
func (m *TracingZipkinNodeConfig) XXX_Size() int {
	return xxx_messageInfo_TracingZipkinNodeConfig.Size(m)
}
func (m *TracingZipkinNodeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingZipkinNodeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracingZipkinNodeConfig proto.InternalMessageInfo

func (m *TracingZipkinNodeConfig) GetCpus() uint32 {
	if m != nil {
		return m.Cpus
	}
	return 0
}

type Values struct {
	Certmanager  *CertManagerConfig `protobuf:"bytes,1,opt,name=certmanager,proto3" json:"certmanager,omitempty"`
	IstioCni     *CNIConfig         `protobuf:"bytes,2,opt,name=istio_cni,json=istioCni,proto3" json:"istio_cni,omitempty"`
	Istiocoredns *CoreDNSConfig     `protobuf:"bytes,3,opt,name=istiocoredns,proto3" json:"istiocoredns,omitempty"`
	Galley       *GalleyConfig      `protobuf:"bytes,4,opt,name=galley,proto3" json:"galley,omitempty"`
	Gateways     *GatewaysConfig    `protobuf:"bytes,5,opt,name=gateways,proto3" json:"gateways,omitempty"`
	Global       *GlobalConfig      `protobuf:"bytes,6,opt,name=global,proto3" json:"global,omitempty"`
	Grafana         map[string]interface{} `json:"grafana,omitempty"`
	Mixer                  *MixerConfig           `protobuf:"bytes,7,opt,name=mixer,proto3" json:"mixer,omitempty"`
	Nodeagent              *NodeAgentConfig       `protobuf:"bytes,8,opt,name=nodeagent,proto3" json:"nodeagent,omitempty"`
	Pilot                  *PilotConfig           `protobuf:"bytes,9,opt,name=pilot,proto3" json:"pilot,omitempty"`
	Prometheus             *PrometheusConfig      `protobuf:"bytes,10,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	Security               *SecurityConfig        `protobuf:"bytes,11,opt,name=security,proto3" json:"security,omitempty"`
	SidecarInjectorWebhook *SidecarInjectorConfig `protobuf:"bytes,12,opt,name=sidecarInjectorWebhook,proto3" json:"sidecarInjectorWebhook,omitempty"`
	Tracing                *TracingConfig         `protobuf:"bytes,13,opt,name=tracing,proto3" json:"tracing,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *Values) Reset()         { *m = Values{} }
func (m *Values) String() string { return proto.CompactTextString(m) }
func (*Values) ProtoMessage()    {}
func (*Values) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{60}
}

func (m *Values) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Values.Unmarshal(m, b)
}
func (m *Values) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Values.Marshal(b, m, deterministic)
}
func (m *Values) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Values.Merge(m, src)
}
func (m *Values) XXX_Size() int {
	return xxx_messageInfo_Values.Size(m)
}
func (m *Values) XXX_DiscardUnknown() {
	xxx_messageInfo_Values.DiscardUnknown(m)
}

var xxx_messageInfo_Values proto.InternalMessageInfo

func (m *Values) GetCertmanager() *CertManagerConfig {
	if m != nil {
		return m.Certmanager
	}
	return nil
}

func (m *Values) GetIstioCni() *CNIConfig {
	if m != nil {
		return m.IstioCni
	}
	return nil
}

func (m *Values) GetIstiocoredns() *CoreDNSConfig {
	if m != nil {
		return m.Istiocoredns
	}
	return nil
}

func (m *Values) GetGalley() *GalleyConfig {
	if m != nil {
		return m.Galley
	}
	return nil
}

func (m *Values) GetGateways() *GatewaysConfig {
	if m != nil {
		return m.Gateways
	}
	return nil
}

func (m *Values) GetGlobal() *GlobalConfig {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *Values) GetMixer() *MixerConfig {
	if m != nil {
		return m.Mixer
	}
	return nil
}

func (m *Values) GetNodeagent() *NodeAgentConfig {
	if m != nil {
		return m.Nodeagent
	}
	return nil
}

func (m *Values) GetPilot() *PilotConfig {
	if m != nil {
		return m.Pilot
	}
	return nil
}

func (m *Values) GetPrometheus() *PrometheusConfig {
	if m != nil {
		return m.Prometheus
	}
	return nil
}

func (m *Values) GetSecurity() *SecurityConfig {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Values) GetSidecarInjectorWebhook() *SidecarInjectorConfig {
	if m != nil {
		return m.SidecarInjectorWebhook
	}
	return nil
}

func (m *Values) GetTracing() *TracingConfig {
	if m != nil {
		return m.Tracing
	}
	return nil
}

// ZeroVPNConfig is described in istio.io documentation.
type ZeroVPNConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Suffix               string   `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZeroVPNConfig) Reset()         { *m = ZeroVPNConfig{} }
func (m *ZeroVPNConfig) String() string { return proto.CompactTextString(m) }
func (*ZeroVPNConfig) ProtoMessage()    {}
func (*ZeroVPNConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1b42944a61fb295, []int{61}
}

func (m *ZeroVPNConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZeroVPNConfig.Unmarshal(m, b)
}
func (m *ZeroVPNConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZeroVPNConfig.Marshal(b, m, deterministic)
}
func (m *ZeroVPNConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZeroVPNConfig.Merge(m, src)
}
func (m *ZeroVPNConfig) XXX_Size() int {
	return xxx_messageInfo_ZeroVPNConfig.Size(m)
}
func (m *ZeroVPNConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ZeroVPNConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ZeroVPNConfig proto.InternalMessageInfo

func (m *ZeroVPNConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *ZeroVPNConfig) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

func init() {
	proto.RegisterEnum("values.LoadSheddingConfigMode", LoadSheddingConfigMode_name, LoadSheddingConfigMode_value)
	proto.RegisterEnum("values.OutboundTrafficPolicyConfigMode", OutboundTrafficPolicyConfigMode_name, OutboundTrafficPolicyConfigMode_value)
	proto.RegisterEnum("values.PilotIngressConfigIngressControllerMode", PilotIngressConfigIngressControllerMode_name, PilotIngressConfigIngressControllerMode_value)
	proto.RegisterEnum("values.ProxyConfigAccessLogEncoding", ProxyConfigAccessLogEncoding_name, ProxyConfigAccessLogEncoding_value)
	proto.RegisterEnum("values.ProxyConfigAutoInject", ProxyConfigAutoInject_name, ProxyConfigAutoInject_value)
	proto.RegisterEnum("values.ProxyConfigTracer", ProxyConfigTracer_name, ProxyConfigTracer_value)
	proto.RegisterType((*AddonIngressConfig)(nil), "values.AddonIngressConfig")
	proto.RegisterType((*ArchConfig)(nil), "values.ArchConfig")
	proto.RegisterType((*CNIConfig)(nil), "values.CNIConfig")
	proto.RegisterType((*CPUTargetUtilizationConfig)(nil), "values.CPUTargetUtilizationConfig")
	proto.RegisterType((*CertManagerConfig)(nil), "values.CertManagerConfig")
	proto.RegisterType((*CoreDNSConfig)(nil), "values.CoreDNSConfig")
	proto.RegisterType((*DefaultPodDisruptionBudgetConfig)(nil), "values.DefaultPodDisruptionBudgetConfig")
	proto.RegisterType((*DefaultResourcesConfig)(nil), "values.DefaultResourcesConfig")
	proto.RegisterType((*EgressGatewayConfig)(nil), "values.EgressGatewayConfig")
	proto.RegisterMapType((map[string]string)(nil), "values.EgressGatewayConfig.EnvEntry")
	proto.RegisterMapType((map[string]string)(nil), "values.EgressGatewayConfig.NodeSelectorEntry")
	proto.RegisterType((*EnvoyMetricsConfig)(nil), "values.EnvoyMetricsConfig")
	proto.RegisterType((*GalleyConfig)(nil), "values.GalleyConfig")
	proto.RegisterMapType((map[string]string)(nil), "values.GalleyConfig.MeshEntry")
	proto.RegisterType((*GatewayLabelsConfig)(nil), "values.GatewayLabelsConfig")
	proto.RegisterType((*GatewaysConfig)(nil), "values.GatewaysConfig")
	proto.RegisterType((*GlobalConfig)(nil), "values.GlobalConfig")
	proto.RegisterMapType((map[string]string)(nil), "values.GlobalConfig.DefaultNodeSelectorEntry")
	proto.RegisterMapType((map[string]string)(nil), "values.GlobalConfig.LocalityLbSettingEntry")
	proto.RegisterMapType((map[string]string)(nil), "values.GlobalConfig.MeshNetworksEntry")
	proto.RegisterType((*GlobalLoggingConfig)(nil), "values.GlobalLoggingConfig")
	proto.RegisterType((*ILBGatewayConfig)(nil), "values.ILBGatewayConfig")
	proto.RegisterType((*IngressGatewayConfig)(nil), "values.IngressGatewayConfig")
	proto.RegisterMapType((map[string]string)(nil), "values.IngressGatewayConfig.EnvEntry")
	proto.RegisterType((*IngressGatewaySdsConfig)(nil), "values.IngressGatewaySdsConfig")
	proto.RegisterType((*IngressGatewayZvpnConfig)(nil), "values.IngressGatewayZvpnConfig")
	proto.RegisterType((*KubernetesEnvMixerAdapterConfig)(nil), "values.KubernetesEnvMixerAdapterConfig")
	proto.RegisterType((*KubernetesIngressConfig)(nil), "values.KubernetesIngressConfig")
	proto.RegisterType((*LoadSheddingConfig)(nil), "values.LoadSheddingConfig")
	proto.RegisterType((*MTLSConfig)(nil), "values.MTLSConfig")
	proto.RegisterType((*MeshExpansionConfig)(nil), "values.MeshExpansionConfig")
	proto.RegisterType((*MixerAdaptersConfig)(nil), "values.MixerAdaptersConfig")
	proto.RegisterType((*MixerConfig)(nil), "values.MixerConfig")
	proto.RegisterMapType((map[string]string)(nil), "values.MixerConfig.EnvEntry")
	proto.RegisterType((*MixerPolicyConfig)(nil), "values.MixerPolicyConfig")
	proto.RegisterType((*MixerTelemetryConfig)(nil), "values.MixerTelemetryConfig")
	proto.RegisterMapType((map[string]string)(nil), "values.MixerTelemetryConfig.EnvEntry")
	proto.RegisterType((*MultiClusterConfig)(nil), "values.MultiClusterConfig")
	proto.RegisterType((*NodeAgentConfig)(nil), "values.NodeAgentConfig")
	proto.RegisterType((*OutboundTrafficPolicyConfig)(nil), "values.OutboundTrafficPolicyConfig")
	proto.RegisterType((*PilotConfig)(nil), "values.PilotConfig")
	proto.RegisterMapType((map[string]string)(nil), "values.PilotConfig.DeploymentLabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "values.PilotConfig.EnvEntry")
	proto.RegisterType((*PilotIngressConfig)(nil), "values.PilotIngressConfig")
	proto.RegisterType((*PilotPolicyConfig)(nil), "values.PilotPolicyConfig")
	proto.RegisterType((*PilotTelemetryConfig)(nil), "values.PilotTelemetryConfig")
	proto.RegisterType((*PortsConfig)(nil), "values.PortsConfig")
	proto.RegisterType((*PrometheusConfig)(nil), "values.PrometheusConfig")
	proto.RegisterType((*PrometheusMixerAdapterConfig)(nil), "values.PrometheusMixerAdapterConfig")
	proto.RegisterType((*PrometheusSecurityConfig)(nil), "values.PrometheusSecurityConfig")
	proto.RegisterType((*PrometheusServiceConfig)(nil), "values.PrometheusServiceConfig")
	proto.RegisterType((*PrometheusServiceNodePortConfig)(nil), "values.PrometheusServiceNodePortConfig")
	proto.RegisterType((*ProxyConfig)(nil), "values.ProxyConfig")
	proto.RegisterType((*ProxyInitConfig)(nil), "values.ProxyInitConfig")
	proto.RegisterType((*ResourcesRequestsConfig)(nil), "values.ResourcesRequestsConfig")
	proto.RegisterType((*SDSConfig)(nil), "values.SDSConfig")
	proto.RegisterType((*SecretVolume)(nil), "values.SecretVolume")
	proto.RegisterType((*SecurityConfig)(nil), "values.SecurityConfig")
	proto.RegisterMapType((map[string]string)(nil), "values.SecurityConfig.DnsCertsEntry")
	proto.RegisterType((*ServiceConfig)(nil), "values.ServiceConfig")
	proto.RegisterType((*SidecarInjectorConfig)(nil), "values.SidecarInjectorConfig")
	proto.RegisterType((*StdioMixerAdapterConfig)(nil), "values.StdioMixerAdapterConfig")
	proto.RegisterType((*TracerConfig)(nil), "values.TracerConfig")
	proto.RegisterType((*TracerDatadogConfig)(nil), "values.TracerDatadogConfig")
	proto.RegisterType((*TracerLightStepConfig)(nil), "values.TracerLightStepConfig")
	proto.RegisterType((*TracerZipkinConfig)(nil), "values.TracerZipkinConfig")
	proto.RegisterType((*TracingConfig)(nil), "values.TracingConfig")
	proto.RegisterType((*TracingIngressConfig)(nil), "values.TracingIngressConfig")
	proto.RegisterType((*TracingJaegerConfig)(nil), "values.TracingJaegerConfig")
	proto.RegisterType((*TracingJaegerMemoryConfig)(nil), "values.TracingJaegerMemoryConfig")
	proto.RegisterType((*TracingZipkinConfig)(nil), "values.TracingZipkinConfig")
	proto.RegisterType((*TracingZipkinNodeConfig)(nil), "values.TracingZipkinNodeConfig")
	proto.RegisterType((*Values)(nil), "values.Values")
	proto.RegisterType((*ZeroVPNConfig)(nil), "values.ZeroVPNConfig")
}

func init() { proto.RegisterFile("values_types.proto", fileDescriptor_c1b42944a61fb295) }

var fileDescriptor_c1b42944a61fb295 = []byte{
	// 4336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5b, 0x4f, 0x73, 0x1b, 0x47,
	0x76, 0x37, 0x40, 0x12, 0x04, 0x1e, 0x09, 0x09, 0x6c, 0xfe, 0xd1, 0x88, 0x92, 0x25, 0xed, 0xac,
	0x57, 0x96, 0x77, 0x6d, 0x48, 0x96, 0x64, 0xd9, 0x96, 0x9d, 0xf5, 0x52, 0x04, 0x45, 0x43, 0x0b,
	0x92, 0xc8, 0x00, 0xb2, 0x57, 0x3a, 0x44, 0x69, 0xce, 0x34, 0xc1, 0x31, 0x07, 0x33, 0xa3, 0xe9,
	0x1e, 0x8a, 0xf4, 0x2d, 0xc7, 0xad, 0x54, 0xa5, 0x6a, 0x4f, 0x49, 0x6a, 0x4f, 0xb9, 0xe6, 0x03,
	0xe4, 0x03, 0x24, 0x55, 0xb9, 0xe5, 0x90, 0x43, 0xbe, 0x40, 0xbe, 0x46, 0xaa, 0x52, 0xa9, 0xfe,
	0x33, 0x7f, 0x1a, 0x18, 0x80, 0x7f, 0xe2, 0xaa, 0xad, 0xda, 0x1b, 0xfa, 0xf5, 0x7b, 0xdd, 0x3d,
	0xaf, 0xfb, 0xbd, 0xf7, 0x7b, 0xaf, 0x1b, 0x80, 0x8e, 0xb1, 0x17, 0x13, 0xfa, 0x86, 0x9d, 0x86,
	0x84, 0x36, 0xc3, 0x28, 0x60, 0x01, 0xaa, 0x48, 0xda, 0xfa, 0xad, 0x41, 0x10, 0x0c, 0x3c, 0x72,
	0x5f, 0x50, 0xf7, 0xe3, 0x83, 0xfb, 0x4e, 0x1c, 0x61, 0xe6, 0x06, 0xbe, 0xe4, 0x5b, 0x37, 0x8f,
	0xbe, 0xa0, 0x4d, 0x37, 0xb8, 0x8f, 0x43, 0xf7, 0xbe, 0x1d, 0x44, 0xe4, 0xfe, 0xf1, 0xa7, 0xf7,
	0x07, 0xc4, 0x27, 0x11, 0x66, 0xc4, 0x91, 0x3c, 0x66, 0x0b, 0xd0, 0x86, 0xe3, 0x04, 0x7e, 0xdb,
	0x1f, 0x44, 0x84, 0xd2, 0xcd, 0xc0, 0x3f, 0x70, 0x07, 0xc8, 0x80, 0x79, 0xe2, 0xe3, 0x7d, 0x8f,
	0x38, 0x46, 0xe9, 0x4e, 0xe9, 0x5e, 0xd5, 0x4a, 0x9a, 0x68, 0x05, 0xe6, 0x0e, 0x03, 0xca, 0xa8,
	0x51, 0xbe, 0x33, 0x73, 0xaf, 0x66, 0xc9, 0x86, 0x69, 0x01, 0x6c, 0x44, 0xf6, 0xa1, 0x92, 0x5e,
	0x81, 0x39, 0x3c, 0x74, 0x9e, 0x3c, 0x16, 0xb2, 0x75, 0x4b, 0x36, 0xf8, 0x98, 0x61, 0x68, 0x3f,
	0x79, 0xec, 0x11, 0xa3, 0x2c, 0xe8, 0x49, 0x93, 0xf3, 0xd3, 0x47, 0x5f, 0x3e, 0x38, 0x31, 0x66,
	0x24, 0xbf, 0x68, 0x98, 0xbf, 0x80, 0xda, 0xe6, 0x6e, 0xfb, 0xac, 0x05, 0x99, 0xbf, 0x83, 0xf5,
	0xcd, 0xee, 0xcb, 0x3e, 0x8e, 0x06, 0x84, 0xbd, 0x64, 0xae, 0xe7, 0xfe, 0x28, 0x54, 0xa0, 0xe4,
	0x9e, 0x82, 0xc1, 0x44, 0xd7, 0xc6, 0x31, 0x89, 0xf0, 0x80, 0xe4, 0x38, 0xc4, 0x40, 0x73, 0xd6,
	0xc4, 0x7e, 0xf3, 0x1f, 0x4b, 0xb0, 0xb4, 0x49, 0x22, 0xb6, 0x83, 0x7d, 0x3c, 0x20, 0xd1, 0x99,
	0xaa, 0x69, 0xc0, 0xcc, 0x61, 0xbc, 0x2f, 0x3e, 0xae, 0x66, 0xf1, 0x9f, 0xe8, 0x39, 0xd4, 0x22,
	0x42, 0x83, 0x38, 0xb2, 0x09, 0x15, 0x1f, 0xb7, 0xf0, 0xf0, 0x5e, 0x53, 0x6e, 0x4a, 0x13, 0x87,
	0x6e, 0x93, 0x6f, 0x4a, 0xf3, 0xf8, 0xd3, 0xa6, 0xa5, 0x98, 0x2c, 0xf2, 0x36, 0x76, 0x23, 0x32,
	0x24, 0x3e, 0xa3, 0x56, 0x26, 0xca, 0x47, 0x66, 0x78, 0x60, 0xcc, 0xca, 0x91, 0x19, 0x1e, 0x98,
	0xff, 0x54, 0x82, 0xfa, 0x66, 0x10, 0x91, 0xd6, 0x6e, 0x4f, 0xad, 0xcb, 0x84, 0x45, 0x5b, 0x12,
	0xda, 0x43, 0x3c, 0x20, 0x62, 0x71, 0x35, 0x4b, 0xa3, 0xa1, 0x26, 0x20, 0xd5, 0xee, 0x7a, 0xf1,
	0xc0, 0xf5, 0x25, 0xa7, 0x5c, 0x70, 0x41, 0x4f, 0xfe, 0x5b, 0x67, 0xf4, 0x6f, 0x35, 0x61, 0x31,
	0x22, 0xa1, 0xe7, 0xda, 0x78, 0x33, 0x88, 0x7d, 0x26, 0x96, 0x56, 0xb7, 0x34, 0x9a, 0xf9, 0x35,
	0xdc, 0x69, 0x91, 0x03, 0x1c, 0x7b, 0xac, 0x1b, 0x38, 0x2d, 0x97, 0x46, 0x71, 0xc8, 0xf5, 0xfa,
	0x2c, 0x76, 0x06, 0x84, 0x9d, 0xb9, 0xaf, 0x2f, 0x61, 0x4d, 0x49, 0x27, 0xda, 0x49, 0x0e, 0xe7,
	0x57, 0x50, 0x8d, 0xc8, 0xdb, 0x98, 0xf0, 0x53, 0x58, 0x12, 0x4a, 0xbd, 0xdd, 0x94, 0x16, 0x91,
	0x2a, 0x92, 0x5a, 0x8a, 0x41, 0x8a, 0x58, 0xa9, 0x80, 0xf9, 0x5f, 0x15, 0x58, 0xde, 0x12, 0x47,
	0x7d, 0x1b, 0x33, 0xf2, 0x0e, 0x9f, 0xaa, 0x41, 0x7f, 0x09, 0x0d, 0x1c, 0xb3, 0x80, 0xda, 0xd8,
	0x23, 0x5b, 0xda, 0x8a, 0xc6, 0xe8, 0xfc, 0xe3, 0x53, 0xda, 0x0e, 0x3e, 0x51, 0xc7, 0x59, 0xa3,
	0xe9, 0x3c, 0xae, 0xaf, 0x8e, 0xb6, 0x46, 0x43, 0x77, 0xe1, 0x8a, 0x1d, 0xf8, 0x3e, 0xb1, 0x59,
	0xdf, 0x1d, 0x92, 0x20, 0x66, 0x6a, 0x87, 0x47, 0xa8, 0xe8, 0x31, 0xcc, 0xd8, 0x61, 0x6c, 0xcc,
	0x89, 0x6f, 0x35, 0x93, 0x6f, 0x9d, 0x7c, 0xea, 0x2d, 0xce, 0x8e, 0xbe, 0x81, 0xba, 0x13, 0x61,
	0xd7, 0x6f, 0x29, 0xa7, 0x60, 0x54, 0x84, 0xfc, 0xf5, 0xa6, 0xf4, 0x1a, 0xcd, 0xc4, 0x6b, 0x34,
	0x13, 0x06, 0x4b, 0xe7, 0xcf, 0xef, 0xcd, 0xbc, 0xbe, 0xfb, 0x4f, 0x60, 0x86, 0xf8, 0xc7, 0x46,
	0xf5, 0xce, 0xcc, 0xbd, 0x85, 0x87, 0x1f, 0x24, 0x0b, 0x2a, 0x50, 0x6b, 0x73, 0xcb, 0x3f, 0xde,
	0xf2, 0x59, 0x74, 0x6a, 0x71, 0x01, 0xf4, 0x08, 0x2a, 0x1e, 0xde, 0x27, 0x1e, 0x35, 0x6a, 0x62,
	0x2d, 0x37, 0x12, 0x51, 0x25, 0xd4, 0x11, 0x9d, 0xea, 0x23, 0x14, 0x2b, 0xfa, 0x4b, 0x58, 0xf4,
	0x03, 0x87, 0xf4, 0x88, 0x47, 0x6c, 0x16, 0x44, 0x06, 0x88, 0x59, 0x3f, 0x99, 0x36, 0xeb, 0x6e,
	0x8e, 0x5f, 0x4e, 0xaf, 0x0d, 0x81, 0x3e, 0x82, 0xb9, 0x30, 0x88, 0x18, 0x35, 0x16, 0xc4, 0x58,
	0xcb, 0xc9, 0x58, 0x5d, 0x4e, 0x54, 0xd3, 0x4b, 0x0e, 0xdd, 0x84, 0x17, 0x2f, 0x6f, 0xc2, 0x4f,
	0xa1, 0x4e, 0x89, 0x1d, 0x11, 0xf6, 0x5d, 0xe0, 0xc5, 0x43, 0x42, 0x8d, 0xba, 0x98, 0x7a, 0x25,
	0x99, 0xba, 0x97, 0xeb, 0xb4, 0x74, 0x56, 0xf4, 0x11, 0xcc, 0xfe, 0x78, 0x1c, 0xfa, 0xc6, 0x15,
	0x31, 0xfd, 0x6a, 0x22, 0xf2, 0x9a, 0x44, 0xc1, 0x77, 0xdd, 0x5d, 0xb5, 0x5e, 0xc1, 0xb2, 0xfe,
	0x04, 0xaa, 0x89, 0xca, 0xb9, 0xd7, 0x38, 0x22, 0xa7, 0xca, 0x11, 0xf0, 0x9f, 0xdc, 0xd1, 0x0a,
	0x59, 0x65, 0xf2, 0xb2, 0xf1, 0xb4, 0xfc, 0x45, 0x69, 0xfd, 0x1b, 0x58, 0x1a, 0x53, 0xda, 0x45,
	0x06, 0x30, 0xbf, 0x03, 0xb4, 0xe5, 0x1f, 0x07, 0xa7, 0x3b, 0x84, 0x45, 0xae, 0x7d, 0x76, 0x1c,
	0x41, 0x30, 0xcb, 0x43, 0x87, 0x1a, 0x48, 0xfc, 0xe6, 0x34, 0xae, 0x74, 0x61, 0x2b, 0x73, 0x96,
	0xf8, 0x6d, 0xfe, 0x7d, 0x19, 0x16, 0xb7, 0xb1, 0xe7, 0x91, 0xd3, 0xf3, 0x84, 0x26, 0x37, 0xe7,
	0xd0, 0x64, 0x03, 0x3d, 0x84, 0xd9, 0x21, 0xa1, 0x87, 0xc6, 0x8c, 0xd0, 0xf7, 0xad, 0xec, 0xc4,
	0x65, 0x63, 0x36, 0x77, 0x08, 0x3d, 0x94, 0xe7, 0x44, 0xf0, 0x9e, 0xc7, 0xbb, 0xe9, 0x07, 0x63,
	0xee, 0xd2, 0x07, 0x63, 0xfd, 0x73, 0xa8, 0xa5, 0xd3, 0x5f, 0x48, 0xe3, 0x7f, 0x01, 0xcb, 0x05,
	0x66, 0xc3, 0x87, 0xc0, 0x61, 0x98, 0x0c, 0x81, 0xc3, 0x50, 0xe8, 0x85, 0x32, 0x37, 0x48, 0xf5,
	0xc2, 0x1b, 0xe6, 0xdf, 0x95, 0xe1, 0x8a, 0x92, 0x4f, 0x44, 0x3b, 0xb0, 0x2c, 0xfa, 0xde, 0x10,
	0x61, 0x53, 0x03, 0xd9, 0xab, 0x7c, 0xec, 0x8d, 0x29, 0x06, 0x67, 0x21, 0x21, 0xb7, 0x95, 0x17,
	0xcb, 0x6f, 0x54, 0x59, 0xdf, 0xa8, 0x4d, 0x68, 0xc8, 0x79, 0x5c, 0x6f, 0x3f, 0x99, 0x44, 0x46,
	0x47, 0x23, 0x99, 0xa4, 0xdd, 0x79, 0xa6, 0xcf, 0x70, 0x55, 0x48, 0xb4, 0x53, 0x01, 0xb4, 0x07,
	0x2b, 0x6a, 0x10, 0x5f, 0x5b, 0xed, 0xac, 0x18, 0xe8, 0x66, 0x3a, 0x90, 0x5f, 0xb0, 0x5c, 0xf9,
	0x99, 0x6d, 0x4d, 0xd0, 0xfc, 0xe3, 0x55, 0x58, 0xdc, 0xf6, 0x82, 0x7d, 0xec, 0x29, 0x75, 0xdc,
	0x85, 0x59, 0x1c, 0xd9, 0x87, 0xc6, 0x2d, 0x31, 0x22, 0x4a, 0x46, 0xcc, 0x80, 0x8e, 0x25, 0xfa,
	0xd1, 0x3d, 0xb8, 0x6a, 0x8b, 0xf6, 0x2e, 0x1e, 0x12, 0x1a, 0x62, 0x3b, 0x09, 0xbe, 0xa3, 0x64,
	0x1e, 0x64, 0x24, 0xe9, 0x3b, 0xec, 0xb9, 0x8e, 0xf4, 0xca, 0x52, 0x37, 0x63, 0x74, 0xf4, 0x1b,
	0xb8, 0x61, 0x07, 0x3e, 0x8b, 0x02, 0xaf, 0xeb, 0x61, 0x9f, 0xf4, 0x88, 0x1d, 0x47, 0x2e, 0x3b,
	0xdd, 0xd2, 0xe2, 0xf1, 0x34, 0x16, 0xf4, 0x06, 0x96, 0x1d, 0x19, 0x41, 0xf3, 0xa6, 0x6d, 0xdc,
	0xd6, 0xfd, 0x67, 0xfe, 0x93, 0x9b, 0xad, 0x71, 0x7e, 0x69, 0x17, 0x45, 0x23, 0xa1, 0x43, 0x58,
	0x77, 0x26, 0x06, 0x78, 0xb5, 0x11, 0xf7, 0x92, 0x79, 0xce, 0x82, 0x02, 0xd6, 0x94, 0xb1, 0xd0,
	0x03, 0x58, 0x76, 0x5c, 0xca, 0x3f, 0xab, 0x1b, 0x78, 0xae, 0x7d, 0xba, 0x79, 0x48, 0xec, 0x23,
	0x69, 0x76, 0x55, 0xab, 0xa8, 0x0b, 0xbd, 0x80, 0x86, 0x33, 0x02, 0x1f, 0x54, 0x00, 0xbc, 0x35,
	0xb2, 0xa2, 0x11, 0x78, 0x61, 0x8d, 0xc9, 0xf1, 0x38, 0x2d, 0x8f, 0xee, 0xb7, 0xc4, 0x1b, 0xf6,
	0x09, 0x65, 0x2a, 0x1e, 0x8e, 0x50, 0xd1, 0x07, 0x50, 0x97, 0x94, 0x7e, 0x84, 0x6d, 0xd7, 0x1f,
	0x18, 0x55, 0xc1, 0xa6, 0x13, 0x13, 0x98, 0x58, 0xcb, 0x60, 0xe2, 0x5d, 0xb8, 0x22, 0x0e, 0x64,
	0x76, 0x7e, 0x40, 0xe2, 0x00, 0x9d, 0x8a, 0x5e, 0xc1, 0x92, 0x17, 0xd8, 0xd8, 0x73, 0xd9, 0x69,
	0x67, 0xbf, 0x47, 0x18, 0xe3, 0x73, 0xdc, 0x11, 0xdb, 0xf9, 0xab, 0xc2, 0xed, 0xec, 0x8c, 0x72,
	0xcb, 0xcd, 0x1c, 0x1f, 0x05, 0x7d, 0x03, 0x70, 0xf4, 0x05, 0x55, 0x16, 0x61, 0x2c, 0xe8, 0xa8,
	0xea, 0xb7, 0xf1, 0x3e, 0x89, 0x7c, 0xc2, 0x08, 0xd5, 0xb2, 0x04, 0x2b, 0x27, 0x82, 0x3e, 0x83,
	0x79, 0x2f, 0x18, 0x0c, 0xf8, 0x8a, 0x16, 0x47, 0x62, 0xbb, 0x58, 0x51, 0x47, 0x76, 0x2a, 0xc9,
	0x84, 0x17, 0x6d, 0x40, 0x9d, 0x7b, 0xdc, 0xad, 0x93, 0x10, 0xfb, 0x94, 0x9b, 0x43, 0x5d, 0x17,
	0xde, 0xc9, 0x77, 0x2a, 0x61, 0x5d, 0x02, 0xbd, 0x80, 0x45, 0x4e, 0xd8, 0x25, 0xec, 0x5d, 0x10,
	0x1d, 0x51, 0xe3, 0x67, 0x42, 0x21, 0x77, 0x0b, 0x15, 0xb2, 0x93, 0x63, 0x54, 0xc0, 0x20, 0x2f,
	0xcb, 0x77, 0x62, 0x18, 0xf8, 0x2e, 0x0b, 0x22, 0xd7, 0x1f, 0x70, 0x34, 0x20, 0x62, 0x6e, 0xdd,
	0x1a, 0xa1, 0x72, 0xd7, 0x30, 0x64, 0x1e, 0x35, 0xae, 0xea, 0xae, 0x61, 0xa7, 0xdf, 0xe9, 0x25,
	0xae, 0x81, 0xf7, 0xa3, 0x5f, 0xc3, 0xe2, 0x30, 0xf6, 0x98, 0xbb, 0xe9, 0xc5, 0x94, 0x91, 0xc8,
	0x68, 0x08, 0xfe, 0xf5, 0x94, 0x3f, 0xd7, 0xa7, 0xe4, 0x34, 0x7e, 0x1e, 0x88, 0x02, 0x9f, 0x64,
	0xe7, 0x62, 0x49, 0x1c, 0x28, 0x8d, 0x86, 0x5e, 0xc1, 0x6a, 0x10, 0xb3, 0xfd, 0x20, 0xf6, 0x9d,
	0x7e, 0x84, 0x0f, 0x0e, 0x5c, 0x5b, 0x1a, 0x82, 0x81, 0xc4, 0x64, 0x3f, 0x4f, 0x26, 0xdb, 0x2b,
	0x62, 0x52, 0xb3, 0x16, 0x8f, 0xc0, 0xcd, 0x2e, 0xcc, 0x8c, 0xea, 0x39, 0x76, 0xbd, 0xbd, 0x90,
	0xf8, 0xc6, 0xb2, 0x34, 0xbb, 0x82, 0x2e, 0xee, 0x0b, 0x25, 0x39, 0x5b, 0xf3, 0x8a, 0xf4, 0x85,
	0x23, 0x64, 0xf4, 0x31, 0x2c, 0x85, 0x91, 0x1b, 0x70, 0x87, 0xb5, 0xe9, 0x61, 0x4a, 0x79, 0x8f,
	0xb1, 0x2a, 0x78, 0xc7, 0x3b, 0x04, 0x62, 0x8b, 0x82, 0x93, 0x53, 0x63, 0x4d, 0x7c, 0x54, 0x86,
	0xd8, 0x38, 0x31, 0x45, 0x6c, 0xbc, 0x81, 0x9e, 0x00, 0x88, 0x1f, 0x6f, 0x5c, 0xdf, 0x65, 0xc6,
	0x35, 0xc1, 0x7f, 0x4d, 0xe3, 0x6f, 0xfb, 0x6e, 0xe2, 0x74, 0x6a, 0x61, 0x42, 0x40, 0x3f, 0x87,
	0x19, 0xea, 0x50, 0xc3, 0x10, 0x02, 0x4b, 0x29, 0x2e, 0x6b, 0x25, 0x3b, 0xca, 0x7b, 0x93, 0x4c,
	0xec, 0x7a, 0x9a, 0x89, 0xf1, 0x9c, 0x8a, 0x11, 0x8f, 0x0c, 0x09, 0x8b, 0x72, 0x1f, 0xbd, 0x2e,
	0x73, 0xaa, 0xf1, 0x1e, 0xf4, 0x31, 0x54, 0x58, 0x84, 0x6d, 0x12, 0x19, 0x37, 0xc4, 0x4c, 0x29,
	0x02, 0xec, 0x0b, 0x6a, 0x02, 0x7e, 0x25, 0x0f, 0xba, 0x03, 0x0b, 0x2c, 0x8a, 0x29, 0x6b, 0x05,
	0x43, 0xec, 0xfa, 0xc6, 0x4d, 0x31, 0x6c, 0x9e, 0x84, 0xd6, 0xa0, 0x12, 0x53, 0xb2, 0xb3, 0xd9,
	0x35, 0xde, 0x17, 0xdb, 0xa2, 0x5a, 0xeb, 0xcf, 0xc1, 0x98, 0xe4, 0xcd, 0x2f, 0x84, 0x0c, 0x5b,
	0xb0, 0x56, 0xec, 0x46, 0x2e, 0x8a, 0x2f, 0xc7, 0x6c, 0xef, 0x42, 0x68, 0xe7, 0x57, 0xb0, 0x5c,
	0xe0, 0x48, 0xb8, 0x80, 0x47, 0x8e, 0x89, 0xa7, 0x06, 0x91, 0x0d, 0xf3, 0xbf, 0x67, 0xa0, 0x31,
	0x8a, 0x20, 0xfe, 0x24, 0x19, 0x5e, 0x0e, 0x03, 0xcd, 0xea, 0x18, 0xe8, 0x72, 0x39, 0x5d, 0x96,
	0x40, 0x55, 0xce, 0x9f, 0x40, 0xdd, 0x85, 0x2b, 0x5e, 0x80, 0x9d, 0x67, 0xd8, 0xc3, 0xbe, 0x4d,
	0xa2, 0x76, 0x57, 0x84, 0xaf, 0x9a, 0x35, 0x42, 0xcd, 0xb2, 0xa2, 0xea, 0xc5, 0xb2, 0xa2, 0xda,
	0x4f, 0x98, 0x15, 0xc1, 0xb9, 0xb3, 0x22, 0xf3, 0xdf, 0xab, 0xb0, 0x52, 0x84, 0xee, 0xfe, 0x0c,
	0x53, 0xf9, 0x0f, 0xa0, 0x6e, 0xc7, 0x94, 0x05, 0xc3, 0x1e, 0x89, 0x8e, 0x5d, 0x9b, 0x88, 0xdd,
	0xaf, 0x5a, 0x3a, 0x91, 0xdb, 0x82, 0x43, 0xf6, 0xe3, 0x81, 0xda, 0x5e, 0xd9, 0xe0, 0xfe, 0xc1,
	0x91, 0xce, 0xa3, 0x2a, 0xc8, 0xaa, 0x35, 0x5e, 0x1e, 0xa8, 0x5d, 0xbe, 0x3c, 0x00, 0xfa, 0xd9,
	0xfe, 0x5c, 0x96, 0x07, 0x64, 0x72, 0xfd, 0x8b, 0x69, 0x48, 0x7c, 0xa4, 0x3e, 0x70, 0x07, 0x16,
	0xc8, 0x09, 0x23, 0x91, 0x8f, 0xbd, 0x76, 0x97, 0xa7, 0xdb, 0x33, 0xdc, 0xdb, 0xe5, 0x48, 0xe8,
	0x96, 0x86, 0x53, 0xea, 0x62, 0xde, 0x3c, 0x0c, 0xb9, 0x07, 0x57, 0xb3, 0xd6, 0xb7, 0x8c, 0x85,
	0x54, 0x44, 0xf0, 0xaa, 0x35, 0x4a, 0xce, 0x99, 0xd2, 0xd5, 0xff, 0x8f, 0x29, 0x35, 0x0a, 0x4d,
	0xe9, 0x29, 0x18, 0x79, 0x4a, 0x4f, 0x1a, 0x01, 0xf6, 0x07, 0x84, 0x1a, 0x4b, 0xe2, 0xab, 0x26,
	0xf6, 0xa3, 0x4d, 0x40, 0x1a, 0xc0, 0x11, 0xe6, 0x67, 0xa0, 0xc9, 0x36, 0x59, 0xc0, 0x9e, 0xd9,
	0xf2, 0xf2, 0x99, 0xb6, 0x3c, 0x9a, 0xec, 0xae, 0x14, 0x24, 0xbb, 0x9f, 0xca, 0xd8, 0xb8, 0xaa,
	0xe3, 0x42, 0x7d, 0x47, 0x7b, 0x0e, 0xcd, 0x47, 0xca, 0x31, 0xd3, 0x5e, 0x3b, 0x7f, 0xc1, 0xe3,
	0xb1, 0x2a, 0x78, 0xc8, 0xe0, 0x7d, 0xa7, 0x78, 0xbe, 0xd7, 0xc7, 0xa1, 0xff, 0x53, 0xd4, 0x3e,
	0xcc, 0x36, 0x5c, 0x9b, 0xf0, 0x25, 0x17, 0x2d, 0x36, 0x98, 0x1d, 0x30, 0x26, 0x2d, 0x72, 0xca,
	0x58, 0x6b, 0x50, 0xa1, 0xf1, 0xc1, 0x81, 0x7b, 0xa2, 0x06, 0x53, 0x2d, 0xf3, 0x2b, 0xb8, 0x9d,
	0x41, 0xef, 0x2d, 0xff, 0x78, 0xc7, 0x3d, 0x21, 0xd1, 0x86, 0x83, 0x43, 0x76, 0x76, 0x35, 0xda,
	0x7c, 0x07, 0xd7, 0x26, 0xe0, 0xf6, 0x29, 0x2b, 0xe1, 0x06, 0x28, 0x73, 0x1a, 0x61, 0x3a, 0x32,
	0x37, 0xcd, 0x93, 0x38, 0x87, 0x4a, 0x98, 0x05, 0x60, 0x9b, 0x91, 0x80, 0x24, 0x47, 0x32, 0xdf,
	0x02, 0xea, 0x04, 0xd8, 0xe9, 0x1d, 0x12, 0xc7, 0xc9, 0x02, 0xf5, 0x2f, 0xa1, 0xe1, 0x61, 0x46,
	0x7c, 0xfb, 0xb4, 0x7f, 0x18, 0x11, 0x7a, 0x18, 0x78, 0x8e, 0xda, 0x9d, 0x31, 0xba, 0x79, 0x1f,
	0x66, 0x87, 0x81, 0x43, 0xd0, 0x22, 0x54, 0x5b, 0xed, 0xde, 0xc6, 0xb3, 0xce, 0x56, 0xab, 0xf1,
	0x1e, 0x6f, 0x75, 0xf6, 0xb6, 0xdf, 0xec, 0xed, 0x76, 0x5e, 0x35, 0x4a, 0x68, 0x01, 0xe6, 0xb7,
	0x76, 0x9f, 0xef, 0x59, 0x9b, 0x5b, 0x8d, 0xb2, 0x79, 0x17, 0x20, 0x83, 0xde, 0x53, 0x74, 0xb2,
	0x0d, 0xcb, 0x05, 0x09, 0xc5, 0xf4, 0x9d, 0x89, 0x29, 0x69, 0x77, 0x9e, 0x29, 0x55, 0xa8, 0x96,
	0xf9, 0xfb, 0x32, 0x2c, 0xe7, 0x77, 0x23, 0xd1, 0xec, 0x0e, 0xd4, 0x8f, 0x52, 0xa5, 0x73, 0x1f,
	0x28, 0x6b, 0x27, 0x1f, 0x8e, 0x67, 0x52, 0x85, 0xdb, 0x69, 0xe9, 0xd2, 0xa8, 0x25, 0xa0, 0xec,
	0x90, 0xb0, 0x43, 0x12, 0xcb, 0xdd, 0xc8, 0x95, 0x5b, 0xbb, 0x69, 0x4f, 0xc1, 0x40, 0x39, 0x39,
	0xf4, 0x19, 0xcc, 0x51, 0xe6, 0xb8, 0x81, 0xaa, 0xb1, 0xa4, 0xe6, 0xdb, 0xe3, 0xc4, 0x02, 0x59,
	0xc9, 0xcd, 0x7d, 0x5d, 0x4c, 0x49, 0xd2, 0x65, 0xb5, 0xa8, 0x82, 0x30, 0x23, 0x54, 0xf3, 0x3f,
	0xca, 0xb0, 0x20, 0x46, 0x51, 0x3a, 0xf8, 0x1c, 0xaa, 0x58, 0x69, 0x65, 0xb4, 0x74, 0x54, 0xa0,
	0x32, 0x2b, 0x65, 0x9e, 0x52, 0x30, 0x6a, 0xca, 0x80, 0x22, 0x4b, 0x78, 0x37, 0xb5, 0xd1, 0x0a,
	0xe3, 0x48, 0x6a, 0x9c, 0xb3, 0xf9, 0x4a, 0xe0, 0xa7, 0x50, 0x91, 0x49, 0x88, 0x0a, 0xbf, 0xd7,
	0xb5, 0x81, 0xb4, 0x7c, 0x48, 0x31, 0xa2, 0xa7, 0x50, 0x4b, 0x21, 0xbc, 0x82, 0x5c, 0xfa, 0xf4,
	0xfd, 0xa4, 0x37, 0xc9, 0x27, 0x52, 0xf6, 0x4b, 0xbb, 0xa3, 0x3f, 0x94, 0x61, 0x69, 0x6c, 0x45,
	0x7f, 0x12, 0x50, 0xa3, 0xc0, 0xca, 0xec, 0xc5, 0xc0, 0x4a, 0x6e, 0x1b, 0xe7, 0x26, 0xf8, 0xcc,
	0x4a, 0x7e, 0x5b, 0x46, 0xe3, 0xcf, 0x7c, 0xc1, 0x55, 0xd2, 0xff, 0xce, 0xc2, 0x4a, 0x91, 0xbe,
	0x2f, 0x7f, 0xd8, 0x8a, 0xf4, 0x59, 0x3e, 0xa7, 0x3e, 0x67, 0xce, 0xa1, 0xcf, 0xd9, 0xc9, 0xfa,
	0x9c, 0xbb, 0xb4, 0x3e, 0x2b, 0x85, 0x38, 0x6b, 0x5e, 0xc7, 0x59, 0x45, 0x7a, 0x9a, 0x64, 0x1f,
	0xd5, 0xfc, 0x46, 0xfc, 0x1a, 0x16, 0x39, 0x28, 0xa1, 0xca, 0x71, 0x2b, 0x40, 0x98, 0x16, 0x2b,
	0xc6, 0x9d, 0xba, 0xa5, 0xf1, 0x8f, 0x6d, 0x24, 0x9c, 0x55, 0x35, 0x5f, 0xb8, 0x7c, 0xe2, 0xf0,
	0x04, 0xd6, 0x28, 0xa1, 0xdc, 0x87, 0x6f, 0x1c, 0x1c, 0xf0, 0x44, 0x3f, 0x2d, 0x8c, 0x2e, 0x0a,
	0x1d, 0x4d, 0xe8, 0xbd, 0xb4, 0x51, 0x36, 0x01, 0x8d, 0x17, 0x6b, 0xa6, 0x44, 0x9a, 0x0d, 0xb8,
	0xca, 0xd3, 0xee, 0x8d, 0x01, 0xf1, 0xd9, 0x25, 0xb1, 0xc4, 0x36, 0xdc, 0x98, 0x52, 0xb2, 0x31,
	0xef, 0xa9, 0x20, 0x59, 0x87, 0xda, 0x46, 0xa7, 0xb3, 0xf7, 0xfd, 0x9b, 0x8d, 0xdd, 0x57, 0x8d,
	0xf7, 0xd0, 0x12, 0xd4, 0xad, 0xad, 0xed, 0x76, 0xaf, 0x6f, 0xbd, 0x52, 0xa1, 0xd2, 0xfc, 0x9b,
	0x2a, 0x2c, 0x74, 0x5d, 0x2f, 0x38, 0x7b, 0x21, 0x97, 0x36, 0x8a, 0x09, 0x0e, 0x64, 0xd4, 0x70,
	0x66, 0x8b, 0x0d, 0x47, 0x3b, 0x35, 0x73, 0x05, 0xa7, 0xa6, 0xd8, 0x71, 0x18, 0x30, 0x4f, 0x5d,
	0x87, 0xd8, 0x38, 0x4a, 0xee, 0x27, 0x55, 0x93, 0xe7, 0x4b, 0xa2, 0x7e, 0xd2, 0xc3, 0xc3, 0xd0,
	0x4b, 0x0a, 0xb1, 0x25, 0x4b, 0x27, 0xfe, 0x64, 0x49, 0x6c, 0x41, 0xfd, 0x1f, 0x8a, 0xeb, 0xff,
	0xca, 0x01, 0x2c, 0x5c, 0xcc, 0x01, 0xd8, 0x70, 0xfb, 0x88, 0x90, 0x10, 0x7b, 0xee, 0x31, 0xd7,
	0x18, 0x4f, 0xf7, 0xc4, 0x09, 0xe4, 0x79, 0x25, 0x3f, 0xe2, 0x03, 0xa2, 0x4a, 0xae, 0x53, 0x72,
	0xb7, 0xb3, 0x46, 0x40, 0x2f, 0xa1, 0xe1, 0x90, 0xd0, 0x0b, 0x4e, 0xf9, 0xe7, 0xc9, 0xdc, 0x47,
	0x5d, 0x51, 0x7e, 0x94, 0x02, 0x8e, 0xec, 0x0c, 0x35, 0x5b, 0x23, 0xbc, 0xd2, 0xb9, 0x8c, 0x0d,
	0x81, 0x6e, 0x42, 0x4d, 0x2a, 0x61, 0x07, 0x87, 0x2a, 0x13, 0xcb, 0x08, 0xe8, 0x31, 0xcc, 0xab,
	0xdb, 0x1b, 0x95, 0x84, 0xad, 0x6b, 0x73, 0xe9, 0xd5, 0xe6, 0x84, 0x35, 0x57, 0xf1, 0x6a, 0xe4,
	0x2b, 0x5e, 0x09, 0x4a, 0x58, 0xd2, 0x51, 0x42, 0x7e, 0xd5, 0xba, 0x17, 0xcc, 0xf0, 0x00, 0xd2,
	0xf1, 0x80, 0x10, 0x39, 0x1b, 0x0f, 0x2c, 0xeb, 0x78, 0x40, 0x48, 0x4d, 0xc1, 0x03, 0x9b, 0xb0,
	0x5a, 0xa8, 0xb5, 0x0b, 0xd5, 0xd1, 0x2e, 0xeb, 0xbf, 0xfe, 0x58, 0x02, 0x34, 0xae, 0x53, 0x71,
	0xf3, 0x20, 0x09, 0x49, 0x65, 0xa1, 0xa4, 0x6e, 0x1e, 0x34, 0x2a, 0x37, 0x52, 0x45, 0x11, 0x25,
	0x59, 0x05, 0xfb, 0x35, 0x9a, 0xf9, 0x25, 0xac, 0xba, 0xe9, 0xe0, 0x2c, 0x0a, 0x3c, 0x8f, 0x44,
	0x3b, 0xdc, 0x43, 0x2d, 0xc0, 0x7c, 0x6b, 0xeb, 0xf9, 0xc6, 0xcb, 0x4e, 0xbf, 0xf1, 0x1e, 0x02,
	0xa8, 0xf4, 0xfa, 0x56, 0x7b, 0xb3, 0xdf, 0x28, 0xa1, 0x79, 0x98, 0xd9, 0x7b, 0xfe, 0xbc, 0x51,
	0x36, 0x3f, 0x81, 0xa5, 0x31, 0x9d, 0x4f, 0x71, 0xae, 0x0f, 0x60, 0xa5, 0x48, 0xd9, 0x53, 0x24,
	0xde, 0xc2, 0x42, 0x2e, 0xf3, 0x45, 0x08, 0x66, 0x7d, 0x9e, 0xbd, 0xc8, 0x8f, 0x15, 0xbf, 0xd3,
	0xcb, 0xe7, 0x72, 0x76, 0xf9, 0x8c, 0xd6, 0xa1, 0xea, 0x07, 0x0e, 0xe9, 0x66, 0x97, 0xd2, 0x69,
	0x1b, 0xdd, 0x02, 0x90, 0x2f, 0x87, 0x44, 0xef, 0xac, 0xe8, 0xcd, 0x51, 0x44, 0x0d, 0x32, 0x83,
	0xe8, 0xd9, 0x73, 0x24, 0x3b, 0x22, 0x98, 0x91, 0xac, 0x27, 0xf1, 0x2e, 0x6a, 0xc9, 0x13, 0xfb,
	0xa7, 0xc0, 0xe3, 0x51, 0x17, 0x3a, 0x53, 0xe0, 0x42, 0xd5, 0xad, 0xd3, 0x6c, 0x76, 0xeb, 0xa4,
	0x4a, 0xd9, 0x73, 0x59, 0x29, 0xfb, 0x26, 0x77, 0x88, 0x8c, 0xf8, 0xe9, 0x6b, 0x91, 0x9a, 0x95,
	0x11, 0xd0, 0x06, 0x5c, 0xa1, 0x76, 0x84, 0x43, 0xd2, 0xf6, 0x19, 0x89, 0x8e, 0xb1, 0x27, 0xbc,
	0xee, 0x54, 0xaf, 0x33, 0x22, 0xc0, 0x93, 0x47, 0x3b, 0xf0, 0x19, 0x39, 0x61, 0x5d, 0xcc, 0x0e,
	0x15, 0xfa, 0xc8, 0x93, 0xf2, 0x1e, 0x61, 0x04, 0x7e, 0x8c, 0xbf, 0x52, 0xcb, 0x3c, 0xc2, 0x97,
	0x30, 0x4f, 0xd5, 0xf9, 0x05, 0x3d, 0xc7, 0xc9, 0xf4, 0xa8, 0x8e, 0x72, 0x22, 0xaa, 0xf8, 0xd1,
	0xd7, 0x50, 0xa5, 0xea, 0xde, 0x54, 0xf9, 0xe5, 0x3b, 0x45, 0xb2, 0x92, 0x23, 0x41, 0x91, 0x89,
	0x84, 0xf9, 0xfb, 0x12, 0xdc, 0x9c, 0x96, 0x87, 0x4d, 0x89, 0xb5, 0x7b, 0xb0, 0x3a, 0x94, 0x6f,
	0x25, 0xb6, 0x4e, 0x42, 0x37, 0x3a, 0x4d, 0xeb, 0x70, 0xe5, 0xb3, 0xb4, 0x5a, 0x2c, 0x67, 0x3e,
	0x06, 0x63, 0xd2, 0x8a, 0xa7, 0x58, 0xc6, 0x5f, 0xc1, 0xb5, 0x09, 0x3a, 0x42, 0x9b, 0xb9, 0xd3,
	0x3f, 0x92, 0xc7, 0x8e, 0x89, 0xec, 0x2a, 0xc6, 0x44, 0x43, 0x89, 0xa0, 0xb9, 0x07, 0xb7, 0xcf,
	0x60, 0x9e, 0xfe, 0x48, 0x24, 0xb5, 0xc9, 0xba, 0x7a, 0x10, 0xf2, 0xcf, 0x35, 0x58, 0xc8, 0xdd,
	0xfa, 0xf0, 0x58, 0x8f, 0x6d, 0x9b, 0x50, 0xda, 0x09, 0x06, 0xcf, 0x5d, 0x2f, 0x31, 0x6a, 0x9d,
	0xc8, 0x63, 0x74, 0x46, 0x08, 0xa2, 0x21, 0x4e, 0x5e, 0x9e, 0x8c, 0x92, 0x45, 0xad, 0x55, 0x82,
	0x3c, 0x75, 0xe7, 0x22, 0x0d, 0x44, 0x27, 0xa2, 0x8f, 0x61, 0xc9, 0x0e, 0x86, 0x61, 0xe0, 0x73,
	0x5f, 0x1e, 0x0c, 0x3a, 0xe2, 0x0e, 0x42, 0x9a, 0xcc, 0x78, 0x87, 0x3a, 0xf7, 0x76, 0x1c, 0x45,
	0xc4, 0xb7, 0x4f, 0x55, 0x86, 0x93, 0x27, 0x71, 0xe3, 0x72, 0x7c, 0x6a, 0x91, 0x83, 0x88, 0xd0,
	0x43, 0x0b, 0x33, 0x09, 0xcd, 0xa7, 0x1b, 0x97, 0x2e, 0x90, 0xdd, 0x52, 0x8b, 0x77, 0x81, 0xf1,
	0x30, 0x14, 0x16, 0x94, 0xde, 0x52, 0x27, 0x54, 0xd4, 0x81, 0x65, 0x92, 0x7b, 0xa9, 0xd3, 0xd3,
	0x0c, 0x27, 0x35, 0xb7, 0xf1, 0xc7, 0x3c, 0x56, 0x91, 0x18, 0xfa, 0x1a, 0x16, 0x04, 0xb9, 0xc7,
	0x30, 0xa3, 0x8e, 0x32, 0xa1, 0x69, 0xa3, 0xe4, 0xd9, 0xd1, 0x03, 0x58, 0x26, 0x27, 0xb6, 0x17,
	0x3b, 0xa4, 0xed, 0x0b, 0xa4, 0x2b, 0x8b, 0x9d, 0x8b, 0x42, 0x91, 0x45, 0x5d, 0x7c, 0x23, 0x13,
	0x72, 0x57, 0x15, 0x54, 0xeb, 0x72, 0x23, 0x47, 0xc8, 0x19, 0x68, 0xbc, 0x92, 0x07, 0x8d, 0x0f,
	0x60, 0xd9, 0xf5, 0xc7, 0x67, 0xbc, 0x2a, 0x67, 0x2c, 0xe8, 0xe2, 0x33, 0x26, 0xe4, 0x64, 0x46,
	0x59, 0xf4, 0x1d, 0x25, 0xa3, 0x26, 0xa0, 0xa3, 0x78, 0x9f, 0x1c, 0xbb, 0x11, 0x13, 0x2e, 0xef,
	0x00, 0xdb, 0xa2, 0xde, 0x2b, 0xae, 0x02, 0xc7, 0x7b, 0x78, 0x78, 0xf1, 0x92, 0xb3, 0x83, 0x04,
	0x57, 0xda, 0xe6, 0xe1, 0x25, 0x8c, 0xdc, 0x63, 0xd7, 0x23, 0x03, 0xe2, 0xa8, 0x1b, 0xd7, 0x1c,
	0x05, 0x3d, 0x83, 0x9b, 0x11, 0xc1, 0x8e, 0xeb, 0x13, 0x4a, 0xdb, 0xbe, 0xcb, 0x5c, 0xec, 0xb5,
	0x88, 0x87, 0x4f, 0x7b, 0xc4, 0x0e, 0x7c, 0x87, 0xaa, 0x2a, 0xee, 0x54, 0x1e, 0x9e, 0x44, 0xa5,
	0xfd, 0x5d, 0x12, 0xb9, 0x81, 0x93, 0x48, 0xaf, 0x0a, 0xe9, 0x09, 0xbd, 0xe8, 0x6b, 0xb8, 0x9e,
	0xf6, 0x3c, 0xc7, 0xae, 0x17, 0x47, 0x24, 0x2b, 0xea, 0xad, 0x09, 0xd1, 0xc9, 0x0c, 0xfc, 0xcb,
	0x28, 0xc3, 0x2c, 0xa6, 0xc2, 0xb1, 0x5c, 0x13, 0xec, 0x39, 0x8a, 0x0e, 0xcb, 0x8d, 0x4b, 0xc3,
	0x72, 0xf3, 0x43, 0x58, 0x4a, 0x6d, 0x7b, 0xcb, 0xb7, 0x03, 0x91, 0xa3, 0x56, 0x61, 0xf6, 0x45,
	0x6f, 0x6f, 0xb7, 0xf1, 0x1e, 0xff, 0xd5, 0xdf, 0xfa, 0x5d, 0xbf, 0x51, 0x32, 0x3f, 0x04, 0xe0,
	0x19, 0x49, 0xdb, 0xff, 0x81, 0xd8, 0x4c, 0x16, 0x16, 0x73, 0x35, 0xc7, 0xb4, 0x02, 0x59, 0x32,
	0x1f, 0x24, 0x57, 0xb7, 0x1c, 0xc5, 0xbc, 0x6e, 0x77, 0x7f, 0xdb, 0xe6, 0x03, 0xd5, 0xa1, 0xd6,
	0x69, 0x6f, 0x7f, 0xdb, 0xef, 0xf5, 0xb7, 0xba, 0xb2, 0x30, 0xd9, 0xda, 0xe8, 0x6f, 0xb4, 0xf6,
	0xb6, 0x1b, 0x65, 0xf3, 0x43, 0xb8, 0x3a, 0x72, 0xe3, 0x9c, 0x1d, 0xcb, 0x52, 0x3e, 0xd9, 0xdb,
	0x84, 0x6b, 0x13, 0xde, 0xae, 0xf2, 0x38, 0xcd, 0x93, 0x06, 0x05, 0xf3, 0x78, 0x42, 0xb0, 0x06,
	0x95, 0x21, 0x19, 0x06, 0xd1, 0x69, 0x52, 0x2f, 0x96, 0x2d, 0xf3, 0x0f, 0x25, 0xa8, 0xa5, 0xf7,
	0xd5, 0x53, 0xdc, 0xaa, 0x01, 0xf3, 0xb1, 0x43, 0x45, 0x08, 0x96, 0x03, 0x24, 0x4d, 0x8e, 0x24,
	0x62, 0x4a, 0x76, 0xb9, 0x27, 0xf4, 0x5e, 0xbc, 0x63, 0xea, 0x95, 0x91, 0x46, 0xe3, 0xae, 0x2f,
	0xa6, 0xa4, 0x1f, 0xc5, 0x94, 0xbd, 0x0b, 0x22, 0x76, 0x78, 0xca, 0x19, 0x65, 0x69, 0x70, 0xbc,
	0xc3, 0xfc, 0x6b, 0x58, 0xcc, 0x57, 0xfa, 0x39, 0xc6, 0x18, 0x72, 0x40, 0x22, 0x66, 0x97, 0xdf,
	0x94, 0x11, 0x52, 0x60, 0x56, 0xce, 0x01, 0x33, 0x7e, 0x5e, 0xc4, 0x08, 0xb9, 0x82, 0x73, 0x8e,
	0x62, 0xfe, 0x67, 0x19, 0xae, 0x9c, 0x37, 0xdc, 0x8d, 0x41, 0xa5, 0xf2, 0xb4, 0x6c, 0x73, 0x26,
	0xef, 0x38, 0xc4, 0x32, 0xbc, 0x83, 0x9e, 0x3b, 0xf0, 0xd3, 0xdb, 0xdc, 0x1c, 0x65, 0xf4, 0xa6,
	0x7e, 0x6e, 0xfc, 0xa6, 0xfe, 0x37, 0x50, 0x75, 0x7c, 0xba, 0x49, 0xb8, 0xbf, 0xa9, 0xe8, 0x4f,
	0x67, 0xf5, 0xf5, 0x37, 0x5b, 0x8a, 0x4d, 0x26, 0x2b, 0xa9, 0x94, 0x78, 0x3f, 0x26, 0xe0, 0xe1,
	0x0e, 0xa1, 0x87, 0xea, 0x95, 0xc7, 0xbc, 0x7a, 0x3f, 0x36, 0x42, 0x5f, 0xff, 0x0a, 0xea, 0xda,
	0x30, 0x17, 0x4a, 0x17, 0xb6, 0xa1, 0xae, 0x63, 0x01, 0x13, 0x16, 0x93, 0x6b, 0xb8, 0x14, 0x0f,
	0xd4, 0x2d, 0x8d, 0x56, 0xb4, 0x79, 0xe6, 0xff, 0x94, 0x60, 0xb5, 0x27, 0xb3, 0x72, 0x69, 0x5f,
	0xc1, 0xd9, 0xc8, 0xe8, 0x6b, 0xb8, 0x2e, 0x7f, 0xa6, 0x89, 0x33, 0x7d, 0x76, 0xaa, 0xde, 0x32,
	0x28, 0xe8, 0x3b, 0x99, 0x61, 0xc2, 0xee, 0x9d, 0xe7, 0x45, 0xe7, 0x03, 0x58, 0x8e, 0xc8, 0xbb,
	0xc8, 0x65, 0x64, 0x23, 0x0c, 0xbf, 0xed, 0xf7, 0xbb, 0xdd, 0x28, 0xd8, 0x27, 0xc9, 0x23, 0xb3,
	0x82, 0xae, 0x91, 0x33, 0x51, 0x19, 0x3d, 0x13, 0xe6, 0xf7, 0x70, 0x6d, 0x42, 0x91, 0x7d, 0xfa,
	0x11, 0x0d, 0x62, 0x16, 0xc6, 0x6c, 0x83, 0xbe, 0xa0, 0xe9, 0x03, 0x41, 0x8d, 0x66, 0xfe, 0x4b,
	0x09, 0x16, 0xf3, 0xef, 0x45, 0xd0, 0x67, 0x30, 0xef, 0x60, 0x86, 0x9d, 0x60, 0x30, 0x5a, 0x06,
	0x95, 0x6c, 0x2d, 0xd9, 0x99, 0xa0, 0x5f, 0xc5, 0x8b, 0xbe, 0x82, 0x9a, 0xe7, 0x0e, 0x0e, 0x19,
	0x65, 0x24, 0x54, 0xc0, 0xf3, 0x7d, 0x5d, 0xb0, 0xc3, 0xbb, 0x7b, 0x8c, 0x84, 0x49, 0x42, 0x9b,
	0xf2, 0xa3, 0x87, 0x50, 0xf9, 0xd1, 0x0d, 0x8f, 0x54, 0xed, 0x27, 0x17, 0xf5, 0xa5, 0xe4, 0x6b,
	0xd1, 0x97, 0x24, 0xd0, 0x92, 0xd3, 0xbc, 0x0f, 0xcb, 0x05, 0x0b, 0xe2, 0xda, 0xc0, 0x8e, 0x23,
	0x60, 0xbf, 0x3c, 0x9f, 0x49, 0xd3, 0xfc, 0xdb, 0x12, 0xac, 0x16, 0xae, 0x64, 0xb2, 0x0c, 0x37,
	0x45, 0xe9, 0xf9, 0xfb, 0xc1, 0x11, 0xf1, 0xd5, 0x79, 0xcc, 0x93, 0xf8, 0xc6, 0xd9, 0x7c, 0x4c,
	0xe9, 0x86, 0x94, 0x4f, 0xc9, 0x28, 0xe2, 0x46, 0x8e, 0x9b, 0x24, 0x51, 0x86, 0xae, 0x5a, 0x66,
	0x13, 0xd0, 0xf8, 0xc7, 0x4d, 0x59, 0xfd, 0x3f, 0x94, 0xa1, 0xae, 0xde, 0xfd, 0x9d, 0xb9, 0xef,
	0x4f, 0xb2, 0xd4, 0xa7, 0xac, 0x57, 0x16, 0xd4, 0x08, 0x13, 0x92, 0x9f, 0x47, 0x50, 0xf9, 0x01,
	0x93, 0x01, 0x89, 0xd4, 0x36, 0xdc, 0x18, 0x11, 0x7b, 0x21, 0x3a, 0x93, 0x7d, 0x90, 0xac, 0x1c,
	0x7a, 0x84, 0x51, 0x70, 0xec, 0x3a, 0x24, 0x52, 0x39, 0x61, 0xda, 0x46, 0xf7, 0xb3, 0x6c, 0x6a,
	0x4e, 0x7f, 0x71, 0x3e, 0x21, 0x87, 0x7a, 0x94, 0x1e, 0x84, 0x4a, 0xe1, 0x0a, 0x0a, 0x4f, 0xc2,
	0x03, 0x58, 0x29, 0xfa, 0xae, 0x29, 0xa9, 0x0a, 0x93, 0x67, 0x67, 0xe4, 0x93, 0x92, 0xcc, 0xb6,
	0x34, 0x96, 0xd9, 0x96, 0xb3, 0xcc, 0xf6, 0xcb, 0x34, 0x62, 0x4a, 0x1d, 0xfd, 0xac, 0x50, 0x47,
	0x3b, 0x82, 0x25, 0x59, 0xa7, 0x0a, 0xaa, 0x4f, 0xe1, 0xfa, 0x44, 0x26, 0xf4, 0x3e, 0xc0, 0x10,
	0x9f, 0xbc, 0x11, 0xa8, 0x80, 0x2a, 0xa7, 0x58, 0x1b, 0xe2, 0x13, 0x71, 0x48, 0xa8, 0xf9, 0xaf,
	0xe5, 0x74, 0xc9, 0xda, 0x81, 0x39, 0xcf, 0x92, 0xc5, 0xfb, 0xb8, 0x60, 0x9f, 0xf4, 0x18, 0x8e,
	0x58, 0x1c, 0x0a, 0xe0, 0xa6, 0x32, 0xfb, 0xf1, 0x0e, 0x1e, 0x56, 0xdf, 0xc6, 0x24, 0x3a, 0x4d,
	0x8b, 0x11, 0x75, 0x2b, 0x23, 0xfc, 0x54, 0x6f, 0xd5, 0xb9, 0x6b, 0xfa, 0x01, 0x1f, 0xe3, 0xbd,
	0x90, 0xd1, 0x6f, 0x09, 0x0e, 0x55, 0xc2, 0xa3, 0xd1, 0xf8, 0xc9, 0x1a, 0xe2, 0x93, 0x5e, 0x88,
	0x7d, 0xaa, 0x12, 0x9d, 0xb4, 0x8d, 0x1e, 0xc1, 0x2c, 0x4f, 0x0c, 0x55, 0x6e, 0x73, 0xbb, 0xf0,
	0x98, 0xf0, 0xe4, 0x30, 0xb9, 0xd6, 0xe7, 0xcc, 0xe6, 0x27, 0x70, 0x6d, 0x02, 0x03, 0x8f, 0x38,
	0x76, 0x18, 0x27, 0x8a, 0x17, 0xbf, 0xcd, 0x7f, 0x9b, 0x83, 0xca, 0x77, 0x62, 0x5c, 0xf4, 0x15,
	0x2c, 0x70, 0x8b, 0x1e, 0xca, 0xff, 0x6f, 0x29, 0xc7, 0x98, 0x56, 0xf9, 0xc6, 0xfe, 0xda, 0x65,
	0xe5, 0xb9, 0x51, 0x13, 0x6a, 0xf2, 0x7d, 0xb9, 0xed, 0xbb, 0xca, 0x20, 0xd3, 0x47, 0x81, 0xe9,
	0xff, 0xd2, 0xac, 0xaa, 0xe0, 0xd9, 0xf4, 0x5d, 0xf4, 0x25, 0x2c, 0x8a, 0xdf, 0x5c, 0x97, 0x8e,
	0x9f, 0xfc, 0xdd, 0x2b, 0x35, 0x1d, 0xed, 0xcf, 0x5a, 0x96, 0xc6, 0x8a, 0x3e, 0x86, 0xca, 0x40,
	0xfc, 0x1d, 0x41, 0x5d, 0xb5, 0xad, 0x14, 0xfd, 0x49, 0xc1, 0x52, 0x3c, 0xe8, 0x21, 0x54, 0xd5,
	0x75, 0x7b, 0xb2, 0x97, 0x6b, 0x23, 0x4f, 0x57, 0xd2, 0xdb, 0xae, 0x84, 0x4f, 0xcc, 0x20, 0x5e,
	0xcf, 0x29, 0x0b, 0x5d, 0x29, 0x7a, 0x1d, 0x6b, 0x29, 0x1e, 0xf4, 0x11, 0xcc, 0x0d, 0x79, 0xc4,
	0x52, 0x05, 0x9e, 0xe5, 0x82, 0x0b, 0x57, 0x4b, 0x72, 0xa0, 0xcf, 0xa0, 0xc6, 0x37, 0x09, 0x0f,
	0x88, 0xcf, 0xd4, 0xb6, 0xa6, 0x6f, 0x2d, 0x47, 0x2e, 0x40, 0xac, 0x8c, 0x53, 0x3c, 0x4f, 0x71,
	0xbd, 0x80, 0xa9, 0x22, 0xcf, 0x72, 0x41, 0xb1, 0xd6, 0x92, 0x1c, 0xe8, 0x0b, 0xed, 0x0e, 0x1c,
	0xf4, 0xbf, 0x09, 0x8c, 0x16, 0xd8, 0xb4, 0x7b, 0xef, 0x87, 0x63, 0xa5, 0x9d, 0xb5, 0x62, 0xbc,
	0x95, 0x15, 0x74, 0xd0, 0x4b, 0x58, 0xa3, 0x3a, 0x5c, 0xf9, 0x9e, 0xec, 0x1f, 0x06, 0xc1, 0x91,
	0x2a, 0xb1, 0xa7, 0xd1, 0xb1, 0x10, 0xd4, 0x58, 0x13, 0x84, 0xb9, 0x4b, 0x65, 0xea, 0x4d, 0x78,
	0x5d, 0x3f, 0x17, 0x5a, 0x74, 0xb0, 0x12, 0x2e, 0x73, 0x03, 0xea, 0xda, 0xdf, 0x7b, 0x2e, 0xfe,
	0x7a, 0xe4, 0x19, 0xbc, 0xae, 0x1e, 0x7f, 0x8a, 0xbd, 0xf0, 0x10, 0x3f, 0xdc, 0xaf, 0x88, 0xf2,
	0xc1, 0xa3, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xfd, 0xd5, 0x04, 0x4e, 0x3a, 0x00, 0x00,
}
