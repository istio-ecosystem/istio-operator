// Copyright 2019 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


syntax = 'proto3';

import "google/protobuf/duration.proto";
import "k8s.io/api/core/v1/generated.proto";

package values;

// Package-wide variables from generator "generated".
option go_package = "v1alpha2";

// AddonIngressConfig is described in istio.io documentation.
message AddonIngressConfig {
  bool enabled = 1;

  repeated string hosts = 2;
}

// ArchConfig specifies the pod scheduling target architecture(amd64, ppc64le, s390x) for all the Istio control plane components.
message ArchConfig {
  // Sets pod scheduling weight for amd64 arch
  uint32 amd64 = 1;

  // Sets pod scheduling weight for ppc64le arch.
  uint32 ppc64le = 2;

  // Sets pod scheduling weight for s390x arch.
  uint32 s390x = 3;
}

// CNIConfig is described in istio.io documentation.
message CNIConfig {
  bool enabled = 1;
}

// CPUTargetUtilizationConfig is described in istio.io documentation.
message CPUTargetUtilizationConfig {
  int32 targetAverageUtilization = 1;
}

// CertManagerConfig is described in istio.io documentation.
message CertManagerConfig {
  bool enabled = 1;

  string hub = 2;

  // 	NodeSelector map[string]interface{} `json:"nodeSelector"`
  k8s.io.api.core.v1.ResourceRequirements resources = 3;

  string tag = 4;
}

// CoreDNSConfig is described in istio.io documentation.
message CoreDNSConfig {
  string coreDNSImage = 1;

  string coreDNSPluginImage = 2;

  bool enabled = 3;

  // 	NodeSelector       map[string]interface{} `json:"nodeSelector,omitempty"`
  uint32 replicaCount = 4;
}

// DefaultPodDisruptionBudgetConfig specifies the default pod disruption budget configuration.
// 
// See https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
message DefaultPodDisruptionBudgetConfig {
  // k8s PodDisruptionBudget settings.
  bool enabled = 1;
}

// DefaultResourcesConfig specifies the default k8s resources settings for all Istio control plane components.
message DefaultResourcesConfig {
  // k8s resources settings.
  //
  // See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
  ResourcesRequestsConfig requests = 1;
}

// EgressGatewayConfig is described in istio.io documentation.
message EgressGatewayConfig {
  bool autoscaleEnabled = 1;

  uint32 autoscaleMax = 2;

  uint32 autoscaleMin = 3;

  string connectTimeout = 4;

  CPUTargetUtilizationConfig cpu = 5;

  google.protobuf.Duration drainDuration = 6;

  bool enabled = 7;

  map<string, string> env = 8;

  GatewayLabelsConfig labels = 9;

  map<string, string> nodeSelector = 10;

  // 	PodAnnotations                   map[string]interface{}      `json:"podAnnotations,omitempty"`
  // 	PodAntiAffinityLabelSelector     []map[string]interface{}    `json:"podAntiAffinityLabelSelector"`
  // 	PodAntiAffinityTermLabelSelector []map[string]interface{}    `json:"podAntiAffinityTermLabelSelector"`
  repeated PortsConfig ports = 11;

  k8s.io.api.core.v1.ResourceRequirements resources = 12;

  repeated SecretVolume secretVolumes = 13;

  // 	ServiceAnnotations               map[string]interface{}      `json:"serviceAnnotations,omitempty"`
  //    Type                             v1.ServiceType          `json:"type,omitempty"`
  ZeroVPNConfig zvpn = 14;
}

// EnvoyMetricsConfig is described in istio.io documentation.
message EnvoyMetricsConfig {
  // Enables the Envoy Metrics Service.
  bool enabled = 1;

  // Sets the destination Envoy Metrics Service address in Envoy.
  string host = 2;

  // Sets the destination Envoy Metrics Service port in Envoy.
  int32 port = 3;
}

// GalleyConfig is described in istio.io documentation.
message GalleyConfig {
  bool enabled = 1;

  string image = 2;

  map<string, string> mesh = 3;

  // 	PodAntiAffinityLabelSelector     []map[string]interface{} `json:"podAntiAffinityLabelSelector"`
  // 	PodAntiAffinityTermLabelSelector []map[string]interface{} `json:"podAntiAffinityTermLabelSelector"`
  uint32 replicaCount = 4;

  k8s.io.api.core.v1.ResourceRequirements resources = 5;
}

// GatewayLabelsConfig is described in istio.io documentation.
message GatewayLabelsConfig {
  string app = 1;

  string istio = 2;
}

// GatewaysConfig is described in istio.io documentation.
message GatewaysConfig {
  EgressGatewayConfig istio_egressgateway = 1;

  bool enabled = 2;

  ILBGatewayConfig istio_ilbgateway = 3;

  IngressGatewayConfig istio_ingressgateway = 4;
}

// GlobalConfig is a set of configuration parameters for all Istio components.
message GlobalConfig {
  // Specifies pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:
  //   0 - Never scheduled
  //   1 - Least preferred
  //   2 - No preference
  //   3 - Most preferred
  ArchConfig arch = 30;

  // Specifies the namespace for the configuration and validation component.
  string configNamespace = 1;

  // Controls whether the server-side validation is enabled or not.
  bool configValidation = 2;

  // Controls whether the MTLS for communication between the control plane components is enabled or not.
  bool controlPlaneSecurityEnabled = 3;

  // Default k8s node selector for all the Istio control plane components
  //
  // See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  map<string, string> defaultNodeSelector = 31;

  // Specifies the default pod disruption budget configuration.
  DefaultPodDisruptionBudgetConfig defaultPodDisruptionBudget = 4;

  // Controls whether the policy enforcement is enabled or not.
  bool disablePolicyChecks = 5;

  // Default k8s resources settings for all Istio control plane components.
  //
  // See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
  DefaultResourcesConfig defaultResources = 6;

  // Controls whether the helm test templates are enabled or not.
  bool enableHelmTest = 7;

  // Controls whether the distributed tracing for the applications is enabled or not.
  //
  // See https://opentracing.io/docs/overview/what-is-tracing/
  bool enableTracing = 8;

  // Specifies the docker hub for the Istio images.
  string hub = 9;

  // Specifies the image pull policy for the Istio images. one of Always, Never, IfNotPresent.
  // Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
  //
  // More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
  // ImagePullPolicy             v1.PullPolicy                 `json:"imagePullPolicy,omitempty"`

  // Specifies the default namespace for the Istio control plane components.
  string istioNamespace = 10;

  // Specifies the global locality load balancing settings.
  // Locality-weighted load balancing allows administrators to control the distribution of traffic to
  // endpoints based on the localities of where the traffic originates and where it will terminate.
  // Please set either failover or distribute configuration but not both.
  //
  // localityLbSetting:
  //   distribute:
  //   - from: "us-central1/*"
  //     to:
  //       "us-central1/*": 80
  //       "us-central2/*": 20
  //
  // localityLbSetting:
  //   failover:
  //   - from: us-east
  //     to: eu-west
  //   - from: us-west
  //     to: us-east
  map<string, string> localityLbSetting = 32;

  // Specifies the configuration for the legacy kubernetes Ingress.
  KubernetesIngressConfig k8sIngress = 11;

  // Specifies the global logging level settings for the Istio control plane components.
  GlobalLoggingConfig logging = 12;

  // Specifies the configuration for Istio mesh expansion to bare mental.
  MeshExpansionConfig meshExpansion = 13;

  // Configure the mesh networks to be used by the Split Horizon EDS.
  //
  // The following example defines two networks with different endpoints association methods.
  // For `network1` all endpoints that their IP belongs to the provided CIDR range will be
  // mapped to network1. The gateway for this network example is specified by its public IP
  // address and port.
  // The second network, `network2`, in this example is defined differently with all endpoints
  // retrieved through the specified Multi-Cluster registry being mapped to network2. The
  // gateway is also defined differently with the name of the gateway service on the remote
  // cluster. The public IP for the gateway will be determined from that remote service (only
  // LoadBalancer gateway service type is currently supported, for a NodePort type gateway service,
  // it still need to be configured manually).
  //
  // meshNetworks:
  //   network1:
  //     endpoints:
  //     - fromCidr: "192.168.0.1/24"
  //     gateways:
  //     - address: 1.1.1.1
  //       port: 80
  //   network2:
  //     endpoints:
  //     - fromRegistry: reg1
  //     gateways:
  //     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local
  //       port: 443
  //
  map<string, string> meshNetworks = 33;

  // Specifies the monitor port number for all Istio control plane components.
  uint32 monitoringPort = 14;

  // Specifies the MTLS settings for the applications that Istio manages.
  MTLSConfig mtls = 15;

  // Specifies the configuration for Istio mesh across multiple clusters through the istio gateways.
  MultiClusterConfig multiCluster = 16;

  // Whether to restrict the applications namespace the controller manages;
  // If set it to false, the controller watches all namespaces.
  bool oneNamespace = 17;

  // Controls the default behavior of the sidecar for handling outbound traffic from the application.
  OutboundTrafficPolicyConfig outboundTrafficPolicy = 18;

  // Controls whether to allow traffic in cases when the mixer policy service cannot be reached.
  bool policyCheckFailOpen = 19;

  // Specifies the namespace for the policy component.
  string policyNamespace = 20;

  // Specifies the k8s priorityClassName for the istio control plane components.
  //
  // See https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  string priorityClassName = 21;

  // Specifies how proxies are configured within Istio.
  ProxyConfig proxy = 22;

  // Specifies the configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
  ProxyInitConfig proxy_init = 23;

  // Specifies the configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
  SDSConfig sds = 24;

  // Specifies the tag for the Istio docker images.
  string tag = 25;

  // Specifies the namespace for the telemetry component.
  string telemetryNamespace = 26;

  // Specifies the configuration for each of the supported tracers.
  TracerConfig tracer = 27;

  // Specifies the trust domain that corresponds to the root cert of CA.
  string trustDomain = 28;

  // Controls whether to use of Mesh Configuration Protocol to distribute configuration. 
  bool useMCP = 29;
}

// GlobalLoggingConfig specifies the global logging level settings for the Istio control plane components.
message GlobalLoggingConfig {
  // Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
  // The control plane has different scopes depending on component, but can configure default log level across all components
  // If empty, default scope and level will be used as configured in code
  string level = 1;
}

// ILBGatewayConfig is described in istio.io documentation.
message ILBGatewayConfig {
  bool autoscaleEnabled = 1;

  uint32 autoscaleMax = 2;

  uint32 autoscaleMin = 3;

  bool enabled = 4;

  CPUTargetUtilizationConfig cpu = 5;

  GatewayLabelsConfig labels = 6;

  string loadBalancerIP = 7;

  // 	NodeSelector       map[string]interface{}      `json:"nodeSelector,omitempty"`
  // 	PodAnnotations     map[string]interface{}      `json:"podAnnotations,omitempty"`
  repeated PortsConfig ports = 8;

  k8s.io.api.core.v1.ResourceRequirements resources = 9;

  repeated SecretVolume secretVolumes = 10;
  //    ServiceAnnotations map[string]interface{}      `json:"serviceAnnotations,omitempty"`
//      Type               v1.ServiceType          `json:"type,omitempty"`
}

// IngressGatewayConfig is described in istio.io documentation.
message IngressGatewayConfig {
  bool autoscaleEnabled = 1;

  uint32 autoscaleMax = 2;

  uint32 autoscaleMin = 3;

  string connectTimeout = 4;

  CPUTargetUtilizationConfig cpu = 5;

  bool customService = 6;

  string debug = 7;

  string domain = 8;

  google.protobuf.Duration drainDuration = 9;

  bool enabled = 10;

  map<string, string> env = 11;

  repeated string externalIPs = 12;

  bool k8sIngress = 13;

  bool k8sIngressHttps = 14;

  GatewayLabelsConfig labels = 15;

  string loadBalancerIP = 16;

  repeated string loadBalancerSourceRanges = 17;

  repeated PortsConfig meshExpansionPorts = 18;

  // 	NodeSelector                     map[string]interface{}      `json:"nodeSelector,omitempty"`
  // 	PodAnnotations                   map[string]interface{}      `json:"podAnnotations,omitempty"`
  // 	PodAntiAffinityLabelSelector     []map[string]interface{}    `json:"podAntiAffinityLabelSelector"`
  // 	PodAntiAffinityTermLabelSelector []map[string]interface{}    `json:"podAntiAffinityTermLabelSelector"`
  repeated PortsConfig ports = 19;

  uint32 replicaCount = 20;

  // 	Resources                        map[string]interface{}      `json:"resources,omitempty"`
  IngressGatewaySdsConfig sds = 21;

  repeated SecretVolume secretVolumes = 22;

  // 	ServiceAnnotations               map[string]interface{}      `json:"serviceAnnotations,omitempty"`
  //    Type                             v1.ServiceType          `json:"type,omitempty"`
  IngressGatewayZvpnConfig zvpn = 23;
}

// IngressGatewaySdsConfig is described in istio.io documentation.
message IngressGatewaySdsConfig {
  bool enabled = 1;

  string image = 2;
}

// IngressGatewayZvpnConfig is described in istio.io documentation.
message IngressGatewayZvpnConfig {
  bool enabled = 1;

  string suffix = 2;
}

// KubernetesEnvMixerAdapterConfig is described in istio.io documentation.
message KubernetesEnvMixerAdapterConfig {
  bool enabled = 1;
}

// KubernetesIngressConfig specifies the configuration for the legacy kubernetes Ingress.
message KubernetesIngressConfig {
  // Enables gateway for legacy k8s Ingress.
  bool enabled = 1;

  // Enables gateway for legacy k8s Ingress.
  bool enableHttps = 2;

  // Sets the gateway name for legacy k8s Ingress.
  string gatewayName = 3;
}

// LoadSheddingConfig configs when mixer starts rejecting grpc requests.
message LoadSheddingConfig {
  string latencyThreshold = 1;

  enum mode {
    DISABLED = 0;
    LOG_ONLY = 1;
    ENFORCE = 2;
  }
}

// MTLSConfig specifies the MTLS settings for the applications that Istio manages.
message MTLSConfig {
  // Enables MTLS for service to service traffic.
  bool enabled = 1;
}

// MeshExpansionConfig specifies the configuration for Istio mesh expansion to bare mental.
message MeshExpansionConfig {
  // Exposes Pilot and Citadel mTLS on the ingress gateway.
  bool enabled = 1;

  // Exposes Pilot and Citadel mTLS and the plain text Pilot ports on an internal gateway.
  bool useILB = 2;
}

// MixerAdaptersConfig is described in istio.io documentation.
message MixerAdaptersConfig {
  KubernetesEnvMixerAdapterConfig kubernetesenv = 1;

  PrometheusMixerAdapterConfig prometheus = 2;

  StdioMixerAdapterConfig stdio = 3;

  bool useAdapterCRDs = 4;
}

// MixerConfig is described in istio.io documentation.
message MixerConfig {
  MixerAdaptersConfig adapters = 1;

  bool enabled = 2;

  map<string, string> env = 3;

  string image = 4;

  MixerPolicyConfig policy = 5;

  MixerTelemetryConfig telemetry = 6;
}

// MixerPolicyConfig is described in istio.io documentation.
message MixerPolicyConfig {
  bool autoscaleEnabled = 1;

  uint32 autoscaleMax = 2;

  uint32 autoscaleMin = 3;

  CPUTargetUtilizationConfig cpu = 4;

  bool enabled = 5;

  string image = 6;

  // 	PodAnnotations   map[string]interface{}      `json:"podAnnotations,omitempty"`
  uint32 replicaCount = 7;
}

// MixerTelemetryConfig is described in istio.io documentation.
message MixerTelemetryConfig {
  MixerAdaptersConfig adapters = 1;

  bool autoscaleEnabled = 2;

  uint32 autoscaleMax = 3;

  uint32 autoscaleMin = 4;

  CPUTargetUtilizationConfig cpu = 5;

  bool enabled = 6;

  map<string, string> env = 7;

  string image = 8;

  LoadSheddingConfig loadshedding = 9;

  // 	NodeSelector           map[string]interface{}     `json:"nodeSelector,omitempty"`
  // 	PodAnnotations         map[string]interface{}     `json:"podAnnotations,omitempty"`
  uint32 replicaCount = 10;

  k8s.io.api.core.v1.ResourceRequirements resources = 11;

  bool sessionAffinityEnabled = 12;
}

// MultiClusterConfig specifies the configuration for Istio mesh across multiple clusters through the istio gateways.
message MultiClusterConfig {
  // Enables the connection between two kubernetes clusters via their respective ingressgateway services. Use if the pods in each cluster cannot directly talk to one another.
  bool enabled = 1;
}

// NodeAgentConfig is described in istio.io documentation.
message NodeAgentConfig {
  bool enabled = 1;

  // 	Env          map[string]interface{} `json:"env,omitempty"`
  string image = 2;

  // NodeSelector map[string]interface{} `json:"nodeSelector,omitempty"`
}

// OutboundTrafficPolicyConfig controls the default behavior of the sidecar for handling outbound traffic from the application.
message OutboundTrafficPolicyConfig {
  // Specifies the sidecar's default behavior when handling outbound traffic from the application.
  enum mode {
    //outbound traffic to unknown destinations will be allowed, in case there are no services or ServiceEntries for the destination port
    ALLOW_ANY = 0;
    //restrict outbound traffic to services defined in the service registry as well as those defined through ServiceEntries
    REGISTRY_ONLY = 1;
  }
}

// PilotConfig is described in istio.io documentation.
message PilotConfig {
  bool enabled = 1;

  bool autoscaleEnabled = 2;

  uint32 autoscaleMin = 3;

  uint32 autoscaleMax = 4;

  uint32 replicaCount = 5;

  string image = 6;

  bool sidecar = 7;

  double traceSampling = 8;

  k8s.io.api.core.v1.ResourceRequirements resources = 9;

  string configNamespace = 10;

  CPUTargetUtilizationConfig cpu = 11;

  // 	NodeSelector                     map[string]interface{}      `json:"nodeSelector,omitempty"`
  google.protobuf.Duration keepaliveMaxServerConnectionAge = 12;

  map<string, string> deploymentLabels = 13;

  // 	MeshNetworks                     map[string]interface{}      `json:"meshNetworks,omitempty"`
  // 	PodAntiAffinityLabelSelector     []map[string]interface{}    `json:"podAntiAffinityLabelSelector"`
  // 	PodAntiAffinityTermLabelSelector []map[string]interface{}    `json:"podAntiAffinityTermLabelSelector"`
  bool configMap = 14;

  PilotIngressConfig ingress = 15;

  bool useMCP = 16;

  map<string, string> env = 17;

  PilotPolicyConfig policy = 18;

  PilotTelemetryConfig telemetry = 19;
}

// PilotIngressConfig is described in istio.io documentation.
message PilotIngressConfig {
  string ingressService = 1;

  enum ingressControllerMode {
    //all Ingress resources without annotation or with istio annotation.
    DEFAULT = 0;
    //only with istio annotation.
    STRICT = 1;
    //no ingress or sync.
    OFF = 2;
  }
  //Value to set on "kubernetes.io/ingress.class" annotations to activate, if mode is STRICT
  string ingressClass = 3;
}

// PilotPolicyConfig is described in istio.io documentation.
message PilotPolicyConfig {
  bool enabled = 1;
}

// PilotTelemetryConfig is described in istio.io documentation.
message PilotTelemetryConfig {
  bool enabled = 1;
}

// PortsConfig is described in istio.io documentation.
message PortsConfig {
  string name = 1;

  int32 port = 2;

  int32 nodePort = 3;

  int32 targetPort = 4;
}

// PrometheusConfig is described in istio.io documentation.
message PrometheusConfig {
  bool createPrometheusResource = 1;

  bool enabled = 2;

  uint32 replicaCount = 3;

  string hub = 4;

  string tag = 5;

  string retention = 6;

  // 	NodeSelector             map[string]interface{}    `json:"nodeSelector,omitempty"`
  google.protobuf.Duration scrapeInterval = 7;

  string contextPath = 8;

  AddonIngressConfig ingress = 9;

  PrometheusServiceConfig service = 10;

  PrometheusSecurityConfig security = 11;
}

// PrometheusMixerAdapterConfig is described in istio.io documentation.
message PrometheusMixerAdapterConfig {
  bool enabled = 1;

  google.protobuf.Duration metricsExpiryDuration = 2;
}

// PrometheusSecurityConfig is described in istio.io documentation.
message PrometheusSecurityConfig {
  bool enabled = 1;
}

// PrometheusServiceConfig is described in istio.io documentation.
message PrometheusServiceConfig {
  // 	Annotations map[string]interface{}           `json:"annotations,omitempty"`
  PrometheusServiceNodePortConfig nodePort = 1;
}

// PrometheusServiceNodePortConfig is described in istio.io documentation.
message PrometheusServiceNodePortConfig {
  bool enabled = 1;

  uint32 port = 2;
}

// ProxyConfig specifies how proxies are configured within Istio.
message ProxyConfig {
  // Specifies the path to write the sidecar access log file.
  string accessLogFile = 1;

  // Configures how and what fields are displayed in sidecar access log.
  string accessLogFormat = 2;

  // Configure the access log for sidecar to JSON or TEXT
  enum accessLogEncoding {
    JSON = 0;
    TEXT = 1;
  }

  enum autoInject {
    ENABLED = 0;
    DISABLED = 1;
  }

  // Domain for the cluster - defaults to .cluster.local, but k8s allows this to be customized, can be prod.example.com
  string clusterDomain = 5;

  string componentLogLevel = 6;

  // Controls number of proxy worker threads.
  uint32 concurrency = 7;

  // Configures the DNS refresh rate for Envoy cluster of type STRICT_DNS.
  google.protobuf.Duration dnsRefreshRate = 8;

  // Enables core dumps for newly injected sidecars.
  bool enableCoreDump = 9;

  EnvoyMetricsConfig envoyMetricsService = 10;

  EnvoyMetricsConfig envoyStatsd = 11;

  // Specifies the Istio ingress ports not to capture.
  string excludeInboundPorts = 12;

  // Lists the excluded IP ranges of Istio egress traffic that the sidecar captures.
  string excludeIPRanges = 13;

  // Image name or path for the proxy.
  string image = 14;

  // Specifies the Istio ingress ports to capture.
  string includeInboundPorts = 15;

  // Lists the IP ranges of Istio egress traffic that the sidecar captures.
  string includeIPRanges = 16;

  string kubevirtInterfaces = 17;

  string logLevel = 18;

  bool privileged = 19;

  // Sets the initial delay for readiness probes in seconds.
  uint32 readinessInitialDelaySeconds = 20;

  // Sets the interval between readiness probes in seconds.
  uint32 readinessPeriodSeconds = 21;

  // Sets the number of successive failed probes before indicating readiness failure.
  uint32 readinessFailureThreshold = 22;

  // Default port used for the Pilot agent's health checks.
  uint32 statusPort = 23;

  k8s.io.api.core.v1.ResourceRequirements resources = 24;

  // Specifies which tracer to use.
  enum tracer {
    ZIPKIN = 0;
    LIGHTSTEP = 1;
    DATADOG = 2;
  }
}

// ProxyInitConfig specifies the configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
message ProxyInitConfig {
  // Specifies the image for the proxy_init container.
  string image = 1;
}

// ResourcesRequestsConfig is described in istio.io documentation.
message ResourcesRequestsConfig {
  string cpu = 1;

  string memory = 2;
}

// SDSConfig specifies the configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
message SDSConfig {
  // Specifies whether the SecretDiscoveryService is enabled or not.
  bool enabled = 1;

  // Specifies the Unix Domain Socket through which Envoy communicates with NodeAgent SDS to get key/cert for mTLS.
  string udsPath = 2;

  // Enables SDS use of k8s sa normal JWT to request for certificates.
  bool useNormalJwt = 3;

  // Enables SDS use of trustworthy JWT to request for certificates.
  bool useTrustworthyJwt = 4;
}

// SecretVolume is described in istio.io documentation.
message SecretVolume {
  string mountPath = 1;

  string name = 2;

  string secretName = 3;
}

// SecurityConfig is described in istio.io documentation.
message SecurityConfig {
  bool enabled = 1;

  uint32 replicaCount = 2;

  string image = 3;

  bool selfSigned = 4;

  string trustDomain = 5;

  map<string, string> dnsCerts = 6;

  bool createMeshPolicy = 7;

  // NodeSelector     map[string]interface{} `json:"nodeSelector,omitempty"`
}

// ServiceConfig is described in istio.io documentation.
message ServiceConfig {
  // 	Annotations  map[string]interface{} `json:"annotations,omitempty"`
  uint32 externalPort = 1;

  string name = 2;
  // Type         v1.ServiceType     `json:"type,omitempty"`
}

// SidecarInjectorConfig is described in istio.io documentation.
message SidecarInjectorConfig {
  // 	AlwaysInjectSelector             []map[string]interface{} `json:"alwaysInjectSelector,omitempty"`
  bool enabled = 1;

  bool enableNamespacesByDefault = 2;

  string image = 3;

  // 	NodeSelector                     map[string]interface{}   `json:"nodeSelector,omitempty"`
  // 	NeverInjectSelector              []map[string]interface{} `json:"neverInjectSelector,omitempty"`
  // 	PodAntiAffinityLabelSelector     []map[string]interface{} `json:"podAntiAffinityLabelSelector"`
  // 	PodAntiAffinityTermLabelSelector []map[string]interface{} `json:"podAntiAffinityTermLabelSelector"`
  uint32 replicaCount = 4;

  bool rewriteAppHTTPProbe = 5;

  bool selfSigned = 6;
}

// StdioMixerAdapterConfig is described in istio.io documentation.
message StdioMixerAdapterConfig {
  bool enabled = 1;

  bool outputAsJson = 2;
}

// TracerConfig specifies the configuration for each of the supported tracers.
message TracerConfig {
  // Specifies the configuration for the datadog tracing service.
  TracerDatadogConfig datadog = 1;

  // Specifies the configuration for the lightstep tracing service.
  TracerLightStepConfig lightstep = 2;

  // Specifies the configuration for the zipkin tracing service.
  TracerZipkinConfig zipkin = 3;
}

// TracerDatadogConfig specifies the configuration for the datadog tracing service.
message TracerDatadogConfig {
  // Specifies address in host:port format for reporting trace data to the Datadog agent.
  string address = 1;
}

// TracerLightStepConfig specifies the configuration for the lightstep tracing service.
message TracerLightStepConfig {
  // Sets the lightstep satellite pool address.
  string address = 1;

  // Sets the lightstep access token.
  string accessToken = 2;

  // Sets path to the file containing the cacert to use when verifying TLS.
  string cacertPath = 3;

  // Enables lightstep secure connection.
  bool secure = 4;
}

// TracerZipkinConfig specifies the configuration for the zipkin tracing service.
message TracerZipkinConfig {
  // Specifies address in host:port format for reporting trace data in zipkin format.
  string address = 1;
}

// TracingConfig is described in istio.io documentation.
message TracingConfig {
  bool enabled = 1;

  TracingIngressConfig ingress = 2;

  TracingJaegerConfig jaeger = 3;

  // 	NodeSelector map[string]interface{} `json:"nodeSelector,omitempty"`
  string provider = 4;

  ServiceConfig service = 5;

  TracingZipkinConfig zipkin = 6;
}

// TracingIngressConfig is described in istio.io documentation.
message TracingIngressConfig {
  bool enabled = 1;
}

// TracingJaegerConfig is described in istio.io documentation.
message TracingJaegerConfig {
  string hub = 1;

  string tag = 2;

  TracingJaegerMemoryConfig memory = 3;
}

// TracingJaegerMemoryConfig is described in istio.io documentation.
message TracingJaegerMemoryConfig {
  uint32 max_traces = 1;
}

// TracingZipkinConfig is described in istio.io documentation.
message TracingZipkinConfig {
  string hub = 1;

  string tag = 2;

  uint32 probeStartupDelay = 3;

  uint32 queryPort = 4;

  k8s.io.api.core.v1.ResourceRequirements resources = 5;

  string javaOptsHeap = 6;

  uint32 maxSpans = 7;

  TracingZipkinNodeConfig node = 8;
}

// TracingZipkinNodeConfig is described in istio.io documentation.
message TracingZipkinNodeConfig {
  uint32 cpus = 1;
}

message Values {
  CertManagerConfig certmanager = 1;

  CNIConfig istio_cni = 2;

  CoreDNSConfig istiocoredns = 3;

  GalleyConfig galley = 4;

  GatewaysConfig gateways = 5;

  GlobalConfig global = 6;

  // 	Grafana         map[string]interface{} `json:"grafana,omitempty"`
  MixerConfig mixer = 7;

  NodeAgentConfig nodeagent = 8;

  PilotConfig pilot = 9;

  PrometheusConfig prometheus = 10;

  SecurityConfig security = 11;

  SidecarInjectorConfig sidecarInjectorWebhook = 12;

  TracingConfig tracing = 13;
}

// ZeroVPNConfig is described in istio.io documentation.
message ZeroVPNConfig {
  bool enabled = 1;

  string suffix = 2;
}

