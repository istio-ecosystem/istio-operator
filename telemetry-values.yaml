certmanager:
  enabled: false
  namespace: istio-system
citadel:
  enabled: false
  namespace: istio-system
clusterResources: true
galley:
  enabled: false
  namespace: istio-control
gateways:
  istio-egressgateway:
    enabled: false
    namespace: istio-control
  istio-ingressgateway:
    enabled: false
    namespace: istio-control
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configNamespace: istio-control
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableTracing: true
  enabled: true
  hub: gcr.io/istio-release
  imagePullPolicy: Always
  istioNamespace: istio-control
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  logging:
    level: default:info
  meshExpansion: {}
  mtls:
    enabled: false
  multiCluster: {}
  namespace: istio-system
  oneNamespace: false
  outboundTrafficPolicy:
    mode: 0
  policyCheckFailOpen: false
  policyNamespace: istio-policy
  prometheusNamespace: istio-system
  proxy:
    accessLogEncoding: TEXT
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyStatsd:
      enabled: false
    image: proxyv2
    includeIPRanges: '*'
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
  sds:
    enabled: false
    udsPath: ""
    useNormalJwt: false
    useTrustworthyJwt: false
  securityNamespace: istio-system
  tag: master-latest-daily
  telemetryNamespace: istio-telemetry
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  useMCP: false
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources: null
  enabled: false
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    annotations: null
    enabled: false
    hosts:
    - grafana.local
    tls: null
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    loadBalancerIP: null
    loadBalancerSourceRanges: null
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    grafanaURL: null
    jaegerURL: null
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    annotations: null
    enabled: false
    hosts:
    - kiali.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  prometheusNamespace: null
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      enabled: false
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    enabled: false
    namespace: istio-policy
  telemetry:
    enabled: true
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    namespace: istio-telemetry
    sessionAffinityEnabled: false
nodeagent:
  enabled: false
  namespace: istio-system
pilot:
  enabled: false
  namespace: istio-control
prometheus:
  contextPath: /prometheus
  enabeld: false
  enabled: true
  hub: docker.io/prom
  ingress:
    annotations: null
    enabled: false
    hosts:
    - prometheus.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
sidecarInjectorWebhook:
  enabled: false
  namespace: istio-control
tracing:
  enabled: false
  ingress:
    annotations: null
    enabled: false
    hosts: null
    tls: null
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""
